{"version":3,"sources":["components/context.js","components/network.js","components/Loader.js","services/indexeddb.js","services/session.js","components/Stage.js","components/constants.js","components/LineChartWeeklyPerformance.js","components/Report.js","pages/PlayPage.js","pages/LoginPage.js","services/github.js","components/CollectionList.js","pages/CollectionListPage.js","components/BarChartHistogram.js","services/reporting.js","services/settings.js","pages/ReportPage.js","components/AppNav.js","components/EditCollectionModal.js","pages/RepoContentsPage.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["DispatchContext","React","createContext","StateContext","BASE_URL","process","request","url","method","a","body","localStorage","getItem","headers","fetch","catch","error","ok","handleResponse","res","contentType","get","match","status","json","text","api","uri","post","payload","JSON","stringify","put","patch","delete","Modal","isOpen","contentClassName","ModalBody","className","db","init","openDB","upgrade","createObjectStore","keyPath","createIndex","getDb","renewSession","transaction","store","openCursor","cursor","terms","push","value","continue","createSession","txSession","sessionId","Date","now","toString","Promise","all","add","id","corrects","wrongs","count","length","nextWordIndex","done","tx","clear","sort","Math","random","map","term","index","getSession","objectStore","session","getNextTerm","storeSession","hasNext","getFromIndex","updateStats","entry","correct","stats","concat","getSessionStats","reduce","acc","find","word","termId","gender","tags","includes","der","die","das","dispatch","useContext","state","history","useHistory","useState","busy","setStatus","showingAnswer","setShowingAnswer","timestamp","setTimestamp","fetchNextWord","useCallback","type","Error","onSelectAnswer","answer","getIn","wordTags","seconds","status_code","replace","expired","article","showReport","report","onSkipClick","onNextClick","useEffect","onClick","style","wordBreak","ModalFooter","Button","color","Loader","defaultLineDataSeriesOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","weeklyPerformance","labels","date","week","getMonth","getDate","confidence","confidence_factor","toFixed","correct_factor","data","datasets","label","width","height","options","scales","yAxes","ticks","max","min","stepSize","maintainAspectRatio","layout","padding","sessionRatios","role","LineChartWeeklyPerformance","toJS","props","recaptcha","setRecaptcha","pathParams","useParams","onStartSession","load","_recaptcha","onSuccess","response","token","accessToken","profileObj","setItem","profile","marginTop","Stage","Report","to","disabled","block","clientId","responseType","params","location","useLocation","console","log","Alert","toggle","isSignedIn","content","parse","encoding","escaped","decodeURIComponent","escape","atob","parsed","DEFAULT_REPO_URL","getRepoContents","repoUrl","contents","self","_links","packageContent","getCollections","collections","item","getTermsByCollection","file","flag","decoded","split","filter","Boolean","line","parts","meaning","words","onReviewClick","onEditClick","editable","key","visible","name","newCollection","setNewCollection","newCollectionNameRef","useRef","then","myCollections","collection","onNewCollectionCreate","network","current","size","CollectionList","ModalHeader","Form","FormGroup","Label","Input","innerRef","borderWidth","hoverBackgroundColor","hoverBorderColor","histogram","correct_count","wrong_count","xAxes","distribution","getLocalReports","weekly","worst","worstPerformers","Object","entries","seconds_correct","total_count","total_seconds","round","slice","histogramData","floor","set","property","path","obj","deepGet","bgClasses","MAS","FEM","NEU","classFromTags","exec","setReport","currentCollection","allTerms","_terms","filteringKeys","Card","CardHeader","CardBody","Badge","pill","opacity","BarChartHistogram","onLogout","window","Navbar","light","NavbarBrand","Nav","exact","NavItem","buttonText","onLogoutSuccess","debouncedNetwork","s","proxy","keys","forEach","defineProperty","_debounce","debounce","debouncedSearch","inputValue","callback","replaceState","leading","trailing","collectionId","setCollection","query","setQuery","shownCount","setShownCount","onCloseClick","onEditCollectionNameChanged","target","p","onNewTermSelected","choice","action","term_id","onTermRemoved","_c","onChange","placeholder","onInputChange","loadOptions","ListGroup","flush","ListGroupItem","onChooseCollection","settings","App","LoginPage","AppNav","PlayPage","ReportPage","render","CollectionListPage","EditCollectionModal","RepoContentsPage","hostname","initialState","fromJS","isLoggedIn","gameSession","repo","defaultCollection","setIn","updateIn","unshift","Index","useReducer","reducer","Provider","initDb","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.29575eea.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n","import { default as _debounce } from 'lodash.debounce';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst prefix = 'wg'; // wordgame\n\n/**\n *\n * @param url\n * @param method\n * @param body\n * @returns {Promise<Response|{ ok: boolean }>}\n */\nconst request = async (url, method, body = null) => {\n  const token = localStorage.getItem(`${prefix}:token`);\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    // headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Normalize reponse to { ok, error }\n  return fetch(\n    url,\n    method === 'GET' || method === 'DELETE'\n      ? { headers, method }\n      : {\n          headers,\n          method,\n          body,\n        }\n  ).catch((error) => {\n    return {\n      ok: false,\n      error,\n    };\n  });\n};\n\nconst handleResponse = async (res) => {\n  if (!res) {\n    return { ok: false };\n  }\n\n  try {\n    const contentType = res.headers.get('content-type');\n    if (contentType && contentType.match(/json/)) {\n      if (res.status >= 400) {\n        return {\n          ok: false,\n          error: await res.json(),\n        };\n      }\n\n      return res.json();\n    } else {\n      return {\n        ok: false,\n        error: await res.text(),\n      };\n    }\n  } catch (error) {\n    return { ok: false, error };\n  }\n};\n\nconst api = {\n  request,\n  async get(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'GET');\n    return handleResponse(res);\n  },\n  async post(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'POST',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async put(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PUT',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async patch(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PATCH',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async delete(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'DELETE');\n    return handleResponse(res);\n  },\n};\n\nexport const debounce = (s) => {\n  const proxy = {};\n  Object.keys(api).forEach((key) => {\n    Object.defineProperty(proxy, key, {\n      value: _debounce(api[key], s * 1000),\n    });\n  });\n\n  return proxy;\n};\n\nexport default api;\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\n\nexport default () => (\n  <Modal isOpen={true} contentClassName=\"bg-transparent border-0\">\n    <ModalBody>\n      <div className=\"loader\">Loading...</div>\n    </ModalBody>\n  </Modal>\n);\n","import { openDB } from 'idb';\n\nconst DB_NAME = 'WordGame';\nexport const TBL_SETTINGS = 'settings';\nexport const TBL_SESSIONS = 'sessions';\nexport const TBL_TERMS = 'terms';\n\nlet db = null;\n\nexport const init = async () => {\n  db = await openDB(DB_NAME, 5, {\n    upgrade(db) {\n      db.createObjectStore(TBL_SETTINGS, {\n        keyPath: 'key',\n      });\n      db.createObjectStore(TBL_SESSIONS, {\n        keyPath: 'id',\n      });\n      db.createObjectStore(TBL_TERMS, {\n        keyPath: 'id',\n      }).createIndex('index', 'index');\n    },\n  });\n};\n\nexport const getDb = async () => {\n  if (db) {\n    return db;\n  }\n\n  await init();\n  return db;\n};\n","import { getDb } from './indexeddb';\n\nconst TBL_SESSIONS = 'sessions';\nconst TBL_TERMS = 'terms';\n\nexport const renewSession = async () => {\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_TERMS, 'readonly').store.openCursor();\n  const terms = [];\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  return createSession(terms);\n};\n\nexport const createSession = async (terms) => {\n  const db = await getDb();\n  const txSession = db.transaction(TBL_SESSIONS, 'readwrite');\n  const sessionId = Date.now().toString();\n  await Promise.all([\n    txSession.store.add({\n      id: sessionId,\n      corrects: 0,\n      wrongs: 0,\n      count: terms.length,\n      nextWordIndex: 0,\n    }),\n    txSession.done,\n  ]);\n\n  const tx = db.transaction(TBL_TERMS, 'readwrite');\n  await tx.store.clear();\n  await Promise.all(\n    terms\n      .sort(() => Math.random() - 0.5)\n      .map((term, index) => {\n        return tx.store.add({\n          ...term,\n          index,\n        });\n      })\n  );\n\n  await tx.done;\n\n  return sessionId;\n};\n\nexport const getSession = async (sessionId) => {\n  const db = await getDb();\n  const store = db.transaction(TBL_SESSIONS).objectStore(TBL_SESSIONS);\n  const session = await store.get(sessionId);\n\n  return session;\n};\n\nexport const getNextTerm = async (sessionId) => {\n  const db = await getDb();\n  const storeSession = db\n    .transaction(TBL_SESSIONS, 'readwrite')\n    .objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  const { nextWordIndex, count } = session;\n  if (nextWordIndex === -1) {\n    return {\n      term: null,\n      hasNext: false,\n    };\n  }\n  await storeSession.put({\n    ...session,\n    nextWordIndex: nextWordIndex + 1 < count ? nextWordIndex + 1 : -1,\n  });\n\n  const term = await db.getFromIndex(TBL_TERMS, 'index', nextWordIndex);\n\n  return {\n    term,\n    hasNext: nextWordIndex + 1 < count,\n  };\n};\n\nexport const updateStats = async (sessionId, entry) => {\n  const db = await getDb();\n  const tx = db.transaction(TBL_SESSIONS, 'readwrite');\n  const storeSession = tx.objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  await storeSession.put({\n    ...session,\n    corrects: session.corrects + entry.correct,\n    wrongs: session.wrongs + !entry.correct,\n    stats: (session.stats || []).concat(entry),\n  });\n  await tx.done;\n\n  return {\n    ok: true,\n  };\n};\n\nexport const getSessionStats = async (sessionId) => {\n  const terms = [];\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_TERMS).store.openCursor();\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  const session = await db.get(TBL_SESSIONS, sessionId);\n\n  const stats = (session.stats || []).reduce(\n    (acc, entry) => {\n      const term = terms.find(({ word: key }) => key === entry.termId);\n      const gender = term.tags.includes('MAS')\n        ? 'der'\n        : term.tags.includes('FEM')\n        ? 'die'\n        : term.tags.includes('NEU')\n        ? 'das'\n        : null;\n      if (!gender) {\n        return acc;\n      }\n\n      if (entry.correct) {\n        acc[gender].corrects += 1;\n      } else {\n        acc[gender].wrongs += 1;\n      }\n\n      return acc;\n    },\n    {\n      der: { corrects: 0, wrongs: 0 },\n      die: { corrects: 0, wrongs: 0 },\n      das: { corrects: 0, wrongs: 0 },\n    }\n  );\n\n  return stats;\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport Loader from './Loader';\nimport { getNextTerm, getSessionStats, updateStats } from '../services/session';\n\nexport default ({ sessionId }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [showingAnswer, setShowingAnswer] = useState(null);\n\n  const [timestamp, setTimestamp] = useState(null);\n\n  const fetchNextWord = useCallback(async () => {\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_PENDING });\n    const { term, hasNext, error } = await getNextTerm(sessionId);\n\n    if (!term) {\n      dispatch({ type: ACTION_NEXT_WORD, status: STATUS_ERROR, error: new Error('Session expired') });\n      return;\n    }\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_OK, term, hasNext });\n    setTimestamp(Date.now() / 1000);\n  }, [dispatch, state, sessionId]);\n\n  const onSelectAnswer = useCallback(\n    async (answer) => {\n      const termId = state.getIn(['gameSession', 'term', 'id']);\n      const wordTags = state.getIn(['gameSession', 'term', 'tags']);\n      const correct = wordTags.includes(answer);\n\n      const { ok, error } = await updateStats(sessionId, {\n        termId,\n        correct,\n        seconds: Date.now() / 1000 - timestamp,\n      });\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return;\n      }\n\n      if (!correct) {\n        setShowingAnswer({\n          correct,\n          article: wordTags.includes('MAS')\n            ? 'der'\n            : wordTags.includes('FEM')\n            ? 'die'\n            : 'das',\n        });\n      } else {\n        if (state.getIn(['gameSession', 'hasNext'])) {\n          await fetchNextWord();\n        } else {\n          showReport();\n        }\n      }\n    },\n    [dispatch, timestamp, state.getIn(['gameSession', 'term'])]\n  );\n\n  const showReport = useCallback(async () => {\n    setStatus({ busy: true });\n\n    const sessionId = state.getIn(['gameSession', 'id']);\n\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_PENDING, sessionId });\n    const stats = await getSessionStats(sessionId);\n\n    dispatch({\n      type: ACTION_SHOW_REPORT,\n      status: STATUS_OK,\n      report: { session: stats },\n    });\n  }, [dispatch, state.getIn(['gameSession', 'term'])]);\n\n  const onSkipClick = useCallback(async () => {\n    await fetchNextWord();\n  }, [dispatch, state.getIn(['gameSession', 'term'])]);\n\n  const onNextClick = useCallback(async () => {\n    setShowingAnswer(null);\n    if (state.getIn(['gameSession', 'hasNext'])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [\n    dispatch,\n    state.getIn(['gameSession', 'term']),\n    state.getIn(['gameSession', 'hasNext']),\n  ]);\n\n  useEffect(() => {\n    (async () => {\n      await fetchNextWord();\n    })();\n  }, []);\n\n  const term = state.getIn(['gameSession', 'term']);\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2 className=\"text-center text-black-50\">Play</h2>\n        {!term && <p className=\"text-center\">Loading...</p>}\n        {!!term && (\n          <>\n            <div className=\"term mt-5 mb-5\">\n              <div className=\"text-center display-2 text-break\">\n                {term.get('word')}\n              </div>\n              <button className=\"btn btn-sm btn-link\">Meaning >></button>\n            </div>\n\n            <div className=\"actions text-center\">\n              <div className=\"btn-group w-75\">\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-masculine\"\n                  onClick={() => onSelectAnswer('MAS')}\n                >\n                  Der\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-feminine\"\n                  onClick={() => onSelectAnswer('FEM')}\n                >\n                  Die\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-neuter\"\n                  onClick={() => onSelectAnswer('NEU')}\n                >\n                  Das\n                </button>\n              </div>\n              <div className=\"btn-group w-100 mt-5\">\n                <button\n                  className=\"btn btn-primary btn-sm\"\n                  onClick={onSkipClick}\n                >\n                  Skip\n                </button>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button className=\"btn btn-light\" onClick={showReport}>\n                  I'm done for now\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showingAnswer && (\n        <Modal isOpen={true}>\n          <ModalBody>\n            <div\n              className=\"display-2 text-center\"\n              style={{ wordBreak: 'break-word' }}\n            >\n              <span className=\"font-weight-lighter text-muted\">\n                {term.get('word')}\n              </span>\n              , <br />\n              <span className=\"font-weight-bold\">{showingAnswer.article}</span>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={onNextClick} className=\"mx-auto\">\n              Next\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n      {!!status.busy && <Loader />}\n    </section>\n  );\n};\n","export const STATUS_OK = 'ok';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_PENDING = 'pending';\n\nexport const SESSION_STATUS_PENDING = 'pending';\nexport const SESSION_STATUS_PLAYING = 'playing';\nexport const SESSION_STATUS_DONE = 'done';\n\nexport const ACTION_LOGIN = 'user/login';\nexport const ACTION_LOGOUT = 'user/logout';\nexport const ACTION_START_SESSION = 'user/start-session';\nexport const ACTION_NEXT_WORD = 'user/next-term';\nexport const ACTION_SHOW_REPORT = 'user/show-report';\nexport const ACTION_LIST_COLLECTIONS = 'user/list-collections';\nexport const ACTION_ADD_TO_COLLECTION = 'user/add-to-collections';\nexport const ACTION_CREATE_COLLECTION = 'user/create-collection';\n\nexport const ACTION_LIST_REPO_CONTENTS = 'repo/list-contents';\nexport const ACTION_CHOOSE_COLLECTION = 'repo/choose-collection';\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nconst formatDate = (date) => `${date.getMonth() + 1}.${date.getDate()}`;\n\nexport default ({ weeklyPerformance }) => {\n  const labels = weeklyPerformance.map(({ week }) =>\n    formatDate(new Date(week * 7 * 86400 * 1000))\n  );\n  const confidence = weeklyPerformance.map(({ confidence_factor }) =>\n    (confidence_factor * 100).toFixed(2)\n  );\n  const correct = weeklyPerformance.map(({ correct_factor }) =>\n    (correct_factor * 100).toFixed(2)\n  );\n\n  return (\n    <Line\n      data={{\n        labels,\n        datasets: [\n          {\n            label: 'Correct',\n            data: correct,\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Confidence',\n            data: confidence,\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: '#C0122A',\n            borderColor: '#f3132c',\n          },\n        ],\n      }}\n      width={100}\n      height={40}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { max: 100, min: 0, stepSize: 20 } }],\n        },\n        maintainAspectRatio: true,\n        layout: {\n          padding: 0,\n        },\n      }}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { StateContext } from './context';\nimport LineChartWeeklyPerformance from './LineChartWeeklyPerformance';\n\n/**\n * Post-session report\n * @returns {*}\n */\nexport default () => {\n  const state = useContext(StateContext);\n\n  const session = state.getIn(['report', 'session']);\n  const weeklyPerformance = state.getIn(['report', 'weekly_performance']);\n\n  const sessionRatios = {\n    der:\n      session.getIn(['der', 'corrects']) /\n      (session.getIn(['der', 'corrects']) + session.getIn(['der', 'wrongs'])),\n    die:\n      session.getIn(['die', 'corrects']) /\n      (session.getIn(['die', 'corrects']) + session.getIn(['die', 'wrongs'])),\n    das:\n      session.getIn(['das', 'corrects']) /\n      (session.getIn(['das', 'corrects']) + session.getIn(['das', 'wrongs'])),\n  };\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2>Report</h2>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3>Session Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DER</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-masculine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.der * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DIE</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-feminine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.die * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DAS</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-neuter\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.das * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {!!weeklyPerformance && (\n          <div className=\"card mt-4\">\n            <div className=\"card-header\">\n              <h3 className=\"mb-0\">Weekly Report</h3>\n            </div>\n            <div className=\"card-body\">\n              <LineChartWeeklyPerformance\n                weeklyPerformance={weeklyPerformance.toJS()}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { DispatchContext, StateContext } from '../components/context';\nimport network from '../components/network';\nimport {\n  ACTION_LOGIN,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport Stage from '../components/Stage';\nimport Report from '../components/Report';\nimport GoogleLogin from 'react-google-login';\nimport { Button } from 'reactstrap';\nimport { load } from 'recaptcha-v3';\nimport { createSession, getSession, renewSession } from '../services/session';\n\nconst CAPTCHA_CLIENT_KEY = '6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [recaptcha, setRecaptcha] = useState(null);\n  const history = useHistory();\n  const pathParams = useParams();\n\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await renewSession();\n\n    history.replace(`/play/${sessionId}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (pathParams.sessionId) {\n        const session = await getSession(pathParams.sessionId);\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n      } else {\n        if (localStorage.getItem('wg:token')) {\n          history.replace('/collections');\n        } else {\n          history.replace('/login');\n        }\n      }\n    })();\n  }, [dispatch, pathParams.sessionId]);\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem('wg:profileObj', profileObj);\n      localStorage.setItem('wg:token', token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n        profile: profileObj,\n      });\n      history.replace('/collections');\n    },\n    [dispatch, history]\n  );\n\n  const session = state.getIn(['gameSession']);\n\n  return (\n    <div className=\"container play-page\">\n      {!(session && session.get('id')) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            <div\n              className=\"btn btn-primary btn-lg w-100\"\n              style={{ marginTop: '75%' }}\n            >\n              START\n            </div>\n          </div>\n        </section>\n      )}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_PLAYING\n      ) && <Stage sessionId={session.get('id')} />}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_DONE\n      ) && <Report sessionId={session.get('id')} />}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_DONE\n      ) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            {state.getIn(['profile', 'isLoggedIn']) && (\n              <Link className=\"btn btn-sm btn-link btn-block\" to=\"/collections\">\n                Back to collections\n              </Link>\n            )}\n            {!state.getIn(['profile', 'isLoggedIn']) && (\n              <>\n                <div className=\"row mt-2 justify-content-center\">\n                  <div className=\"col-6\">\n                    <Button\n                      disabled={!recaptcha}\n                      color=\"primary\"\n                      block\n                      onClick={onStartSession}\n                    >\n                      TRY AGAIN!\n                    </Button>\n                  </div>\n                </div>\n\n                <GoogleLogin\n                  clientId={\n                    '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n                  }\n                  onSuccess={onSuccess}\n                  responseType={'code'}\n                  className=\"mt-5\"\n                />\n                <p className=\"text-muted\">...to keep track of your progress</p>\n              </>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { load } from 'recaptcha-v3';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { Alert, Button } from 'reactstrap';\nimport { DispatchContext } from '../components/context';\nimport { ACTION_LOGIN, STATUS_OK } from '../components/constants';\nimport network from '../components/network';\nimport { createSession } from '../services/session';\n\nconst CAPTCHA_CLIENT_KEY = '6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh';\n\nexport default () => {\n  const [recaptcha, setRecaptcha] = useState(null);\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem('wg:profile', JSON.stringify(profileObj));\n      localStorage.setItem('wg:token', token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n      });\n      history.replace('/collections');\n    },\n    [dispatch, history]\n  );\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await createSession([]);\n    history.replace(`/play/${sessionId}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    console.log(params);\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  return (\n    <div className=\"container login-page\">\n      {!!(location.state && location.state.expired) && (\n        <Alert\n          className=\"mt-2 alert-float\"\n          isOpen={true}\n          color=\"warning\"\n          toggle={() => history.replace('/login')}\n        >\n          <h4 className=\"alert-heading\">Your session has expired.</h4>\n          <p className=\"mt-3 text-center text-sm-left\">\n            Without logging in, your session lasts for only for 10 minutes.\n          </p>\n        </Alert>\n      )}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h3\n            style={{\n              marginTop: '50%',\n            }}\n          >\n            Hallo Deutsch\n          </h3>\n          <GoogleLogin\n            clientId={\n              '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n            }\n            onSuccess={onSuccess}\n            responseType={'token'}\n            isSignedIn={true}\n          />\n          <p className=\"text-muted\">\n            ...to coup with the insane irregularity in the German language.\n          </p>\n        </div>\n      </section>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <Button\n            disabled={!recaptcha}\n            color=\"primary\"\n            block\n            onClick={onStartSession}\n          >\n            TRY NOW!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import api from '../components/network';\n\nasync function content(url, parse) {\n  const res = await api.request(url, 'GET');\n  if (!res.ok) {\n    throw new Error('Bad Request');\n  }\n\n  const data = await res.json();\n  if (data.encoding !== 'base64') {\n    throw new Error('Bad Request');\n  }\n\n  const escaped = decodeURIComponent(escape(atob(data.content)));\n  const parsed = parse(escaped);\n  return parsed;\n}\n\nconst DEFAULT_REPO_URL = 'https://api.github.com/repos/khanhhua/wordgame-data';\n\nexport const getRepoContents = async (repoUrl = DEFAULT_REPO_URL) => {\n  try {\n    const res = await api.request(`${repoUrl}/contents`, 'GET');\n    const contents = await res.json();\n    return Promise.all(\n      contents.map(async ({ _links: { self } }) => {\n        const url = self.replace('?ref=master', '');\n        const packageContent = await content(\n          `${url}/package.json`,\n          JSON.parse\n        );\n        return {\n          ...packageContent,\n          url,\n        };\n      })\n    );\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getCollections = async (repoUrl) => {\n  const url = `${repoUrl}/package.json`;\n  try {\n    const json = await content(url, JSON.parse);\n    return json.collections.map((item) => ({\n      ...item,\n      repoUrl,\n    }));\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getTermsByCollection = async (repoUrl, file, flag = null) => {\n  const url = `${repoUrl}/${file}`;\n  try {\n    const words = await content(url, (decoded) => {\n      return decoded\n        .split('\\n')\n        .filter(Boolean)\n        .map((line) => {\n          const parts = line.split(';');\n          return {\n            id: parts[0],\n            word: parts[0],\n            meaning: parts[1],\n            tags: parts[2],\n          };\n        })\n        .filter((term) => {\n          switch (flag) {\n            default:\n              return true;\n            case 'noun': {\n              const { tags } = term;\n              return (\n                tags.includes('MAS') ||\n                tags.includes('FEM') ||\n                tags.includes('NEU')\n              );\n            }\n          }\n        });\n    });\n    console.log({ words });\n    return words;\n  } catch (e) {\n    return [];\n  }\n};\n","import React from 'react';\n\nexport default ({ collections, onReviewClick, onEditClick }) => {\n  const editable = typeof onEditClick === 'function';\n\n  return (\n    <div className=\"list-group list-group-flush\">\n      {collections.map((item) => (\n        <div key={item.get('id')} className=\"list-group-item px-1\">\n          {item.get('name')}\n          <div className=\"actions float-right\">\n            <div className=\"btn-group btn-group-sm\">\n              {editable && (\n                <button\n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => onEditClick(item)}\n                >\n                  Edit\n                </button>\n              )}\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => onReviewClick(item)}\n              >\n                Review\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport network from '../components/network';\nimport { getCollections, getTermsByCollection } from '../services/github';\nimport { createSession } from '../services/session';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_START_SESSION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport CollectionList from '../components/CollectionList';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [newCollection, setNewCollection] = useState({\n    visible: false,\n    name: '',\n  });\n  const newCollectionNameRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      const repoUrl = state.getIn(['repo', 'current', 'url']);\n      const { ok, collections, myCollections, error } = await getCollections(\n        repoUrl\n      ).then((collections) => ({\n        collections,\n        myCollections: [],\n        ok: true,\n        error: null,\n      }));\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        dispatch({\n          type: ACTION_LIST_COLLECTIONS,\n          status: STATUS_ERROR,\n          error,\n        });\n        return;\n      }\n\n      dispatch({\n        type: ACTION_LIST_COLLECTIONS,\n        status: STATUS_OK,\n        collections,\n        myCollections,\n      });\n    })();\n  }, [dispatch]);\n\n  const onReviewClick = useCallback(\n    async (collection) => {\n      dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n      const terms = await getTermsByCollection(\n        collection.get('repoUrl'),\n        collection.get('file'),\n        'noun'\n      );\n      const sessionId = await createSession(terms);\n\n      history.push(`/play/${sessionId}`);\n      dispatch({ type: ACTION_START_SESSION, status: STATUS_OK });\n    },\n    [dispatch]\n  );\n\n  const onNewCollectionCreate = useCallback(async () => {\n    const type = ACTION_CREATE_COLLECTION;\n    dispatch({ type, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post(\n      '/api/me/collections',\n      {\n        name: newCollectionNameRef.current.value,\n      }\n    );\n    if (!ok) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace('/login', { expired: true });\n        return;\n      }\n\n      return dispatch({ type, status: STATUS_ERROR, error });\n    }\n\n    dispatch({ type, status: STATUS_OK, collection });\n    setNewCollection({ visible: false });\n  }, [dispatch, newCollectionNameRef]);\n\n  const onEditClick = useCallback(\n    async (collection) => {\n      history.push(`/collections/${collection.get('id')}`);\n    },\n    [history]\n  );\n\n  const collections = state.get('collections');\n  const myCollections = state.get('myCollections');\n\n  return (\n    <div className=\"container my-collection-list-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          {!!(myCollections && myCollections.size) && (\n            <>\n              <div className=\"w-100\">\n                <button\n                  onClick={() => setNewCollection({ visible: true })}\n                  className=\"btn btn-sm btn-light mt-2 float-right\"\n                >\n                  Add\n                </button>\n                <h2>My Learning List</h2>\n              </div>\n              <CollectionList\n                onEditClick={onEditClick}\n                collections={myCollections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n          {!(collections && collections.size) && (\n            <p className=\"text-center\">Loading...</p>\n          )}\n          {!!(collections && collections.size) && (\n            <>\n              <h2 className=\"mt-5\">Collections</h2>\n              <CollectionList\n                collections={collections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n        </div>\n      </section>\n      {!!newCollection.visible && (\n        <Modal isOpen={newCollection.visible}>\n          <ModalHeader toggle={() => setNewCollection({ visible: false })}>\n            New Collection\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input innerRef={newCollectionNameRef} />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onNewCollectionCreate} color=\"primary\">\n              Create\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderWidth: 1,\n  hoverBackgroundColor: 'rgba(63,69,192,0.4)',\n  hoverBorderColor: 'rgb(65,121,192)',\n};\n\nexport default ({ histogram }) => {\n  return (\n    <Bar\n      width={100}\n      height={50}\n      data={{\n        labels: histogram.map(({ seconds }) => seconds),\n        datasets: [\n          {\n            label: 'Correct Response Time (s)',\n            data: histogram.map(({ correct_count }) => correct_count),\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Incorrect Response Time (s)',\n            data: histogram.map(({ wrong_count }) => wrong_count),\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: 'rgba(192,83,102,0.4)',\n            borderColor: 'rgb(192,73,90)',\n          },\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { min: 0 } }],\n          xAxes: [\n            {\n              distribution: 'series',\n            },\n          ],\n        },\n      }}\n    />\n  );\n};\n","import { getDb, TBL_SESSIONS } from './indexeddb';\n\nexport const getLocalReports = async ({ weekly, worst, histogram }) => {\n  let stats = [];\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_SESSIONS).store.openCursor();\n  while (cursor) {\n    if (cursor.value.stats) {\n      stats = stats.concat(cursor.value.stats);\n    }\n    cursor = await cursor.continue();\n  }\n\n  const worstPerformers = Object.entries(\n    stats.reduce((acc, { termId, correct, seconds }) => {\n      const key = termId;\n      if (!(key in acc)) {\n        acc[key] = {\n          correct_count: 0,\n          seconds_correct: 0,\n          total_count: 0,\n          total_seconds: 0,\n        };\n      }\n      const entry = acc[key];\n\n      if (correct) {\n        entry.correct_count += 1;\n        entry.seconds_correct += seconds;\n      }\n      entry.total_count += 1;\n      entry.total_seconds += seconds;\n\n      return acc;\n    }, {})\n  )\n    .map(\n      ([\n        key,\n        { correct_count, total_count, seconds_correct, total_seconds },\n      ]) => ({\n        word: key,\n        correct_factor:\n          Math.round((100 * correct_count) / (total_count * 1.0)) / 100,\n        confidence_factor:\n          Math.round((100 * seconds_correct) / (total_seconds * 1.0)) / 100,\n      })\n    )\n    .sort(({ correct_factor: a }, { correct_factor: b }) => a - b)\n    .slice(0, 20);\n\n  const histogramData = Object.entries(\n    stats.reduce((acc, { correct, seconds }) => {\n      const key = Math.floor(seconds);\n      if (!(key in acc)) {\n        acc[key] = { correct_count: 0, wrong_count: 0 };\n      }\n      let entry = acc[key];\n      if (correct) {\n        entry.correct_count += 1;\n      } else {\n        entry.wrong_count += 1;\n      }\n\n      return acc;\n    }, {})\n  )\n    .map(([key, entry]) => ({ seconds: key, ...entry }))\n    .sort(({ seconds: a }, { seconds: b }) => a - b);\n\n  return {\n    worstPerformers,\n    weeklyPerformance: [],\n    histogram: histogramData,\n  };\n};\n","import { default as deepGet } from 'lodash/get';\nimport { getDb, TBL_SETTINGS } from './indexeddb';\n\nexport const set = async (property, value) => {\n  const db = await getDb();\n  await db.put(TBL_SETTINGS, {\n    key: property,\n    value,\n  });\n};\n\nexport const get = async (property, path = null) => {\n  const db = await getDb();\n  const obj = await db.get(TBL_SETTINGS, property);\n\n  if (typeof obj === 'object' && path) {\n    return deepGet(obj, `value.${path}`);\n  }\n\n  return obj.value;\n};\n","import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport { Badge, Card, CardBody, CardHeader, Button } from 'reactstrap';\nimport LineChartWeeklyPerformance from '../components/LineChartWeeklyPerformance';\nimport BarChartHistogram from '../components/BarChartHistogram';\nimport Loader from '../components/Loader';\nimport { getLocalReports } from '../services/reporting';\nimport { get } from '../services/settings';\nimport {getCollections, getTermsByCollection} from '../services/github';\nimport {ACTION_START_SESSION, STATUS_OK, STATUS_PENDING} from \"../components/constants\";\nimport {createSession} from \"../services/session\";\nimport {DispatchContext} from \"../components/context\";\nimport {useHistory} from \"react-router-dom\";\n\nconst bgClasses = {\n  MAS: 'bg-masculine',\n  FEM: 'bg-feminine',\n  NEU: 'bg-neuter',\n};\n\nconst classFromTags = (tags) => {\n  const match = /MAS|FEM|NEU/.exec(tags);\n  if (match) {\n    return bgClasses[match[0]];\n  }\n  return '';\n};\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [report, setReport] = useState({\n    worstPerformers: [],\n    weeklyPerformance: [],\n    histogram: [],\n  });\n  useEffect(() => {\n    (async () => {\n      setStatus({ busy: true });\n      const {\n        worstPerformers,\n        weeklyPerformance,\n        histogram,\n      } = await getLocalReports({});\n\n      setStatus({ busy: false });\n      setReport({\n        worstPerformers,\n        weeklyPerformance,\n        histogram,\n      });\n    })();\n  }, []);\n\n  const onReviewClick = useCallback(async () => {\n    const currentCollection = await get('repo.current');\n    const collections = await getCollections(currentCollection.url);\n    let allTerms = [];\n\n    for (const collection of collections) {\n      const _terms = await getTermsByCollection(collection.repoUrl, collection.file, 'NOUN');\n      allTerms = allTerms.concat(_terms);\n    }\n\n    const { worstPerformers } = await getLocalReports({});\n    const filteringKeys = worstPerformers.filter(({correct_factor}) => correct_factor < 0.7).map(({ word }) => word);\n    const terms = allTerms.filter(({ word }) => filteringKeys.includes(word))\n\n    console.log({terms});\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n    const sessionId = await createSession(terms);\n    history.push(`/play/${sessionId}`);\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_OK });\n  }, []);\n\n  return (\n    <div className=\"container report-page\">\n      {!!status.busy && <Loader />}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h2>Report</h2>\n\n          <Card>\n            <CardHeader>\n              <Button\n                  color=\"primary\"\n                  className=\"float-right\"\n                  onClick={onReviewClick}\n              >Review</Button>\n              <h5 className=\"mb-0\">Needs improvements</h5>\n            </CardHeader>\n            <CardBody>\n              {report.worstPerformers.map((item) => (\n                <Badge\n                  pill\n                  className={`p-2 mr-2 mb-2 ${classFromTags(item.tags)}`}\n                  style={{ opacity: 1.05 - item.confidence_factor }}\n                >\n                  {item.word}\n                  <span className=\"pl-2\">{item.correct_factor * 100}%</span>\n                </Badge>\n              ))}\n            </CardBody>\n          </Card>\n\n          <Card className=\"mt-2\">\n            <CardHeader>\n              <h5 className=\"mb-0\">Performance</h5>\n            </CardHeader>\n            <CardBody>\n              {!!(report && report.histogram && report.histogram.length) && (\n                <BarChartHistogram histogram={report.histogram} />\n              )}\n              {!!(\n                report &&\n                report.weeklyPerformance &&\n                report.weeklyPerformance.length\n              ) && (\n                <LineChartWeeklyPerformance\n                  weeklyPerformance={report.weeklyPerformance}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { GoogleLogout } from 'react-google-login';\nimport React, { useCallback, useContext } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { DispatchContext, StateContext } from './context';\nimport { ACTION_LOGOUT } from './constants';\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const onLogout = useCallback(() => {\n    dispatch({ type: ACTION_LOGOUT });\n    window.localStorage.clear();\n  }, []);\n\n  return (\n    <Navbar light className=\"bg-light\">\n      <NavbarBrand className=\"font-weight-lighter\">Hallo Deutsch</NavbarBrand>\n      {!!state.getIn(['profile', 'isLoggedIn']) && [\n        <Nav className=\"mx-auto\">\n          <NavLink to=\"/collections\" exact className=\"nav-item px-2\">\n            Collections\n          </NavLink>\n          <NavLink to=\"/report\" exact className=\"nav-item px-2\">\n            Report\n          </NavLink>\n        </Nav>,\n        <Nav>\n          <NavItem>\n            <NavLink to=\"/settings/repo\" exact className=\"d-block mt-2 px-2\">\n              Choose Repo Content\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <GoogleLogout\n              clientId={\n                '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n              }\n              buttonText=\"Logout\"\n              onLogoutSuccess={onLogout}\n            />\n          </NavItem>\n        </Nav>,\n      ]}\n    </Navbar>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { default as _debounce } from 'lodash.debounce';\nimport network, { debounce } from './network';\nimport {\n  ACTION_ADD_TO_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\nimport { DispatchContext } from './context';\n\nconst debouncedNetwork = debounce(1);\n\nconst debouncedSearch = _debounce(\n  (inputValue, callback) => {\n    network.get(`/api/search?q=${inputValue}`).then(({ ok, terms, error }) => {\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          window.history.replaceState({ expired: true }, null, '/login');\n          return;\n        }\n\n        return [];\n      }\n      callback(terms.map(({ id, word }) => ({ value: id, label: word })));\n    });\n  },\n  1000,\n  {\n    leading: false,\n    trailing: true,\n  }\n);\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const { collectionId = null } = useParams();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [collection, setCollection] = useState({});\n  const [query, setQuery] = useState('');\n  const [shownCount, setShownCount] = useState(10);\n\n  const onCloseClick = useCallback(() => {\n    history.replace('/collections');\n  }, [history]);\n  const onEditCollectionNameChanged = useCallback(\n    async ({ target: { value } }) => {\n      setCollection({\n        ...collection,\n        name: value,\n      });\n\n      const p = debouncedNetwork.patch(`/api/me/collections/${collectionId}`, {\n        name: value,\n      });\n      if (p) {\n        const { ok, error } = await p;\n        if (!ok) {\n          if (error.status_code === 401) {\n            localStorage.clear();\n            history.replace('/login', { expired: true });\n            return;\n          }\n        }\n      }\n    },\n    [collection]\n  );\n\n  const onNewTermSelected = useCallback(\n    async (choice, { action }) => {\n      if (action !== 'select-option') {\n        return;\n      }\n      const type = ACTION_ADD_TO_COLLECTION;\n      dispatch({ type, status: STATUS_PENDING });\n\n      const { ok, error } = await network.post(\n        `/api/me/collections/${collectionId}/terms`,\n        {\n          term_id: choice.value,\n        }\n      );\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return dispatch({ type, status: STATUS_ERROR, error });\n      }\n\n      setCollection({\n        ...collection,\n        terms: [\n          { id: choice.value, word: choice.label },\n          ...(collection.terms || []),\n        ],\n      });\n    },\n    [collection]\n  );\n\n  const onTermRemoved = useCallback(\n    async (termId) => {\n      const { ok, error } = await network.delete(\n        `/api/me/collections/${collectionId}/terms/${termId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setCollection(\n        {\n          ...collection,\n          terms: collection.terms.filter(({ id: key }) => key !== termId),\n        },\n        [collection]\n      );\n    },\n    [collection]\n  );\n\n  useEffect(() => {\n    setStatus({ busy: true });\n    (async () => {\n      const { ok, error, collection: _c } = await network.get(\n        `/api/me/collections/${collectionId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setStatus({ busy: false });\n      setCollection(_c);\n    })();\n  }, [collectionId]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader toggle={onCloseClick}>Edit Collection</ModalHeader>\n      <ModalBody>\n        {status.busy && <div className=\"loader loader-dark\">Loading...</div>}\n        {!status.busy && (\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                value={collection.name}\n                onChange={onEditCollectionNameChanged}\n              />\n            </FormGroup>\n            <FormGroup>\n              <AsyncSelect\n                placeholder=\"Enter your new word...\"\n                value={query}\n                onInputChange={(value) => setQuery(value)}\n                onChange={onNewTermSelected}\n                loadOptions={debouncedSearch}\n              />\n              <ListGroup flush>\n                {(collection.terms || []).slice(0, shownCount).map((item) => (\n                  <ListGroupItem key={item.id}>\n                    {item.word}\n                    <Button\n                      size=\"sm\"\n                      color=\"link\"\n                      className=\"float-right\"\n                      onClick={() => onTermRemoved(item.id)}\n                    >\n                      &times;\n                    </Button>\n                  </ListGroupItem>\n                ))}\n                {collection.terms && shownCount < collection.terms.length && (\n                  <ListGroupItem>\n                    <Button\n                      color=\"link\"\n                      block\n                      onClick={() => setShownCount(shownCount * 2)}\n                    >\n                      Show more >>\n                    </Button>\n                  </ListGroupItem>\n                )}\n              </ListGroup>\n            </FormGroup>\n          </Form>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={onCloseClick} color=\"light\">\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { DispatchContext, StateContext } from '../components/context';\nimport { getRepoContents } from '../services/github';\nimport * as settings from '../services/settings';\nimport {\n  ACTION_LIST_REPO_CONTENTS,\n  ACTION_CHOOSE_COLLECTION,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      dispatch({\n        type: ACTION_LIST_REPO_CONTENTS,\n        status: STATUS_PENDING,\n      });\n\n      const contents = await getRepoContents();\n      dispatch({\n        type: ACTION_LIST_REPO_CONTENTS,\n        status: STATUS_OK,\n        contents,\n      });\n    })();\n  }, [dispatch]);\n\n  const onChooseCollection = useCallback(\n    (collection) => {\n      settings\n          .set('repo.current', {\n            name: collection.get('name'),\n            url: collection.get('url'),\n          })\n          .then(() => {\n            dispatch({\n              type: ACTION_CHOOSE_COLLECTION,\n              collection,\n            });\n            history.replace('/collections');\n          })\n    },\n    [dispatch]\n  );\n\n  const contents = state.getIn(['repo', 'contents']);\n\n  return (\n    <div className=\"container repo-contents-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          <div className=\"list-group list-group-flush\">\n            {contents.map((item) => (\n              <div className=\"list-group-item\">\n                {item.get('name')}\n                <button\n                  className=\"btn btn-sm btn-primary float-right\"\n                  onClick={() => onChooseCollection(item)}\n                >\n                  Choose\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, {useContext, useEffect} from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './App.scss';\n\nimport PlayPage from './pages/PlayPage';\nimport LoginPage from './pages/LoginPage';\nimport CollectionListPage from './pages/CollectionListPage';\nimport ReportPage from './pages/ReportPage';\nimport AppNav from './components/AppNav';\nimport { DispatchContext, StateContext } from './components/context';\nimport EditCollectionModal from './components/EditCollectionModal';\nimport RepoContentsPage from './pages/RepoContentsPage';\nimport {get} from \"./services/settings\";\nimport {ACTION_CHOOSE_COLLECTION} from \"./components/constants\";\n\nfunction App() {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n      (async () => {\n          const collection = await get('repo.current');\n          dispatch({\n              type: ACTION_CHOOSE_COLLECTION,\n              collection,\n          });\n      })();\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/play/:sessionId\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/play\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/report\">\n            <AppNav />\n            <ReportPage />\n          </Route>\n          <Route\n            path=\"/collections\"\n            render={() => {\n              if (!state.getIn(['profile', 'isLoggedIn'])) {\n                return <Redirect to=\"/login\" />;\n              }\n\n              return (\n                <>\n                  <AppNav />\n                  <CollectionListPage />\n                  <Route path=\"/collections/:collectionId\">\n                    <EditCollectionModal />\n                  </Route>\n                </>\n              );\n            }}\n          />\n          <Route exact path=\"/settings/repo\">\n            <AppNav />\n            <RepoContentsPage />\n          </Route>\n          <Route>\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from 'immutable';\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_CHOOSE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_LIST_REPO_CONTENTS,\n  ACTION_LOGIN,\n  ACTION_LOGOUT,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PENDING,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\n\nexport const initialState = fromJS({\n  profile: {\n    isLoggedIn: false,\n  },\n  gameSession: {\n    id: null,\n    status: SESSION_STATUS_PENDING,\n  },\n  repo: {\n    contents: [],\n    current: {\n      url: 'https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen',\n      name: 'Menschen',\n    },\n  },\n  collections: [],\n  report: {},\n});\n\nexport default (state, { type, status, ...action }) => {\n  if (status === STATUS_ERROR) {\n    if (action.error && action.error === 'Invalid token') {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    return state;\n  }\n  if (status === STATUS_PENDING) {\n    return state;\n  }\n\n  console.log({ type, action, state: state.toJS() });\n  switch (type) {\n    case ACTION_LOGIN: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: true,\n          defaultCollection: action.defaultCollection,\n          ...action.profile,\n        })\n      );\n    }\n    case ACTION_LOGOUT: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    case ACTION_LIST_REPO_CONTENTS: {\n      return state.setIn(['repo', 'contents'], fromJS(action.contents));\n    }\n    case ACTION_LIST_COLLECTIONS: {\n      return state\n        .set('collections', fromJS(action.collections))\n        .set('myCollections', fromJS(action.myCollections));\n    }\n    case ACTION_CHOOSE_COLLECTION: {\n      return state\n          .setIn(['repo', 'current'], fromJS(action.collection));\n    }\n    case ACTION_CREATE_COLLECTION: {\n      return state.updateIn(['myCollections'], (collections) =>\n        collections.unshift(fromJS(action.collection))\n      );\n    }\n    case ACTION_START_SESSION: {\n      return state.setIn(\n        ['gameSession'],\n        fromJS({\n          ...action.session,\n          hasNext: true,\n          status: SESSION_STATUS_PLAYING,\n        })\n      );\n    }\n    case ACTION_NEXT_WORD: {\n      return state\n        .setIn(['gameSession', 'term'], fromJS(action.term))\n        .setIn(['gameSession', 'cursor'], action.cursor)\n        .setIn(['gameSession', 'hasNext'], action.hasNext);\n    }\n    case ACTION_SHOW_REPORT: {\n      return state\n        .setIn(['gameSession', 'status'], SESSION_STATUS_DONE)\n        .set('report', fromJS(action.report));\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { DispatchContext, StateContext } from './components/context';\nimport reducer, { initialState } from './components/reducer';\nimport { init as initDb } from './services/indexeddb';\n\nconst Index = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <App />\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\ninitDb().then(() => {\n  ReactDOM.render(<Index />, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}