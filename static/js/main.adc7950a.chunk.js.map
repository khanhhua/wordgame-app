{"version":3,"sources":["components/context.js","components/network.js","components/Loader.js","components/session.js","components/Stage.js","components/constants.js","components/LineChartWeeklyPerformance.js","components/Report.js","pages/PlayPage.js","pages/LoginPage.js","components/github.js","components/CollectionList.js","pages/CollectionListPage.js","components/BarChartHistogram.js","components/reporting.js","pages/ReportPage.js","components/AppNav.js","components/EditCollectionModal.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["DispatchContext","React","createContext","StateContext","BASE_URL","process","request","url","method","a","body","localStorage","getItem","headers","fetch","catch","error","ok","handleResponse","res","contentType","get","match","status","json","text","api","uri","post","payload","JSON","stringify","put","patch","delete","Modal","isOpen","contentClassName","ModalBody","className","db","init","openDB","upgrade","createObjectStore","keyPath","createIndex","renewSession","transaction","store","openCursor","cursor","terms","push","value","continue","createSession","txSession","sessionId","Date","now","toString","Promise","all","add","id","corrects","wrongs","count","length","nextWordIndex","done","tx","clear","sort","Math","random","map","term","index","getSession","objectStore","session","getNextTerm","storeSession","getFromIndex","hasNext","updateStats","entry","correct","stats","concat","getSessionStats","reduce","acc","find","word","termId","gender","tags","includes","der","die","das","dispatch","useContext","state","history","useHistory","useState","busy","setStatus","showingAnswer","setShowingAnswer","timestamp","setTimestamp","fetchNextWord","useCallback","type","status_code","replace","expired","onSelectAnswer","answer","getIn","wordTags","seconds","article","showReport","report","onSkipClick","onNextClick","useEffect","onClick","style","wordBreak","ModalFooter","Button","color","Loader","defaultLineDataSeriesOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","weeklyPerformance","labels","date","week","getMonth","getDate","confidence","confidence_factor","toFixed","correct_factor","data","datasets","label","width","height","options","scales","yAxes","ticks","max","min","stepSize","maintainAspectRatio","layout","padding","sessionRatios","role","LineChartWeeklyPerformance","toJS","props","recaptcha","setRecaptcha","pathParams","useParams","onStartSession","load","_recaptcha","onSuccess","response","token","accessToken","profileObj","setItem","profile","marginTop","Stage","Report","to","disabled","block","clientId","responseType","params","location","useLocation","console","log","Alert","toggle","content","parse","Error","encoding","escaped","decodeURIComponent","escape","atob","parsed","getCollections","collections","getTermsByCollection","file","flag","decoded","split","filter","Boolean","line","parts","meaning","words","onReviewClick","onEditClick","editable","item","key","visible","name","newCollection","setNewCollection","newCollectionNameRef","useRef","then","myCollections","collection","onNewCollectionCreate","network","current","size","CollectionList","ModalHeader","Form","FormGroup","Label","Input","innerRef","borderWidth","hoverBackgroundColor","hoverBorderColor","histogram","correct_count","wrong_count","xAxes","distribution","getLocalReports","weekly","worst","worstPerformers","bgClasses","MAS","FEM","NEU","classFromTags","exec","setReport","Card","CardHeader","CardBody","Badge","pill","opacity","BarChartHistogram","onLogoutClick","window","Navbar","light","NavbarBrand","Nav","exact","NavItem","debouncedNetwork","s","proxy","Object","keys","forEach","defineProperty","_debounce","debounce","debouncedSearch","inputValue","callback","replaceState","leading","trailing","collectionId","setCollection","query","setQuery","shownCount","setShownCount","onCloseClick","onEditCollectionNameChanged","target","p","onNewTermSelected","choice","action","term_id","onTermRemoved","_c","onChange","placeholder","onInputChange","loadOptions","ListGroup","flush","slice","ListGroupItem","App","defaultCollection","default_collection","path","LoginPage","AppNav","PlayPage","ReportPage","render","CollectionListPage","EditCollectionModal","hostname","initialState","fromJS","isLoggedIn","gameSession","set","updateIn","unshift","setIn","Index","useReducer","reducer","Provider","initSession","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.adc7950a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n","import { default as _debounce } from 'lodash.debounce';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst prefix = 'wg'; // wordgame\n\n/**\n *\n * @param url\n * @param method\n * @param body\n * @returns {Promise<Response|{ ok: boolean }>}\n */\nconst request = async (url, method, body = null) => {\n  const token = localStorage.getItem(`${prefix}:token`);\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    // headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Normalize reponse to { ok, error }\n  return fetch(\n    url,\n    method === 'GET' || method === 'DELETE'\n      ? { headers, method }\n      : {\n          headers,\n          method,\n          body,\n        }\n  ).catch((error) => {\n    return {\n      ok: false,\n      error,\n    };\n  });\n};\n\nconst handleResponse = async (res) => {\n  if (!res) {\n    return { ok: false };\n  }\n\n  try {\n    const contentType = res.headers.get('content-type');\n    if (contentType && contentType.match(/json/)) {\n      if (res.status >= 400) {\n        return {\n          ok: false,\n          error: await res.json(),\n        };\n      }\n\n      return res.json();\n    } else {\n      return {\n        ok: false,\n        error: await res.text(),\n      };\n    }\n  } catch (error) {\n    return { ok: false, error };\n  }\n};\n\nconst api = {\n  request,\n  async get(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'GET');\n    return handleResponse(res);\n  },\n  async post(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'POST',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async put(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PUT',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async patch(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PATCH',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async delete(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'DELETE');\n    return handleResponse(res);\n  },\n};\n\nexport const debounce = (s) => {\n  const proxy = {};\n  Object.keys(api).forEach((key) => {\n    Object.defineProperty(proxy, key, {\n      value: _debounce(api[key], s * 1000),\n    });\n  });\n\n  return proxy;\n};\n\nexport default api;\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\n\nexport default () => (\n  <Modal isOpen={true} contentClassName=\"bg-transparent border-0\">\n    <ModalBody>\n      <div className=\"loader\">Loading...</div>\n    </ModalBody>\n  </Modal>\n);\n","import { openDB } from 'idb';\n\nconst DB_NAME = 'WordGame';\nconst TBL_SESSIONS = 'sessions';\nconst TBL_TERMS = 'terms';\nlet db = null;\n\nexport const init = async () => {\n  db = await openDB(DB_NAME, 4, {\n    upgrade(db) {\n      db.createObjectStore(TBL_SESSIONS, {\n        keyPath: 'id',\n      });\n      db.createObjectStore(TBL_TERMS, {\n        keyPath: 'id',\n      }).createIndex('index', 'index');\n    },\n  });\n};\n\nexport const renewSession = async () => {\n  let cursor = await db.transaction(TBL_TERMS, 'read').store.openCursor();\n  const terms = [];\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  return createSession(terms);\n};\n\nexport const createSession = async (terms) => {\n  const txSession = db.transaction(TBL_SESSIONS, 'readwrite');\n  const sessionId = Date.now().toString();\n  await Promise.all([\n    txSession.store.add({\n      id: sessionId,\n      corrects: 0,\n      wrongs: 0,\n      count: terms.length,\n      nextWordIndex: 0,\n    }),\n    txSession.done,\n  ]);\n\n  const tx = db.transaction(TBL_TERMS, 'readwrite');\n  await tx.store.clear();\n  await Promise.all(\n    terms\n      .sort(() => Math.random() - 0.5)\n      .map((term, index) => {\n        return tx.store.add({\n          ...term,\n          index,\n        });\n      })\n  );\n\n  await tx.done;\n\n  return sessionId;\n};\n\nexport const getSession = async (sessionId) => {\n  const store = db.transaction(TBL_SESSIONS).objectStore(TBL_SESSIONS);\n  const session = await store.get(sessionId);\n\n  return session;\n};\n\nexport const getNextTerm = async (sessionId) => {\n  const storeSession = db\n    .transaction(TBL_SESSIONS, 'readwrite')\n    .objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  const { nextWordIndex, count } = session;\n  if (nextWordIndex === -1) {\n    return null;\n  }\n  await storeSession.put({\n    ...session,\n    nextWordIndex: nextWordIndex + 1 < count ? nextWordIndex + 1 : -1,\n  });\n\n  const term = await db.getFromIndex(TBL_TERMS, 'index', nextWordIndex);\n\n  return {\n    term,\n    hasNext: nextWordIndex + 1 < count,\n  };\n};\n\nexport const updateStats = async (sessionId, entry) => {\n  const tx = db.transaction(TBL_SESSIONS, 'readwrite');\n  const storeSession = tx.objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  await storeSession.put({\n    ...session,\n    corrects: session.corrects + entry.correct,\n    wrongs: session.wrongs + !entry.correct,\n    stats: (session.stats || []).concat(entry),\n  });\n  await tx.done;\n\n  return {\n    ok: true,\n  };\n};\n\nexport const getSessionStats = async (sessionId) => {\n  const terms = [];\n  let cursor = await db.transaction(TBL_TERMS).store.openCursor();\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  const session = await db.get(TBL_SESSIONS, sessionId);\n\n  const stats = (session.stats || []).reduce(\n    (acc, entry) => {\n      const term = terms.find(({ word: key }) => key === entry.termId);\n      const gender = term.tags.includes('MAS')\n        ? 'der'\n        : term.tags.includes('FEM')\n        ? 'die'\n        : term.tags.includes('NEU')\n        ? 'das'\n        : null;\n      if (!gender) {\n        return acc;\n      }\n\n      if (entry.correct) {\n        acc[gender].corrects += 1;\n      } else {\n        acc[gender].wrongs += 1;\n      }\n\n      return acc;\n    },\n    {\n      der: { corrects: 0, wrongs: 0 },\n      die: { corrects: 0, wrongs: 0 },\n      das: { corrects: 0, wrongs: 0 },\n    }\n  );\n\n  return stats;\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport Loader from './Loader';\nimport { getNextTerm, getSessionStats, updateStats } from './session';\n\nexport default ({ sessionId }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [showingAnswer, setShowingAnswer] = useState(null);\n\n  const [timestamp, setTimestamp] = useState(null);\n\n  const fetchNextWord = useCallback(async () => {\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_PENDING });\n    const { term, hasNext, error } = await getNextTerm(sessionId);\n\n    if (!term) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace('/login', { expired: true });\n        return;\n      }\n\n      dispatch({ type: ACTION_NEXT_WORD, status: STATUS_ERROR, error });\n      return;\n    }\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_OK, term, hasNext });\n    setTimestamp(Date.now() / 1000);\n  }, [dispatch, state, sessionId]);\n\n  const onSelectAnswer = useCallback(\n    async (answer) => {\n      const termId = state.getIn(['gameSession', 'term', 'id']);\n      const wordTags = state.getIn(['gameSession', 'term', 'tags']);\n      const correct = wordTags.includes(answer);\n\n      const { ok, error } = await updateStats(sessionId, {\n        termId,\n        correct,\n        seconds: Date.now() / 1000 - timestamp,\n      });\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return;\n      }\n\n      if (!correct) {\n        setShowingAnswer({\n          correct,\n          article: wordTags.includes('MAS')\n            ? 'der'\n            : wordTags.includes('FEM')\n            ? 'die'\n            : 'das',\n        });\n      } else {\n        if (state.getIn(['gameSession', 'hasNext'])) {\n          await fetchNextWord();\n        } else {\n          showReport();\n        }\n      }\n    },\n    [dispatch, timestamp, state.getIn(['gameSession', 'term'])]\n  );\n\n  const showReport = useCallback(async () => {\n    setStatus({ busy: true });\n\n    const sessionId = state.getIn(['gameSession', 'id']);\n\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_PENDING, sessionId });\n    const stats = await getSessionStats(sessionId);\n\n    dispatch({\n      type: ACTION_SHOW_REPORT,\n      status: STATUS_OK,\n      report: { session: stats },\n    });\n  }, [dispatch, state.getIn(['gameSession', 'term'])]);\n\n  const onSkipClick = useCallback(async () => {\n    await fetchNextWord();\n  }, [dispatch, state.getIn(['gameSession', 'term'])]);\n\n  const onNextClick = useCallback(async () => {\n    setShowingAnswer(null);\n    if (state.getIn(['gameSession', 'hasNext'])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [\n    dispatch,\n    state.getIn(['gameSession', 'term']),\n    state.getIn(['gameSession', 'hasNext']),\n  ]);\n\n  useEffect(() => {\n    (async () => {\n      await fetchNextWord();\n    })();\n  }, []);\n\n  const term = state.getIn(['gameSession', 'term']);\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2 className=\"text-center text-black-50\">Play</h2>\n        {!term && <p className=\"text-center\">Loading...</p>}\n        {!!term && (\n          <>\n            <div className=\"term mt-5 mb-5\">\n              <div className=\"text-center display-2 text-break\">\n                {term.get('word')}\n              </div>\n              <button className=\"btn btn-sm btn-link\">Meaning >></button>\n            </div>\n\n            <div className=\"actions text-center\">\n              <div className=\"btn-group w-75\">\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-masculine\"\n                  onClick={() => onSelectAnswer('MAS')}\n                >\n                  Der\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-feminine\"\n                  onClick={() => onSelectAnswer('FEM')}\n                >\n                  Die\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-neuter\"\n                  onClick={() => onSelectAnswer('NEU')}\n                >\n                  Das\n                </button>\n              </div>\n              <div className=\"btn-group w-100 mt-5\">\n                <button\n                  className=\"btn btn-primary btn-sm\"\n                  onClick={onSkipClick}\n                >\n                  Skip\n                </button>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button className=\"btn btn-light\" onClick={showReport}>\n                  I'm done for now\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showingAnswer && (\n        <Modal isOpen={true}>\n          <ModalBody>\n            <div\n              className=\"display-2 text-center\"\n              style={{ wordBreak: 'break-word' }}\n            >\n              <span className=\"font-weight-lighter text-muted\">\n                {term.get('word')}\n              </span>\n              , <br />\n              <span className=\"font-weight-bold\">{showingAnswer.article}</span>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={onNextClick} className=\"mx-auto\">\n              Next\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n      {!!status.busy && <Loader />}\n    </section>\n  );\n};\n","export const STATUS_OK = 'ok';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_PENDING = 'pending';\n\nexport const SESSION_STATUS_PENDING = 'pending';\nexport const SESSION_STATUS_PLAYING = 'playing';\nexport const SESSION_STATUS_DONE = 'done';\n\nexport const ACTION_LOGIN = 'user/login';\nexport const ACTION_LOGOUT = 'user/logout';\nexport const ACTION_START_SESSION = 'user/start-session';\nexport const ACTION_NEXT_WORD = 'user/next-term';\nexport const ACTION_SHOW_REPORT = 'user/show-report';\nexport const ACTION_LIST_COLLECTIONS = 'user/list-collections';\nexport const ACTION_ADD_TO_COLLECTION = 'user/add-to-collections';\nexport const ACTION_CREATE_COLLECTION = 'user/create-collection';\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nconst formatDate = (date) => `${date.getMonth() + 1}.${date.getDate()}`;\n\nexport default ({ weeklyPerformance }) => {\n  const labels = weeklyPerformance.map(({ week }) =>\n    formatDate(new Date(week * 7 * 86400 * 1000))\n  );\n  const confidence = weeklyPerformance.map(({ confidence_factor }) =>\n    (confidence_factor * 100).toFixed(2)\n  );\n  const correct = weeklyPerformance.map(({ correct_factor }) =>\n    (correct_factor * 100).toFixed(2)\n  );\n\n  return (\n    <Line\n      data={{\n        labels,\n        datasets: [\n          {\n            label: 'Correct',\n            data: correct,\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Confidence',\n            data: confidence,\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: '#C0122A',\n            borderColor: '#f3132c',\n          },\n        ],\n      }}\n      width={100}\n      height={40}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { max: 100, min: 0, stepSize: 20 } }],\n        },\n        maintainAspectRatio: true,\n        layout: {\n          padding: 0,\n        },\n      }}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { StateContext } from './context';\nimport LineChartWeeklyPerformance from './LineChartWeeklyPerformance';\n\n/**\n * Post-session report\n * @returns {*}\n */\nexport default () => {\n  const state = useContext(StateContext);\n\n  const session = state.getIn(['report', 'session']);\n  const weeklyPerformance = state.getIn(['report', 'weekly_performance']);\n\n  const sessionRatios = {\n    der:\n      session.getIn(['der', 'corrects']) /\n      (session.getIn(['der', 'corrects']) + session.getIn(['der', 'wrongs'])),\n    die:\n      session.getIn(['die', 'corrects']) /\n      (session.getIn(['die', 'corrects']) + session.getIn(['die', 'wrongs'])),\n    das:\n      session.getIn(['das', 'corrects']) /\n      (session.getIn(['das', 'corrects']) + session.getIn(['das', 'wrongs'])),\n  };\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2>Report</h2>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3>Session Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DER</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-masculine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.der * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DIE</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-feminine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.die * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DAS</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-neuter\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.das * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {!!weeklyPerformance && (\n          <div className=\"card mt-4\">\n            <div className=\"card-header\">\n              <h3 className=\"mb-0\">Weekly Report</h3>\n            </div>\n            <div className=\"card-body\">\n              <LineChartWeeklyPerformance\n                weeklyPerformance={weeklyPerformance.toJS()}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport network from \"../components/network\";\nimport {\n  ACTION_LOGIN,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport Stage from \"../components/Stage\";\nimport Report from \"../components/Report\";\nimport GoogleLogin from \"react-google-login\";\nimport { Button } from \"reactstrap\";\nimport { load } from \"recaptcha-v3\";\nimport {createSession, getSession, renewSession} from \"../components/session\";\n\nconst CAPTCHA_CLIENT_KEY = \"6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [recaptcha, setRecaptcha] = useState(null);\n  const history = useHistory();\n  const pathParams = useParams();\n\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await renewSession();\n\n    history.replace(`/play/${sessionId}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (pathParams.sessionId) {\n        const session = await getSession(pathParams.sessionId);\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n      } else {\n        if (localStorage.getItem('wg:token')) {\n          history.replace(\"/collections\");\n        } else {\n          history.replace(\"/login\");\n        }\n      }\n    })();\n  }, [dispatch, pathParams.sessionId]);\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem(\"wg:profileObj\", profileObj);\n      localStorage.setItem(\"wg:token\", token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n        profile: profileObj,\n      });\n      history.replace(\"/collections\");\n    },\n    [dispatch, history]\n  );\n\n  const session = state.getIn([\"gameSession\"]);\n\n  return (\n    <div className=\"container play-page\">\n      {!(session && session.get(\"id\")) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            <div\n              className=\"btn btn-primary btn-lg w-100\"\n              style={{ marginTop: \"75%\" }}\n            >\n              START\n            </div>\n          </div>\n        </section>\n      )}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_PLAYING\n      ) && <Stage sessionId={session.get(\"id\")} />}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_DONE\n      ) && <Report sessionId={session.get(\"id\")} />}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_DONE\n      ) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            {state.getIn([\"profile\", \"isLoggedIn\"]) && (\n              <Link className=\"btn btn-sm btn-link btn-block\" to=\"/collections\">\n                Back to collections\n              </Link>\n            )}\n            {!state.getIn([\"profile\", \"isLoggedIn\"]) && (\n              <>\n                <div className=\"row mt-2 justify-content-center\">\n                  <div className=\"col-6\">\n                    <Button\n                      disabled={!recaptcha}\n                      color=\"primary\"\n                      block\n                      onClick={onStartSession}\n                    >\n                      TRY AGAIN!\n                    </Button>\n                  </div>\n                </div>\n\n                <GoogleLogin\n                  clientId={\n                    \"976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com\"\n                  }\n                  onSuccess={onSuccess}\n                  responseType={\"code\"}\n                  className=\"mt-5\"\n                />\n                <p className=\"text-muted\">...to keep track of your progress</p>\n              </>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { load } from \"recaptcha-v3\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { Alert, Button } from \"reactstrap\";\nimport { DispatchContext } from \"../components/context\";\nimport { ACTION_LOGIN, STATUS_OK } from \"../components/constants\";\nimport network from \"../components/network\";\nimport {createSession} from \"../components/session\";\n\nconst CAPTCHA_CLIENT_KEY = \"6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh\";\n\nexport default () => {\n  const [recaptcha, setRecaptcha] = useState(null);\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem(\"wg:profile\", JSON.stringify(profileObj));\n      localStorage.setItem(\"wg:token\", token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n      });\n      history.replace(\"/collections\");\n    },\n    [dispatch, history]\n  );\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await createSession([]);\n    // localStorage.setItem(\"wg:token\", token);\n    history.replace(`/play/${sessionId}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    console.log(params);\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  return (\n    <div className=\"container login-page\">\n      {!!(location.state && location.state.expired) && (\n        <Alert\n          className=\"mt-2 alert-float\"\n          isOpen={true}\n          color=\"warning\"\n          toggle={() => history.replace(\"/login\")}\n        >\n          <h4 className=\"alert-heading\">Your session has expired.</h4>\n          <p className=\"mt-3 text-center text-sm-left\">\n            Without logging in, your session lasts for only for 10 minutes.\n          </p>\n        </Alert>\n      )}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h3\n            style={{\n              marginTop: \"50%\",\n            }}\n          >\n            Hallo Deutsch\n          </h3>\n          <GoogleLogin\n            clientId={\n              \"976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com\"\n            }\n            onSuccess={onSuccess}\n            responseType={\"token\"}\n          />\n          <p className=\"text-muted\">\n            ...to coup with the insane irregularity in the German language.\n          </p>\n        </div>\n      </section>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <Button\n            disabled={!recaptcha}\n            color=\"primary\"\n            block\n            onClick={onStartSession}\n          >\n            TRY NOW!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import api from './network';\n\nasync function content(url, parse) {\n  const res = await api.request(url, 'GET');\n  if (!res.ok) {\n    throw new Error('Bad Request');\n  }\n\n  const data = await res.json();\n  if (data.encoding !== 'base64') {\n    throw new Error('Bad Request');\n  }\n\n  const escaped = decodeURIComponent(escape(atob(data.content)));\n  const parsed = parse(escaped);\n  return parsed;\n}\n\nexport const getCollections = async () => {\n  const url =\n    'https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen/package.json';\n  try {\n    const json = await content(url, JSON.parse);\n    return json.collections;\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getTermsByCollection = async ({ file }, flag = null) => {\n  const url = `https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen/${file}`;\n  try {\n    const words = await content(url, (decoded) => {\n      return decoded\n        .split('\\n')\n        .filter(Boolean)\n        .map((line) => {\n          const parts = line.split(';');\n          return {\n            id: parts[0],\n            word: parts[0],\n            meaning: parts[1],\n            tags: parts[2],\n          };\n        })\n        .filter((term) => {\n          switch (flag) {\n            default:\n              return true;\n            case 'noun': {\n              const { tags } = term;\n              return (\n                tags.includes('MAS') ||\n                tags.includes('FEM') ||\n                tags.includes('NEU')\n              );\n            }\n          }\n        });\n    });\n    console.log({ words });\n    return words;\n  } catch (e) {\n    return [];\n  }\n};\n","import React from 'react';\n\nexport default ({ collections, onReviewClick, onEditClick }) => {\n  const editable = typeof onEditClick === 'function';\n\n  return (\n    <div className=\"list-group list-group-flush\">\n      {collections.map((item) => (\n        <div key={item.get('id')} className=\"list-group-item px-1\">\n          {item.get('name')}\n          <div className=\"actions float-right\">\n            <div className=\"btn-group btn-group-sm\">\n              {editable && (\n                <button\n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => onEditClick(item)}\n                >\n                  Edit\n                </button>\n              )}\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => onReviewClick(item)}\n              >\n                Review\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport network from \"../components/network\";\nimport { getCollections, getTermsByCollection } from \"../components/github\";\nimport { createSession } from \"../components/session\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_START_SESSION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport CollectionList from \"../components/CollectionList\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [newCollection, setNewCollection] = useState({\n    visible: false,\n    name: \"\",\n  });\n  const newCollectionNameRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      const {\n        ok,\n        collections,\n        myCollections,\n        error,\n      } = await getCollections().then((collections) => ({\n        collections,\n        myCollections: [],\n        ok: true,\n        error: null,\n      }));\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        dispatch({\n          type: ACTION_LIST_COLLECTIONS,\n          status: STATUS_ERROR,\n          error,\n        });\n        return;\n      }\n\n      dispatch({\n        type: ACTION_LIST_COLLECTIONS,\n        status: STATUS_OK,\n        collections,\n        myCollections,\n      });\n    })();\n  }, [dispatch]);\n\n  const onReviewClick = async (collection) => {\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n    const terms = await getTermsByCollection({ file: collection.get(\"file\") }, 'noun');\n    const sessionId = await createSession(terms);\n\n    history.push(`/play/${sessionId}`);\n  };\n\n  const onNewCollectionCreate = useCallback(async () => {\n    const type = ACTION_CREATE_COLLECTION;\n    dispatch({ type, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post(\n      \"/api/me/collections\",\n      {\n        name: newCollectionNameRef.current.value,\n      }\n    );\n    if (!ok) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace(\"/login\", { expired: true });\n        return;\n      }\n\n      return dispatch({ type, status: STATUS_ERROR, error });\n    }\n\n    dispatch({ type, status: STATUS_OK, collection });\n    setNewCollection({ visible: false });\n  }, [dispatch, newCollectionNameRef]);\n\n  const onEditClick = useCallback(\n    async (collection) => {\n      history.push(`/collections/${collection.get(\"id\")}`);\n    },\n    [history]\n  );\n\n  const collections = state.get(\"collections\");\n  const myCollections = state.get(\"myCollections\");\n\n  return (\n    <div className=\"container my-collection-list-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          {!!(myCollections && myCollections.size) && (\n            <>\n              <div className=\"w-100\">\n                <button\n                  onClick={() => setNewCollection({ visible: true })}\n                  className=\"btn btn-sm btn-light mt-2 float-right\"\n                >\n                  Add\n                </button>\n                <h2>My Learning List</h2>\n              </div>\n              <CollectionList\n                onEditClick={onEditClick}\n                collections={myCollections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n          {!(collections && collections.size) && (\n            <p className=\"text-center\">Loading...</p>\n          )}\n          {!!(collections && collections.size) && (\n            <>\n              <h2 className=\"mt-5\">Collections</h2>\n              <CollectionList\n                collections={collections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n        </div>\n      </section>\n      {!!newCollection.visible && (\n        <Modal isOpen={newCollection.visible}>\n          <ModalHeader toggle={() => setNewCollection({ visible: false })}>\n            New Collection\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input innerRef={newCollectionNameRef} />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onNewCollectionCreate} color=\"primary\">\n              Create\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderWidth: 1,\n  hoverBackgroundColor: 'rgba(63,69,192,0.4)',\n  hoverBorderColor: 'rgb(65,121,192)',\n};\n\nexport default ({ histogram }) => {\n  return (\n    <Bar\n      width={100}\n      height={50}\n      data={{\n        labels: histogram.map(({ seconds }) => seconds),\n        datasets: [\n          {\n            label: 'Correct Response Time (s)',\n            data: histogram.map(({ correct_count }) => correct_count),\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Incorrect Response Time (s)',\n            data: histogram.map(({ wrong_count }) => wrong_count),\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: 'rgba(192,83,102,0.4)',\n            borderColor: 'rgb(192,73,90)',\n          },\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { min: 0 } }],\n          xAxes: [\n            {\n              distribution: 'series',\n            },\n          ],\n        },\n      }}\n    />\n  );\n};\n","export const getLocalReports = async ({weekly, worst, histogram}) => {\n    return {\n        worstPerformers: [],\n        weeklyPerformance: [],\n        histogram: [],\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Badge, Card, CardBody, CardHeader } from 'reactstrap';\nimport LineChartWeeklyPerformance from '../components/LineChartWeeklyPerformance';\nimport BarChartHistogram from '../components/BarChartHistogram';\nimport Loader from '../components/Loader';\nimport {getLocalReports} from '../components/reporting';\n\nconst bgClasses = {\n  MAS: 'bg-masculine',\n  FEM: 'bg-feminine',\n  NEU: 'bg-neuter',\n};\n\nconst classFromTags = (tags) => {\n  const match = /MAS|FEM|NEU/.exec(tags);\n  if (match) {\n    return bgClasses[match[0]];\n  }\n  return '';\n};\n\nexport default (props) => {\n  const history = useHistory();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [report, setReport] = useState({\n    worstPerformers: [],\n    weeklyPerformance: [],\n    histogram: [],\n  });\n  useEffect(() => {\n    (async () => {\n      setStatus({ busy: true });\n      const {worstPerformers, weeklyPerformance,histogram} = await getLocalReports({});\n\n      setStatus({ busy: false });\n      setReport({\n        worstPerformers,\n        weeklyPerformance,\n        histogram,\n      });\n    })();\n  }, []);\n\n  return (\n    <div className='container report-page'>\n      {!!status.busy && <Loader />}\n      <section className='row'>\n        <div className='col'>\n          <h2>Report</h2>\n\n          <Card>\n            <CardHeader>\n              <h5 className='mb-0'>Needs improvements</h5>\n            </CardHeader>\n            <CardBody>\n              {report.worstPerformers.map((item) => (\n                <Badge\n                  pill\n                  className={`p-2 mr-2 mb-2 ${classFromTags(item.tags)}`}\n                  style={{ opacity: 1.05 - item.confidence_factor }}\n                >\n                  {item.word}\n                  <span className='pl-2'>{item.correct_factor * 100}%</span>\n                </Badge>\n              ))}\n            </CardBody>\n          </Card>\n\n          <Card className='mt-2'>\n            <CardHeader>\n              <h5 className='mb-0'>Performance</h5>\n            </CardHeader>\n            <CardBody>\n              {!!(report && report.histogram && report.histogram.length) && (\n                <BarChartHistogram histogram={report.histogram} />\n              )}\n              {!!(\n                report &&\n                report.weeklyPerformance &&\n                report.weeklyPerformance.length\n              ) && (\n                <LineChartWeeklyPerformance\n                  weeklyPerformance={report.weeklyPerformance}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { DispatchContext, StateContext } from './context';\nimport { ACTION_LOGOUT } from './constants';\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const onLogoutClick = useCallback(() => {\n    dispatch({ type: ACTION_LOGOUT });\n    window.localStorage.clear();\n    window.location.replace('/login');\n  }, []);\n\n  return (\n    <Navbar light className=\"bg-light\">\n      <NavbarBrand className=\"font-weight-lighter\">Hallo Deutsch</NavbarBrand>\n      {!!state.getIn(['profile', 'isLoggedIn']) && (\n        <Nav className=\"mx-auto\">\n          <NavLink to=\"/collections\" exact className=\"nav-item px-2\">\n            Collections\n          </NavLink>\n          <NavLink to=\"/report\" exact className=\"nav-item px-2\">\n            Report\n          </NavLink>\n        </Nav>\n      )}\n      {!!state.getIn(['profile', 'isLoggedIn']) && (\n        <Nav>\n          <NavItem onClick={onLogoutClick}>Logout</NavItem>\n        </Nav>\n      )}\n    </Navbar>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { default as _debounce } from 'lodash.debounce';\nimport network, { debounce } from './network';\nimport {\n  ACTION_ADD_TO_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\nimport { DispatchContext } from './context';\n\nconst debouncedNetwork = debounce(1);\n\nconst debouncedSearch = _debounce(\n  (inputValue, callback) => {\n    network.get(`/api/search?q=${inputValue}`).then(({ ok, terms, error }) => {\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          window.history.replaceState({ expired: true }, null, '/login');\n          return;\n        }\n\n        return [];\n      }\n      callback(terms.map(({ id, word }) => ({ value: id, label: word })));\n    });\n  },\n  1000,\n  {\n    leading: false,\n    trailing: true,\n  }\n);\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const { collectionId = null } = useParams();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [collection, setCollection] = useState({});\n  const [query, setQuery] = useState('');\n  const [shownCount, setShownCount] = useState(10);\n\n  const onCloseClick = useCallback(() => {\n    history.replace('/collections');\n  }, [history]);\n  const onEditCollectionNameChanged = useCallback(\n    async ({ target: { value } }) => {\n      setCollection({\n        ...collection,\n        name: value,\n      });\n\n      const p = debouncedNetwork.patch(`/api/me/collections/${collectionId}`, {\n        name: value,\n      });\n      if (p) {\n        const { ok, error } = await p;\n        if (!ok) {\n          if (error.status_code === 401) {\n            localStorage.clear();\n            history.replace('/login', { expired: true });\n            return;\n          }\n        }\n      }\n    },\n    [collection]\n  );\n\n  const onNewTermSelected = useCallback(\n    async (choice, { action }) => {\n      if (action !== 'select-option') {\n        return;\n      }\n      const type = ACTION_ADD_TO_COLLECTION;\n      dispatch({ type, status: STATUS_PENDING });\n\n      const { ok, error } = await network.post(\n        `/api/me/collections/${collectionId}/terms`,\n        {\n          term_id: choice.value,\n        }\n      );\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return dispatch({ type, status: STATUS_ERROR, error });\n      }\n\n      setCollection({\n        ...collection,\n        terms: [\n          { id: choice.value, word: choice.label },\n          ...(collection.terms || []),\n        ],\n      });\n    },\n    [collection]\n  );\n\n  const onTermRemoved = useCallback(\n    async (termId) => {\n      const { ok, error } = await network.delete(\n        `/api/me/collections/${collectionId}/terms/${termId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setCollection(\n        {\n          ...collection,\n          terms: collection.terms.filter(({ id: key }) => key !== termId),\n        },\n        [collection]\n      );\n    },\n    [collection]\n  );\n\n  useEffect(() => {\n    setStatus({ busy: true });\n    (async () => {\n      const { ok, error, collection: _c } = await network.get(\n        `/api/me/collections/${collectionId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setStatus({ busy: false });\n      setCollection(_c);\n    })();\n  }, [collectionId]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader toggle={onCloseClick}>Edit Collection</ModalHeader>\n      <ModalBody>\n        {status.busy && <div className=\"loader loader-dark\">Loading...</div>}\n        {!status.busy && (\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                value={collection.name}\n                onChange={onEditCollectionNameChanged}\n              />\n            </FormGroup>\n            <FormGroup>\n              <AsyncSelect\n                placeholder=\"Enter your new word...\"\n                value={query}\n                onInputChange={(value) => setQuery(value)}\n                onChange={onNewTermSelected}\n                loadOptions={debouncedSearch}\n              />\n              <ListGroup flush>\n                {(collection.terms || []).slice(0, shownCount).map((item) => (\n                  <ListGroupItem key={item.id}>\n                    {item.word}\n                    <Button\n                      size=\"sm\"\n                      color=\"link\"\n                      className=\"float-right\"\n                      onClick={() => onTermRemoved(item.id)}\n                    >\n                      &times;\n                    </Button>\n                  </ListGroupItem>\n                ))}\n                {collection.terms && shownCount < collection.terms.length && (\n                  <ListGroupItem>\n                    <Button\n                      color=\"link\"\n                      block\n                      onClick={() => setShownCount(shownCount * 2)}\n                    >\n                      Show more >>\n                    </Button>\n                  </ListGroupItem>\n                )}\n              </ListGroup>\n            </FormGroup>\n          </Form>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={onCloseClick} color=\"light\">\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport PlayPage from \"./pages/PlayPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport CollectionListPage from \"./pages/CollectionListPage\";\nimport ReportPage from \"./pages/ReportPage\";\nimport AppNav from \"./components/AppNav\";\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport network from \"./components/network\";\nimport { ACTION_LOGIN, STATUS_OK } from \"./components/constants\";\nimport EditCollectionModal from \"./components/EditCollectionModal\";\n\nfunction App() {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n    (async () => {\n      const isLoggedIn = state.getIn([\"profile\", \"isLoggedIn\"]);\n      if (isLoggedIn) {\n        return;\n      } else {\n        const accessToken = localStorage.getItem(\"wg:token\");\n        if (accessToken) {\n          const {\n            ok,\n            profile,\n            default_collection: defaultCollection,\n          } = await network.get(\"/api/auth\");\n          if (!ok) {\n            localStorage.clear();\n            window.location.replace(\"/login\");\n            return;\n          }\n\n          dispatch({\n            type: ACTION_LOGIN,\n            status: STATUS_OK,\n            profile,\n            defaultCollection,\n          });\n        }\n      }\n    })();\n  }, [dispatch, state.getIn([\"profile\", \"isLoggedIn\"])]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/play/:sessionId\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/play\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/report\">\n            <AppNav />\n            <ReportPage />\n          </Route>\n          <Route\n            path=\"/collections\"\n            render={() => {\n              if (!state.getIn([\"profile\", \"isLoggedIn\"])) {\n                return <Redirect to=\"/login\" />;\n              }\n\n              return (\n                <>\n                  <AppNav />\n                  <CollectionListPage />\n                  <Route path=\"/collections/:collectionId\">\n                    <EditCollectionModal />\n                  </Route>\n                </>\n              );\n            }}\n          />\n          <Route>\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from 'immutable';\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_LOGIN,\n  ACTION_LOGOUT,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PENDING,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\n\nexport const initialState = fromJS({\n  profile: {\n    isLoggedIn: false,\n  },\n  gameSession: {\n    id: null,\n    status: SESSION_STATUS_PENDING,\n  },\n  collections: [],\n  report: {},\n});\n\nexport default (state, { type, status, ...action }) => {\n  if (status === STATUS_ERROR) {\n    if (action.error && action.error === 'Invalid token') {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    return state;\n  }\n  if (status === STATUS_PENDING) {\n    return state;\n  }\n\n  console.log({ type, action, state: state.toJS() });\n  switch (type) {\n    case ACTION_LOGIN: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: true,\n          defaultCollection: action.defaultCollection,\n          ...action.profile,\n        })\n      );\n    }\n    case ACTION_LOGOUT: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    case ACTION_LIST_COLLECTIONS: {\n      return state\n        .set('collections', fromJS(action.collections))\n        .set('myCollections', fromJS(action.myCollections));\n    }\n    case ACTION_CREATE_COLLECTION: {\n      return state.updateIn(['myCollections'], (collections) =>\n        collections.unshift(fromJS(action.collection))\n      );\n    }\n    case ACTION_START_SESSION: {\n      return state.setIn(\n        ['gameSession'],\n        fromJS({\n          ...action.session,\n          hasNext: true,\n          status: SESSION_STATUS_PLAYING,\n        })\n      );\n    }\n    case ACTION_NEXT_WORD: {\n      return state\n        .setIn(['gameSession', 'term'], fromJS(action.term))\n        .setIn(['gameSession', 'cursor'], action.cursor)\n        .setIn(['gameSession', 'hasNext'], action.hasNext);\n    }\n    case ACTION_SHOW_REPORT: {\n      return state\n        .setIn(['gameSession', 'status'], SESSION_STATUS_DONE)\n        .set('report', fromJS(action.report));\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport reducer, { initialState } from \"./components/reducer\";\nimport { init as initSession } from \"./components/session\";\n\nconst Index = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <App />\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\ninitSession().then(() => {\n  ReactDOM.render(<Index />, document.getElementById(\"root\"));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}