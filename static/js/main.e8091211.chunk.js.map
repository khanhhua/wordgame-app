{"version":3,"sources":["components/context.js","components/network.js","components/Loader.js","components/session.js","components/Stage.js","components/constants.js","components/LineChartWeeklyPerformance.js","components/Report.js","pages/PlayPage.js","pages/LoginPage.js","components/github.js","components/CollectionList.js","pages/CollectionListPage.js","components/BarChartHistogram.js","pages/ReportPage.js","components/AppNav.js","components/EditCollectionModal.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["DispatchContext","React","createContext","StateContext","BASE_URL","process","request","url","method","a","body","localStorage","getItem","headers","fetch","catch","error","ok","handleResponse","res","contentType","get","match","status","json","text","api","uri","post","payload","JSON","stringify","put","patch","delete","Modal","isOpen","contentClassName","ModalBody","className","db","init","openDB","upgrade","createObjectStore","keyPath","createIndex","createSession","terms","txSession","transaction","sessionId","Date","now","toString","Promise","all","store","add","id","corrects","wrongs","count","length","nextWordIndex","done","tx","clear","sort","Math","random","map","term","index","getSession","objectStore","session","getNextTerm","storeSession","getFromIndex","hasNext","updateStats","entry","correct","stats","concat","getSessionStats","openCursor","cursor","push","value","continue","reduce","acc","find","word","termId","gender","tags","includes","der","die","das","AddToCollectionModal","addToCollection","dispatch","useContext","state","history","useHistory","useState","setIsOpen","useEffect","type","network","collections","status_code","replace","expired","ModalHeader","FormGroup","row","Label","Dropdown","toggle","DropdownToggle","caret","DropdownMenu","item","DropdownItem","key","onClick","busy","setStatus","showingAnswer","setShowingAnswer","showingAddToCollectionModal","setShowingAddToCollectionModal","timestamp","setTimestamp","fetchNextWord","useCallback","onSelectAnswer","answer","getIn","wordTags","seconds","article","showReport","report","onSkipClick","wordId","term_id","skipped","collectionId","collection","onNextClick","style","wordBreak","ModalFooter","Button","color","Loader","defaultLineDataSeriesOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","weeklyPerformance","labels","date","week","getMonth","getDate","confidence","confidence_factor","toFixed","correct_factor","data","datasets","label","width","height","options","scales","yAxes","ticks","max","min","stepSize","maintainAspectRatio","layout","padding","sessionRatios","role","LineChartWeeklyPerformance","toJS","props","recaptcha","setRecaptcha","pathParams","useParams","onStartSession","execute","recaptchaToken","token","console","log","setItem","load","_recaptcha","createOK","createdSession","createError","onSuccess","response","access_code","code","profile","defaultCollection","default_collection","marginTop","Stage","Report","to","disabled","block","clientId","responseType","params","location","useLocation","accessToken","profileObj","Alert","content","parse","Error","encoding","escaped","decodeURIComponent","escape","atob","parsed","getCollections","getTermsByCollection","file","flag","decoded","split","filter","Boolean","line","parts","meaning","words","onReviewClick","onEditClick","editable","visible","name","newCollection","setNewCollection","newCollectionNameRef","useRef","then","myCollections","onNewCollectionCreate","current","size","CollectionList","Form","Input","innerRef","borderWidth","hoverBackgroundColor","hoverBorderColor","histogram","correct_count","wrong_count","xAxes","distribution","bgClasses","MAS","FEM","NEU","classFromTags","exec","worstPerformers","setReport","worst_performers","weekly_performance","Card","CardHeader","CardBody","Badge","pill","opacity","BarChartHistogram","onLogoutClick","window","Navbar","light","NavbarBrand","Nav","exact","NavItem","debouncedNetwork","s","proxy","Object","keys","forEach","defineProperty","_debounce","debounce","debouncedSearch","inputValue","callback","replaceState","leading","trailing","setCollection","query","setQuery","shownCount","setShownCount","onCloseClick","onEditCollectionNameChanged","target","p","onNewTermSelected","choice","action","onTermRemoved","_c","onChange","placeholder","onInputChange","loadOptions","ListGroup","flush","slice","ListGroupItem","App","path","LoginPage","AppNav","PlayPage","ReportPage","render","CollectionListPage","EditCollectionModal","hostname","initialState","fromJS","isLoggedIn","gameSession","set","updateIn","unshift","setIn","Index","useReducer","reducer","Provider","initSession","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e8091211.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n","import { default as _debounce } from \"lodash.debounce\";\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000\";\nconst prefix = \"wg\"; // wordgame\n\n/**\n *\n * @param url\n * @param method\n * @param body\n * @returns {Promise<Response|{ ok: boolean }>}\n */\nconst request = async (url, method, body = null) => {\n  const token = localStorage.getItem(`${prefix}:token`);\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    // headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Normalize reponse to { ok, error }\n  return fetch(\n    url,\n    method === \"GET\" || method === \"DELETE\"\n      ? { headers, method }\n      : {\n          headers,\n          method,\n          body,\n        }\n  ).catch((error) => {\n    return {\n      ok: false,\n      error,\n    };\n  });\n};\n\nconst handleResponse = async (res) => {\n  if (!res) {\n    return { ok: false };\n  }\n\n  try {\n    const contentType = res.headers.get(\"content-type\");\n    if (contentType && contentType.match(/json/)) {\n      if (res.status >= 400) {\n        return {\n          ok: false,\n          error: await res.json(),\n        };\n      }\n\n      return res.json();\n    } else {\n      return {\n        ok: false,\n        error: await res.text(),\n      };\n    }\n  } catch (error) {\n    return { ok: false, error };\n  }\n};\n\nconst api = {\n  request,\n  async get(uri) {\n    const res = await request(`${BASE_URL}${uri}`, \"GET\");\n    return handleResponse(res);\n  },\n  async post(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      \"POST\",\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async put(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      \"PUT\",\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async patch(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      \"PATCH\",\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async delete(uri) {\n    const res = await request(`${BASE_URL}${uri}`, \"DELETE\");\n    return handleResponse(res);\n  },\n};\n\nexport const debounce = (s) => {\n  const proxy = {};\n  Object.keys(api).forEach((key) => {\n    Object.defineProperty(proxy, key, {\n      value: _debounce(api[key], s * 1000),\n    });\n  });\n\n  return proxy;\n};\n\nexport default api;\n","import React from \"react\";\nimport { Modal, ModalBody } from \"reactstrap\";\n\nexport default () => (\n  <Modal isOpen={true} contentClassName=\"bg-transparent border-0\">\n    <ModalBody>\n      <div className=\"loader\">Loading...</div>\n    </ModalBody>\n  </Modal>\n);\n","import { openDB } from \"idb\";\n\nconst DB_NAME = \"WordGame\";\nconst TBL_SESSIONS = \"sessions\";\nconst TBL_TERMS = \"terms\";\nlet db = null;\n\nexport const init = async () => {\n  db = await openDB(DB_NAME, 4, {\n    upgrade(db) {\n      db.createObjectStore(TBL_SESSIONS, {\n        keyPath: \"id\",\n      });\n      db.createObjectStore(TBL_TERMS, {\n        keyPath: \"id\",\n      }).createIndex(\"index\", \"index\");\n    },\n  });\n};\n\nexport const createSession = async (terms) => {\n  const txSession = db.transaction(TBL_SESSIONS, \"readwrite\");\n  const sessionId = Date.now().toString();\n  await Promise.all([\n    txSession.store.add({\n      id: sessionId,\n      corrects: 0,\n      wrongs: 0,\n      count: terms.length,\n      nextWordIndex: 0,\n    }),\n    txSession.done,\n  ]);\n\n  const tx = db.transaction(TBL_TERMS, \"readwrite\");\n  await tx.store.clear();\n  await Promise.all(\n    terms\n      .sort(() => Math.random() - 0.5)\n      .map((term, index) => {\n        return tx.store.add({\n          ...term,\n          index,\n        });\n      })\n  );\n\n  await tx.done;\n\n  return sessionId;\n};\n\nexport const getSession = async (sessionId) => {\n  const store = db.transaction(TBL_SESSIONS).objectStore(TBL_SESSIONS);\n  const session = await store.get(sessionId);\n\n  return session;\n};\n\nexport const getNextTerm = async (sessionId) => {\n  const storeSession = db\n    .transaction(TBL_SESSIONS, \"readwrite\")\n    .objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  const { nextWordIndex, count } = session;\n  if (nextWordIndex === -1) {\n    return null;\n  }\n  await storeSession.put({\n    ...session,\n    nextWordIndex: nextWordIndex + 1 < count ? nextWordIndex + 1 : -1,\n  });\n\n  const term = await db.getFromIndex(TBL_TERMS, \"index\", nextWordIndex);\n\n  return {\n    term,\n    hasNext: nextWordIndex + 1 < count,\n  };\n};\n\nexport const updateStats = async (sessionId, entry) => {\n  const tx = db.transaction(TBL_SESSIONS, \"readwrite\");\n  const storeSession = tx.objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  await storeSession.put({\n    ...session,\n    corrects: session.corrects + entry.correct,\n    wrongs: session.wrongs + !entry.correct,\n    stats: (session.stats || []).concat(entry),\n  });\n  await tx.done;\n\n  return {\n    ok: true,\n  };\n};\n\nexport const getSessionStats = async (sessionId) => {\n  const terms = [];\n  let cursor = await db.transaction(TBL_TERMS).store.openCursor();\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  const session = await db.get(TBL_SESSIONS, sessionId);\n\n  const stats = session.stats.reduce(\n    (acc, entry) => {\n      const term = terms.find(({ word: key }) => key === entry.termId);\n      const gender = term.tags.includes(\"MAS\")\n        ? \"der\"\n        : term.tags.includes(\"FEM\")\n        ? \"die\"\n        : term.tags.includes(\"NEU\")\n        ? \"das\"\n        : null;\n      if (!gender) {\n        return acc;\n      }\n\n      if (entry.correct) {\n        acc[gender].corrects += 1;\n      } else {\n        acc[gender].wrongs += 1;\n      }\n\n      return acc;\n    },\n    {\n      der: { corrects: 0, wrongs: 0 },\n      die: { corrects: 0, wrongs: 0 },\n      das: { corrects: 0, wrongs: 0 },\n    }\n  );\n\n  return stats;\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  FormGroup,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport network from \"../components/network\";\nimport {\n  ACTION_ADD_TO_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport Loader from \"./Loader\";\nimport { getNextTerm, getSessionStats, updateStats } from \"./session\";\n\nconst AddToCollectionModal = ({ term, addToCollection }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const type = ACTION_LIST_COLLECTIONS;\n      const { ok, collections, error } = await network.get(\n        \"/api/me/collections\"\n      );\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        dispatch({ type, status: STATUS_ERROR, error });\n        return;\n      }\n      dispatch({ type, status: STATUS_OK, collections });\n    })();\n  }, [dispatch]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader>Add \"{term.get(\"word\")}\" to collection...</ModalHeader>\n      <ModalBody>\n        <FormGroup row>\n          <Label className=\"col-form-label col-2\">Collection</Label>\n          <div className=\"col-10\">\n            <Dropdown isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\n              <DropdownToggle\n                caret\n                className=\"bg-transparent text-black-50 w-100\"\n              >\n                Choose a collection...\n              </DropdownToggle>\n              <DropdownMenu className=\"w-100\">\n                {state.get(\"collections\").map((item) => (\n                  <DropdownItem\n                    key={item.get(\"id\")}\n                    onClick={() => addToCollection(item.get(\"id\"))}\n                  >\n                    {item.get(\"name\")}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n        </FormGroup>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default ({ sessionId }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [showingAnswer, setShowingAnswer] = useState(null);\n  const [\n    showingAddToCollectionModal,\n    setShowingAddToCollectionModal,\n  ] = useState(false);\n\n  const [timestamp, setTimestamp] = useState(null);\n\n  const fetchNextWord = useCallback(async () => {\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_PENDING });\n    const { term, hasNext, error } = await getNextTerm(sessionId);\n\n    if (!term) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace(\"/login\", { expired: true });\n        return;\n      }\n\n      dispatch({ type: ACTION_NEXT_WORD, status: STATUS_ERROR, error });\n      return;\n    }\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_OK, term, hasNext });\n    setTimestamp(Date.now() / 1000);\n  }, [dispatch, state, sessionId]);\n\n  const onSelectAnswer = useCallback(\n    async (answer) => {\n      const termId = state.getIn([\"gameSession\", \"term\", \"id\"]);\n      const wordTags = state.getIn([\"gameSession\", \"term\", \"tags\"]);\n      const correct = wordTags.includes(answer);\n\n      const { ok, error } = await updateStats(sessionId, {\n        termId,\n        correct,\n        seconds: Date.now() / 1000 - timestamp,\n      });\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n        return;\n      }\n\n      if (!correct) {\n        setShowingAnswer({\n          correct,\n          article: wordTags.includes(\"MAS\")\n            ? \"der\"\n            : wordTags.includes(\"FEM\")\n            ? \"die\"\n            : \"das\",\n        });\n      } else {\n        if (state.getIn([\"gameSession\", \"hasNext\"])) {\n          await fetchNextWord();\n        } else {\n          showReport();\n        }\n      }\n    },\n    [dispatch, timestamp, state.getIn([\"gameSession\", \"term\"])]\n  );\n\n  const showReport = useCallback(async () => {\n    setStatus({ busy: true });\n\n    const sessionId = state.getIn([\"gameSession\", \"id\"]);\n    // TODO await network.delete(`/api/session`);\n\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_PENDING, sessionId });\n    const stats = await getSessionStats(sessionId);\n\n    dispatch({\n      type: ACTION_SHOW_REPORT,\n      status: STATUS_OK,\n      report: { session: stats },\n    });\n  }, [dispatch, state.getIn([\"gameSession\", \"term\"])]);\n\n  const onSkipClick = useCallback(async () => {\n    const wordId = state.getIn([\"gameSession\", \"term\", \"id\"]);\n    const { ok } = await network.post(`/api/stats`, {\n      term_id: wordId,\n      skipped: true,\n    });\n    if (!ok) {\n      return;\n    }\n\n    await fetchNextWord();\n  }, [dispatch, state.getIn([\"gameSession\", \"term\"])]);\n\n  const addToCollection = useCallback(\n    async (collectionId) => {\n      const term = state.getIn([\"gameSession\", \"term\"]);\n      dispatch({ type: ACTION_ADD_TO_COLLECTION, status: STATUS_PENDING });\n      const { ok, collection, error } = await network.post(\n        `/api/me/collections/${collectionId}/terms`,\n        {\n          term_id: term.get(\"id\"),\n        }\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        dispatch({\n          type: ACTION_ADD_TO_COLLECTION,\n          status: STATUS_ERROR,\n          error,\n        });\n        return;\n      }\n\n      dispatch({\n        type: ACTION_ADD_TO_COLLECTION,\n        status: STATUS_OK,\n        collection,\n      });\n      if (state.getIn([\"gameSession\", \"hasNext\"])) {\n        await fetchNextWord();\n      } else {\n        showReport();\n      }\n    },\n    [\n      dispatch,\n      state.getIn([\"gameSession\", \"term\"]),\n      state.getIn([\"gameSession\", \"hasNext\"]),\n    ]\n  );\n\n  const onNextClick = useCallback(async () => {\n    setShowingAnswer(null);\n    if (state.getIn([\"gameSession\", \"hasNext\"])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [\n    dispatch,\n    state.getIn([\"gameSession\", \"term\"]),\n    state.getIn([\"gameSession\", \"hasNext\"]),\n  ]);\n\n  useEffect(() => {\n    (async () => {\n      await fetchNextWord();\n    })();\n  }, []);\n  useEffect(() => {\n    setShowingAddToCollectionModal(false);\n  }, [state.getIn([\"gameSession\", \"term\"])]);\n\n  const term = state.getIn([\"gameSession\", \"term\"]);\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2 className=\"text-center text-black-50\">Play</h2>\n        {!term && <p className=\"text-center\">Loading...</p>}\n        {!!term && (\n          <>\n            <div className=\"term mt-5 mb-5\">\n              <div className=\"text-center display-2 text-break\">\n                {term.get(\"word\")}\n              </div>\n              <button className=\"btn btn-sm btn-link\">Meaning >></button>\n            </div>\n\n            <div className=\"actions text-center\">\n              <div className=\"btn-group w-75\">\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-masculine\"\n                  onClick={() => onSelectAnswer(\"MAS\")}\n                >\n                  Der\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-feminine\"\n                  onClick={() => onSelectAnswer(\"FEM\")}\n                >\n                  Die\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-neuter\"\n                  onClick={() => onSelectAnswer(\"NEU\")}\n                >\n                  Das\n                </button>\n              </div>\n              <div className=\"btn-group w-100 mt-5\">\n                <button\n                  className=\"btn btn-light btn-sm\"\n                  onClick={() => setShowingAddToCollectionModal(true)}\n                >\n                  Learn\n                </button>\n                <button\n                  className=\"btn btn-primary btn-sm\"\n                  onClick={onSkipClick}\n                >\n                  Skip\n                </button>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button className=\"btn btn-light\" onClick={showReport}>\n                  I'm done for now\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showingAnswer && (\n        <Modal isOpen={true}>\n          <ModalBody>\n            <div\n              className=\"display-2 text-center\"\n              style={{ wordBreak: \"break-word\" }}\n            >\n              <span className=\"font-weight-lighter text-muted\">\n                {term.get(\"word\")}\n              </span>\n              , <br />\n              <span className=\"font-weight-bold\">{showingAnswer.article}</span>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={onNextClick} className=\"mx-auto\">\n              Next\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n      {!!showingAddToCollectionModal && (\n        <AddToCollectionModal term={term} addToCollection={addToCollection} />\n      )}\n      {!!status.busy && <Loader />}\n    </section>\n  );\n};\n","export const STATUS_OK = \"ok\";\nexport const STATUS_ERROR = \"error\";\nexport const STATUS_PENDING = \"pending\";\n\nexport const SESSION_STATUS_PENDING = \"pending\";\nexport const SESSION_STATUS_PLAYING = \"playing\";\nexport const SESSION_STATUS_DONE = \"done\";\n\nexport const ACTION_LOGIN = \"user/login\";\nexport const ACTION_LOGOUT = \"user/logout\";\nexport const ACTION_START_SESSION = \"user/start-session\";\nexport const ACTION_NEXT_WORD = \"user/next-term\";\nexport const ACTION_SHOW_REPORT = \"user/show-report\";\nexport const ACTION_LIST_COLLECTIONS = \"user/list-collections\";\nexport const ACTION_ADD_TO_COLLECTION = \"user/add-to-collections\";\nexport const ACTION_CREATE_COLLECTION = \"user/create-collection\";\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst defaultLineDataSeriesOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: \"rgba(63,69,192,0.4)\",\n  borderColor: \"rgb(65,121,192)\",\n  borderCapStyle: \"butt\",\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: \"miter\",\n  pointBorderColor: \"rgba(75,192,192,1)\",\n  pointBackgroundColor: \"#fff\",\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n  pointHoverBorderColor: \"rgba(220,220,220,1)\",\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nconst formatDate = (date) => `${date.getMonth() + 1}.${date.getDate()}`;\n\nexport default ({ weeklyPerformance }) => {\n  const labels = weeklyPerformance.map(({ week }) =>\n    formatDate(new Date(week * 7 * 86400 * 1000))\n  );\n  const confidence = weeklyPerformance.map(({ confidence_factor }) =>\n    (confidence_factor * 100).toFixed(2)\n  );\n  const correct = weeklyPerformance.map(({ correct_factor }) =>\n    (correct_factor * 100).toFixed(2)\n  );\n\n  return (\n    <Line\n      data={{\n        labels,\n        datasets: [\n          {\n            label: \"Correct\",\n            data: correct,\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: \"Confidence\",\n            data: confidence,\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: \"#C0122A\",\n            borderColor: \"#f3132c\",\n          },\n        ],\n      }}\n      width={100}\n      height={40}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { max: 100, min: 0, stepSize: 20 } }],\n        },\n        maintainAspectRatio: true,\n        layout: {\n          padding: 0,\n        },\n      }}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { StateContext } from \"./context\";\nimport LineChartWeeklyPerformance from \"./LineChartWeeklyPerformance\";\n\n/**\n * Post-session report\n * @returns {*}\n */\nexport default () => {\n  const state = useContext(StateContext);\n\n  const session = state.getIn([\"report\", \"session\"]);\n  const weeklyPerformance = state.getIn([\"report\", \"weekly_performance\"]);\n\n  const sessionRatios = {\n    der:\n      session.getIn([\"der\", \"corrects\"]) /\n      (session.getIn([\"der\", \"corrects\"]) + session.getIn([\"der\", \"wrongs\"])),\n    die:\n      session.getIn([\"die\", \"corrects\"]) /\n      (session.getIn([\"die\", \"corrects\"]) + session.getIn([\"die\", \"wrongs\"])),\n    das:\n      session.getIn([\"das\", \"corrects\"]) /\n      (session.getIn([\"das\", \"corrects\"]) + session.getIn([\"das\", \"wrongs\"])),\n  };\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2>Report</h2>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3>Session Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DER</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-masculine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.der * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DIE</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-feminine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.die * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DAS</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-neuter\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.das * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {!!weeklyPerformance && (\n          <div className=\"card mt-4\">\n            <div className=\"card-header\">\n              <h3 className=\"mb-0\">Weekly Report</h3>\n            </div>\n            <div className=\"card-body\">\n              <LineChartWeeklyPerformance\n                weeklyPerformance={weeklyPerformance.toJS()}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport network from \"../components/network\";\nimport {\n  ACTION_LOGIN,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport Stage from \"../components/Stage\";\nimport Report from \"../components/Report\";\nimport GoogleLogin from \"react-google-login\";\nimport { Button } from \"reactstrap\";\nimport { load } from \"recaptcha-v3\";\nimport { getSession } from \"../components/session\";\n\nconst CAPTCHA_CLIENT_KEY = \"6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [recaptcha, setRecaptcha] = useState(null);\n  const history = useHistory();\n  const pathParams = useParams();\n\n  const onStartSession = useCallback(async () => {\n    const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const { ok, session, token, error } = await network.post(\"/api/session\", {\n      recaptcha: recaptchaToken,\n    });\n    if (!ok) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace(\"/login\", { expired: true });\n        return;\n      }\n\n      return console.log({ error });\n    }\n    localStorage.setItem(\"wg:token\", token);\n    history.replace(`/play/${session.id}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (pathParams.sessionId) {\n        const session = await getSession(pathParams.sessionId);\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n      } else {\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n        const { ok, session, error } = await network.get(\"/api/session\");\n        if (!ok) {\n          if (error.status_code === 401) {\n            localStorage.clear();\n            history.replace(\"/login\", { expired: true });\n            return;\n          }\n\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_ERROR, error });\n          return;\n        }\n\n        if (!session) {\n          const {\n            ok: createOK,\n            session: createdSession,\n            error: createError,\n          } = await network.post(\"/api/session\");\n          if (!createOK) {\n            dispatch({\n              type: ACTION_START_SESSION,\n              status: STATUS_ERROR,\n              error: createError,\n            });\n            return;\n          }\n\n          dispatch({\n            type: ACTION_START_SESSION,\n            status: STATUS_OK,\n            session: createdSession,\n          });\n        } else {\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n        }\n      }\n    })();\n  }, [dispatch, pathParams.sessionId]);\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const {\n        token,\n        profile,\n        default_collection: defaultCollection,\n      } = await network.post(\"/api/auth\", {\n        access_code: response.code,\n      });\n\n      localStorage.setItem(\"wg:token\", token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n        profile,\n        defaultCollection,\n      });\n      history.replace(\"/collections\");\n    },\n    [dispatch, history]\n  );\n\n  const session = state.getIn([\"gameSession\"]);\n\n  return (\n    <div className=\"container play-page\">\n      {!(session && session.get(\"id\")) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            <div\n              className=\"btn btn-primary btn-lg w-100\"\n              style={{ marginTop: \"75%\" }}\n            >\n              START\n            </div>\n          </div>\n        </section>\n      )}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_PLAYING\n      ) && <Stage sessionId={session.get(\"id\")} />}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_DONE\n      ) && <Report sessionId={session.get(\"id\")} />}\n      {!!(\n        session &&\n        session.get(\"id\") &&\n        session.get(\"status\") === SESSION_STATUS_DONE\n      ) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            {state.getIn([\"profile\", \"isLoggedIn\"]) && (\n              <Link className=\"btn btn-sm btn-link btn-block\" to=\"/collections\">\n                Back to collections\n              </Link>\n            )}\n            {!state.getIn([\"profile\", \"isLoggedIn\"]) && (\n              <>\n                <div className=\"row mt-2 justify-content-center\">\n                  <div className=\"col-6\">\n                    <Button\n                      disabled={!recaptcha}\n                      color=\"primary\"\n                      block\n                      onClick={onStartSession}\n                    >\n                      TRY AGAIN!\n                    </Button>\n                  </div>\n                </div>\n\n                <GoogleLogin\n                  clientId={\n                    \"976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com\"\n                  }\n                  onSuccess={onSuccess}\n                  responseType={\"code\"}\n                  className=\"mt-5\"\n                />\n                <p className=\"text-muted\">...to keep track of your progress</p>\n              </>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { load } from \"recaptcha-v3\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { Alert, Button } from \"reactstrap\";\nimport { DispatchContext } from \"../components/context\";\nimport { ACTION_LOGIN, STATUS_OK } from \"../components/constants\";\nimport network from \"../components/network\";\n\nconst CAPTCHA_CLIENT_KEY = \"6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh\";\n\nexport default () => {\n  const [recaptcha, setRecaptcha] = useState(null);\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem(\"wg:profile\", JSON.stringify(profileObj));\n      localStorage.setItem(\"wg:token\", token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n      });\n      history.replace(\"/collections\");\n    },\n    [dispatch, history]\n  );\n  const onStartSession = useCallback(async () => {\n    const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const { ok, session, token, error } = await network.post(\"/api/session\", {\n      recaptcha: recaptchaToken,\n    });\n    if (!ok) {\n      return console.log({ error });\n    }\n    localStorage.setItem(\"wg:token\", token);\n    history.replace(`/play/${session.id}`);\n  }, [recaptcha]);\n\n  useEffect(() => {\n    console.log(params);\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  return (\n    <div className=\"container login-page\">\n      {!!(location.state && location.state.expired) && (\n        <Alert\n          className=\"mt-2 alert-float\"\n          isOpen={true}\n          color=\"warning\"\n          toggle={() => history.replace(\"/login\")}\n        >\n          <h4 className=\"alert-heading\">Your session has expired.</h4>\n          <p className=\"mt-3 text-center text-sm-left\">\n            Without logging in, your session lasts for only for 10 minutes.\n          </p>\n        </Alert>\n      )}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h3\n            style={{\n              marginTop: \"50%\",\n            }}\n          >\n            Hallo Deutsch\n          </h3>\n          <GoogleLogin\n            clientId={\n              \"976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com\"\n            }\n            onSuccess={onSuccess}\n            responseType={\"token\"}\n          />\n          <p className=\"text-muted\">\n            ...to coup with the insane irregularity in the German language.\n          </p>\n        </div>\n      </section>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <Button\n            disabled={!recaptcha}\n            color=\"primary\"\n            block\n            onClick={onStartSession}\n          >\n            TRY NOW!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import api from \"./network\";\n\nasync function content(url, parse) {\n  const res = await api.request(url, \"GET\");\n  if (!res.ok) {\n    throw new Error(\"Bad Request\");\n  }\n\n  const data = await res.json();\n  if (data.encoding !== \"base64\") {\n    throw new Error(\"Bad Request\");\n  }\n\n  const escaped = decodeURIComponent(escape(atob(data.content)));\n  const parsed = parse(escaped);\n  return parsed;\n}\n\nexport const getCollections = async () => {\n  const url =\n    \"https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen/package.json\";\n  try {\n    const json = await content(url, JSON.parse);\n    return json.collections;\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getTermsByCollection = async ({ file }, flag=null) => {\n  const url = `https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen/${file}`;\n  try {\n    const words = await content(url, (decoded) => {\n      return decoded\n        .split(\"\\n\")\n        .filter(Boolean)\n        .map((line) => {\n          const parts = line.split(\";\");\n          return {\n            id: parts[0],\n            word: parts[0],\n            meaning: parts[1],\n            tags: parts[2],\n          };\n        })\n        .filter(term => {\n          switch (flag) {\n            default: return true;\n            case 'noun': {\n              const {tags} = term;\n              return tags.includes('MAS') || tags.includes('FEM') || tags.includes('NEU');\n            }\n          }\n        });\n    });\n    console.log({words});\n    return words;\n  } catch (e) {\n    return [];\n  }\n};\n","import React from \"react\";\n\nexport default ({ collections, onReviewClick, onEditClick }) => {\n  const editable = typeof onEditClick === \"function\";\n\n  return (\n    <div className=\"list-group list-group-flush\">\n      {collections.map((item) => (\n        <div key={item.get(\"id\")} className=\"list-group-item px-1\">\n          {item.get(\"name\")}\n          <div className=\"actions float-right\">\n            <div className=\"btn-group btn-group-sm\">\n              {editable && (\n                <button\n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => onEditClick(item)}\n                >\n                  Edit\n                </button>\n              )}\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => onReviewClick(item)}\n              >\n                Review\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport network from \"../components/network\";\nimport { getCollections, getTermsByCollection } from \"../components/github\";\nimport { createSession } from \"../components/session\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_START_SESSION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport CollectionList from \"../components/CollectionList\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [newCollection, setNewCollection] = useState({\n    visible: false,\n    name: \"\",\n  });\n  const newCollectionNameRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      const {\n        ok,\n        collections,\n        myCollections,\n        error,\n      } = await getCollections().then((collections) => ({\n        collections,\n        myCollections: [],\n        ok: true,\n        error: null,\n      }));\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        dispatch({\n          type: ACTION_LIST_COLLECTIONS,\n          status: STATUS_ERROR,\n          error,\n        });\n        return;\n      }\n\n      dispatch({\n        type: ACTION_LIST_COLLECTIONS,\n        status: STATUS_OK,\n        collections,\n        myCollections,\n      });\n    })();\n  }, [dispatch]);\n\n  const onReviewClick = async (collection) => {\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n    const terms = await getTermsByCollection({ file: collection.get(\"file\") }, 'noun');\n    const sessionId = await createSession(terms);\n\n    history.push(`/play/${sessionId}`);\n  };\n\n  const onNewCollectionCreate = useCallback(async () => {\n    const type = ACTION_CREATE_COLLECTION;\n    dispatch({ type, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post(\n      \"/api/me/collections\",\n      {\n        name: newCollectionNameRef.current.value,\n      }\n    );\n    if (!ok) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace(\"/login\", { expired: true });\n        return;\n      }\n\n      return dispatch({ type, status: STATUS_ERROR, error });\n    }\n\n    dispatch({ type, status: STATUS_OK, collection });\n    setNewCollection({ visible: false });\n  }, [dispatch, newCollectionNameRef]);\n\n  const onEditClick = useCallback(\n    async (collection) => {\n      history.push(`/collections/${collection.get(\"id\")}`);\n    },\n    [history]\n  );\n\n  const collections = state.get(\"collections\");\n  const myCollections = state.get(\"myCollections\");\n\n  return (\n    <div className=\"container my-collection-list-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          {!!(myCollections && myCollections.size) && (\n            <>\n              <div className=\"w-100\">\n                <button\n                  onClick={() => setNewCollection({ visible: true })}\n                  className=\"btn btn-sm btn-light mt-2 float-right\"\n                >\n                  Add\n                </button>\n                <h2>My Learning List</h2>\n              </div>\n              <CollectionList\n                onEditClick={onEditClick}\n                collections={myCollections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n          {!(collections && collections.size) && (\n            <p className=\"text-center\">Loading...</p>\n          )}\n          {!!(collections && collections.size) && (\n            <>\n              <h2 className=\"mt-5\">Collections</h2>\n              <CollectionList\n                collections={collections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n        </div>\n      </section>\n      {!!newCollection.visible && (\n        <Modal isOpen={newCollection.visible}>\n          <ModalHeader toggle={() => setNewCollection({ visible: false })}>\n            New Collection\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input innerRef={newCollectionNameRef} />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onNewCollectionCreate} color=\"primary\">\n              Create\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst defaultLineDataSeriesOptions = {\n  backgroundColor: \"rgba(63,69,192,0.4)\",\n  borderColor: \"rgb(65,121,192)\",\n  borderWidth: 1,\n  hoverBackgroundColor: \"rgba(63,69,192,0.4)\",\n  hoverBorderColor: \"rgb(65,121,192)\",\n};\n\nexport default ({ histogram }) => {\n  return (\n    <Bar\n      width={100}\n      height={50}\n      data={{\n        labels: histogram.map(({ seconds }) => seconds),\n        datasets: [\n          {\n            label: \"Correct Response Time (s)\",\n            data: histogram.map(({ correct_count }) => correct_count),\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: \"Incorrect Response Time (s)\",\n            data: histogram.map(({ wrong_count }) => wrong_count),\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: \"rgba(192,83,102,0.4)\",\n            borderColor: \"rgb(192,73,90)\",\n          },\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { min: 0 } }],\n          xAxes: [\n            {\n              distribution: \"series\",\n            },\n          ],\n        },\n      }}\n    />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Badge, Card, CardBody, CardHeader } from \"reactstrap\";\nimport network from \"../components/network\";\nimport LineChartWeeklyPerformance from \"../components/LineChartWeeklyPerformance\";\nimport BarChartHistogram from \"../components/BarChartHistogram\";\nimport Loader from \"../components/Loader\";\n\nconst bgClasses = {\n  MAS: \"bg-masculine\",\n  FEM: \"bg-feminine\",\n  NEU: \"bg-neuter\",\n};\n\nconst classFromTags = (tags) => {\n  const match = /MAS|FEM|NEU/.exec(tags);\n  if (match) {\n    return bgClasses[match[0]];\n  }\n  return \"\";\n};\n\nexport default (props) => {\n  const history = useHistory();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [report, setReport] = useState({\n    worstPerformers: [],\n    weeklyPerformance: [],\n    histogram: [],\n  });\n  useEffect(() => {\n    (async () => {\n      setStatus({ busy: true });\n      const { ok, report, error } = await network.get(\n        \"/api/stats?reports=weekly&reports=worst&reports=histogram\"\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        setStatus({ error });\n        return;\n      }\n\n      setStatus({ busy: false });\n      setReport({\n        worstPerformers: report.worst_performers,\n        weeklyPerformance: report.weekly_performance,\n        histogram: report.histogram,\n      });\n    })();\n  }, []);\n\n  return (\n    <div className=\"container report-page\">\n      {!!status.busy && <Loader />}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h2>Report</h2>\n\n          <Card>\n            <CardHeader>\n              <h5 className=\"mb-0\">Needs improvements</h5>\n            </CardHeader>\n            <CardBody>\n              {report.worstPerformers.map((item) => (\n                <Badge\n                  pill\n                  className={`p-2 mr-2 mb-2 ${classFromTags(item.tags)}`}\n                  style={{ opacity: 1.05 - item.confidence_factor }}\n                >\n                  {item.word}\n                  <span className=\"pl-2\">{item.correct_factor * 100}%</span>\n                </Badge>\n              ))}\n            </CardBody>\n          </Card>\n\n          <Card className=\"mt-2\">\n            <CardHeader>\n              <h5 className=\"mb-0\">Performance</h5>\n            </CardHeader>\n            <CardBody>\n              {!!(report && report.histogram && report.histogram.length) && (\n                <BarChartHistogram histogram={report.histogram} />\n              )}\n              {!!(\n                report &&\n                report.weeklyPerformance &&\n                report.weeklyPerformance.length\n              ) && (\n                <LineChartWeeklyPerformance\n                  weeklyPerformance={report.weeklyPerformance}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"./context\";\nimport { ACTION_LOGOUT } from \"./constants\";\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const onLogoutClick = useCallback(() => {\n    dispatch({ type: ACTION_LOGOUT });\n    window.localStorage.clear();\n    window.location.replace(\"/login\");\n  }, []);\n\n  return (\n    <Navbar light className=\"bg-light\">\n      <NavbarBrand className=\"font-weight-lighter\">Hallo Deutsch</NavbarBrand>\n      {!!state.getIn([\"profile\", \"isLoggedIn\"]) && (\n        <Nav className=\"mx-auto\">\n          <NavLink to=\"/collections\" exact className=\"nav-item px-2\">\n            Collections\n          </NavLink>\n          <NavLink to=\"/report\" exact className=\"nav-item px-2\">\n            Report\n          </NavLink>\n        </Nav>\n      )}\n      {!!state.getIn([\"profile\", \"isLoggedIn\"]) && (\n        <Nav>\n          <NavItem onClick={onLogoutClick}>Logout</NavItem>\n        </Nav>\n      )}\n    </Navbar>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport AsyncSelect from \"react-select/async\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { default as _debounce } from \"lodash.debounce\";\nimport network, { debounce } from \"./network\";\nimport {\n  ACTION_ADD_TO_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from \"./constants\";\nimport { DispatchContext } from \"./context\";\n\nconst debouncedNetwork = debounce(1);\n\nconst debouncedSearch = _debounce(\n  (inputValue, callback) => {\n    network.get(`/api/search?q=${inputValue}`).then(({ ok, terms, error }) => {\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          window.history.replaceState({ expired: true }, null, \"/login\");\n          return;\n        }\n\n        return [];\n      }\n      callback(terms.map(({ id, word }) => ({ value: id, label: word })));\n    });\n  },\n  1000,\n  {\n    leading: false,\n    trailing: true,\n  }\n);\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const { collectionId = null } = useParams();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [collection, setCollection] = useState({});\n  const [query, setQuery] = useState(\"\");\n  const [shownCount, setShownCount] = useState(10);\n\n  const onCloseClick = useCallback(() => {\n    history.replace(\"/collections\");\n  }, [history]);\n  const onEditCollectionNameChanged = useCallback(\n    async ({ target: { value } }) => {\n      setCollection({\n        ...collection,\n        name: value,\n      });\n\n      const p = debouncedNetwork.patch(`/api/me/collections/${collectionId}`, {\n        name: value,\n      });\n      if (p) {\n        const { ok, error } = await p;\n        if (!ok) {\n          if (error.status_code === 401) {\n            localStorage.clear();\n            history.replace(\"/login\", { expired: true });\n            return;\n          }\n        }\n      }\n    },\n    [collection]\n  );\n\n  const onNewTermSelected = useCallback(\n    async (choice, { action }) => {\n      if (action !== \"select-option\") {\n        return;\n      }\n      const type = ACTION_ADD_TO_COLLECTION;\n      dispatch({ type, status: STATUS_PENDING });\n\n      const { ok, error } = await network.post(\n        `/api/me/collections/${collectionId}/terms`,\n        {\n          term_id: choice.value,\n        }\n      );\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n        return dispatch({ type, status: STATUS_ERROR, error });\n      }\n\n      setCollection({\n        ...collection,\n        terms: [\n          { id: choice.value, word: choice.label },\n          ...(collection.terms || []),\n        ],\n      });\n    },\n    [collection]\n  );\n\n  const onTermRemoved = useCallback(\n    async (termId) => {\n      const { ok, error } = await network.delete(\n        `/api/me/collections/${collectionId}/terms/${termId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setCollection(\n        {\n          ...collection,\n          terms: collection.terms.filter(({ id: key }) => key !== termId),\n        },\n        [collection]\n      );\n    },\n    [collection]\n  );\n\n  useEffect(() => {\n    setStatus({ busy: true });\n    (async () => {\n      const { ok, error, collection: _c } = await network.get(\n        `/api/me/collections/${collectionId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace(\"/login\", { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setStatus({ busy: false });\n      setCollection(_c);\n    })();\n  }, [collectionId]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader toggle={onCloseClick}>Edit Collection</ModalHeader>\n      <ModalBody>\n        {status.busy && <div className=\"loader loader-dark\">Loading...</div>}\n        {!status.busy && (\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                value={collection.name}\n                onChange={onEditCollectionNameChanged}\n              />\n            </FormGroup>\n            <FormGroup>\n              <AsyncSelect\n                placeholder=\"Enter your new word...\"\n                value={query}\n                onInputChange={(value) => setQuery(value)}\n                onChange={onNewTermSelected}\n                loadOptions={debouncedSearch}\n              />\n              <ListGroup flush>\n                {(collection.terms || []).slice(0, shownCount).map((item) => (\n                  <ListGroupItem key={item.id}>\n                    {item.word}\n                    <Button\n                      size=\"sm\"\n                      color=\"link\"\n                      className=\"float-right\"\n                      onClick={() => onTermRemoved(item.id)}\n                    >\n                      &times;\n                    </Button>\n                  </ListGroupItem>\n                ))}\n                {collection.terms && shownCount < collection.terms.length && (\n                  <ListGroupItem>\n                    <Button\n                      color=\"link\"\n                      block\n                      onClick={() => setShownCount(shownCount * 2)}\n                    >\n                      Show more >>\n                    </Button>\n                  </ListGroupItem>\n                )}\n              </ListGroup>\n            </FormGroup>\n          </Form>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={onCloseClick} color=\"light\">\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport PlayPage from \"./pages/PlayPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport CollectionListPage from \"./pages/CollectionListPage\";\nimport ReportPage from \"./pages/ReportPage\";\nimport AppNav from \"./components/AppNav\";\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport network from \"./components/network\";\nimport { ACTION_LOGIN, STATUS_OK } from \"./components/constants\";\nimport EditCollectionModal from \"./components/EditCollectionModal\";\n\nfunction App() {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n    (async () => {\n      const isLoggedIn = state.getIn([\"profile\", \"isLoggedIn\"]);\n      if (isLoggedIn) {\n        return;\n      } else {\n        const accessToken = localStorage.getItem(\"wg:token\");\n        if (accessToken) {\n          const {\n            ok,\n            profile,\n            default_collection: defaultCollection,\n          } = await network.get(\"/api/auth\");\n          if (!ok) {\n            localStorage.clear();\n            window.location.replace(\"/login\");\n            return;\n          }\n\n          dispatch({\n            type: ACTION_LOGIN,\n            status: STATUS_OK,\n            profile,\n            defaultCollection,\n          });\n        }\n      }\n    })();\n  }, [dispatch, state.getIn([\"profile\", \"isLoggedIn\"])]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/play/:sessionId\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/play\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/report\">\n            <AppNav />\n            <ReportPage />\n          </Route>\n          <Route\n            path=\"/collections\"\n            render={() => {\n              if (!state.getIn([\"profile\", \"isLoggedIn\"])) {\n                return <Redirect to=\"/login\" />;\n              }\n\n              return (\n                <>\n                  <AppNav />\n                  <CollectionListPage />\n                  <Route path=\"/collections/:collectionId\">\n                    <EditCollectionModal />\n                  </Route>\n                </>\n              );\n            }}\n          />\n          <Route>\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from \"immutable\";\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_LOGIN,\n  ACTION_LOGOUT,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PENDING,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from \"./constants\";\n\nexport const initialState = fromJS({\n  profile: {\n    isLoggedIn: false,\n  },\n  gameSession: {\n    id: null,\n    status: SESSION_STATUS_PENDING,\n  },\n  collections: [],\n  report: {},\n});\n\nexport default (state, { type, status, ...action }) => {\n  if (status === STATUS_ERROR) {\n    if (action.error && action.error === \"Invalid token\") {\n      return state.set(\n        \"profile\",\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    return state;\n  }\n  if (status === STATUS_PENDING) {\n    return state;\n  }\n\n  console.log({ type, action, state: state.toJS() });\n  switch (type) {\n    case ACTION_LOGIN: {\n      return state.set(\n        \"profile\",\n        fromJS({\n          isLoggedIn: true,\n          defaultCollection: action.defaultCollection,\n          ...action.profile,\n        })\n      );\n    }\n    case ACTION_LOGOUT: {\n      return state.set(\n        \"profile\",\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    case ACTION_LIST_COLLECTIONS: {\n      return state\n        .set(\"collections\", fromJS(action.collections))\n        .set(\"myCollections\", fromJS(action.myCollections));\n    }\n    case ACTION_CREATE_COLLECTION: {\n      return state.updateIn([\"myCollections\"], (collections) =>\n        collections.unshift(fromJS(action.collection))\n      );\n    }\n    case ACTION_START_SESSION: {\n      return state.setIn(\n        [\"gameSession\"],\n        fromJS({\n          ...action.session,\n          hasNext: true,\n          status: SESSION_STATUS_PLAYING,\n        })\n      );\n    }\n    case ACTION_NEXT_WORD: {\n      return state\n        .setIn([\"gameSession\", \"term\"], fromJS(action.term))\n        .setIn([\"gameSession\", \"cursor\"], action.cursor)\n        .setIn([\"gameSession\", \"hasNext\"], action.hasNext);\n    }\n    case ACTION_SHOW_REPORT: {\n      return state\n        .setIn([\"gameSession\", \"status\"], SESSION_STATUS_DONE)\n        .set(\"report\", fromJS(action.report));\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport reducer, { initialState } from \"./components/reducer\";\nimport { init as initSession } from \"./components/session\";\n\nconst Index = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <App />\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\ninitSession().then(() => {\n  ReactDOM.render(<Index />, document.getElementById(\"root\"));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}