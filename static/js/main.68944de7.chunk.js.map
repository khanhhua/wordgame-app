{"version":3,"sources":["components/context.js","components/Loader.js","services/indexeddb.js","services/session.js","components/Stage.js","components/constants.js","components/LineChartWeeklyPerformance.js","components/Report.js","pages/PlayPage.js","pages/LoginPage.js","components/network.js","services/github.js","components/CollectionList.js","pages/CollectionListPage.js","components/BarChartHistogram.js","services/reporting.js","services/settings.js","pages/ReportPage.js","components/AppNav.js","components/EditCollectionModal.js","pages/RepoContentsPage.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["DispatchContext","React","createContext","StateContext","Modal","isOpen","contentClassName","ModalBody","className","db","init","a","openDB","upgrade","createObjectStore","keyPath","createIndex","getDb","renewSession","transaction","store","openCursor","cursor","terms","push","value","continue","createSession","txSession","sessionId","Date","now","toString","Promise","all","add","id","corrects","wrongs","count","length","nextWordIndex","done","tx","clear","sort","Math","random","map","term","index","getSession","objectStore","get","session","getNextTerm","storeSession","hasNext","put","getFromIndex","updateStats","entry","correct","stats","concat","ok","getSessionStats","reduce","acc","find","word","termId","gender","tags","includes","der","die","das","dispatch","useContext","state","history","useHistory","useState","busy","error","status","setStatus","showingAnswer","setShowingAnswer","timestamp","setTimestamp","getIn","fetchNextWord","useCallback","type","Error","showReport","report","onSelectAnswer","answer","wordTags","seconds","status_code","localStorage","replace","expired","article","onSkipClick","onNextClick","useEffect","onKeyPress","e","String","fromCharCode","keyCode","window","addEventListener","removeEventListener","onClick","style","wordBreak","ModalFooter","Button","color","Loader","defaultLineDataSeriesOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","weeklyPerformance","labels","date","week","getMonth","getDate","confidence","confidence_factor","toFixed","correct_factor","data","datasets","label","width","height","options","scales","yAxes","ticks","max","min","stepSize","maintainAspectRatio","layout","padding","sessionRatios","role","LineChartWeeklyPerformance","toJS","props","recaptcha","setRecaptcha","pathParams","useParams","onStartSession","load","_recaptcha","getItem","onSuccess","response","token","accessToken","profileObj","setItem","profile","marginTop","Stage","Report","to","disabled","block","clientId","responseType","params","location","useLocation","JSON","stringify","console","log","Alert","toggle","isSignedIn","BASE_URL","process","request","url","method","body","headers","fetch","catch","handleResponse","res","contentType","match","json","text","api","uri","post","payload","patch","delete","content","parse","encoding","escaped","decodeURIComponent","escape","atob","parsed","DEFAULT_REPO_URL","getRepoContents","repoUrl","contents","self","_links","packageContent","getCollections","collections","item","getTermsByCollection","file","flag","decoded","split","filter","Boolean","line","parts","meaning","words","onReviewClick","onEditClick","editable","key","visible","name","newCollection","setNewCollection","newCollectionNameRef","useRef","then","myCollections","collection","onNewCollectionCreate","network","current","size","CollectionList","ModalHeader","Form","FormGroup","Label","Input","innerRef","borderWidth","hoverBackgroundColor","hoverBorderColor","histogram","correct_count","wrong_count","xAxes","distribution","getLocalReports","weekly","worst","worstPerformers","Object","entries","seconds_correct","total_count","total_seconds","round","slice","histogramData","floor","set","property","path","obj","deepGet","bgClasses","MAS","FEM","NEU","classFromTags","exec","setReport","currentCollection","allTerms","_terms","filteringKeys","Card","CardHeader","CardBody","Badge","pill","opacity","BarChartHistogram","onLogout","Navbar","light","NavbarBrand","Nav","exact","NavItem","buttonText","onLogoutSuccess","debouncedNetwork","s","proxy","keys","forEach","defineProperty","_debounce","debounce","debouncedSearch","inputValue","callback","replaceState","leading","trailing","collectionId","setCollection","query","setQuery","shownCount","setShownCount","onCloseClick","onEditCollectionNameChanged","target","p","onNewTermSelected","choice","action","term_id","onTermRemoved","_c","onChange","placeholder","onInputChange","loadOptions","ListGroup","flush","ListGroupItem","onChooseCollection","settings","App","LoginPage","AppNav","PlayPage","ReportPage","render","CollectionListPage","EditCollectionModal","RepoContentsPage","hostname","initialState","fromJS","isLoggedIn","gameSession","repo","defaultCollection","setIn","updateIn","unshift","Index","useReducer","reducer","Provider","initDb","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.68944de7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n","import React from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\n\nexport default () => (\n  <Modal isOpen={true} contentClassName=\"bg-transparent border-0\">\n    <ModalBody>\n      <div className=\"loader\">Loading...</div>\n    </ModalBody>\n  </Modal>\n);\n","import { openDB } from 'idb';\n\nconst DB_NAME = 'WordGame';\nexport const TBL_SETTINGS = 'settings';\nexport const TBL_SESSIONS = 'sessions';\nexport const TBL_TERMS = 'terms';\n\nlet db = null;\n\nexport const init = async () => {\n  db = await openDB(DB_NAME, 5, {\n    upgrade(db) {\n      db.createObjectStore(TBL_SETTINGS, {\n        keyPath: 'key',\n      });\n      db.createObjectStore(TBL_SESSIONS, {\n        keyPath: 'id',\n      });\n      db.createObjectStore(TBL_TERMS, {\n        keyPath: 'id',\n      }).createIndex('index', 'index');\n    },\n  });\n};\n\nexport const getDb = async () => {\n  if (db) {\n    return db;\n  }\n\n  await init();\n  return db;\n};\n","import { getDb } from './indexeddb';\n\nconst TBL_SESSIONS = 'sessions';\nconst TBL_TERMS = 'terms';\n\nexport const renewSession = async () => {\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_TERMS, 'readonly').store.openCursor();\n  const terms = [];\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  return createSession(terms);\n};\n\nexport const createSession = async (terms) => {\n  const db = await getDb();\n  const txSession = db.transaction(TBL_SESSIONS, 'readwrite');\n  const sessionId = Date.now().toString();\n  await Promise.all([\n    txSession.store.add({\n      id: sessionId,\n      corrects: 0,\n      wrongs: 0,\n      count: terms.length,\n      nextWordIndex: 0,\n    }),\n    txSession.done,\n  ]);\n\n  const tx = db.transaction(TBL_TERMS, 'readwrite');\n  await tx.store.clear();\n  await Promise.all(\n    terms\n      .sort(() => Math.random() - 0.5)\n      .map((term, index) => {\n        return tx.store.add({\n          ...term,\n          index,\n        });\n      })\n  );\n\n  await tx.done;\n\n  return sessionId;\n};\n\nexport const getSession = async (sessionId) => {\n  const db = await getDb();\n  const store = db.transaction(TBL_SESSIONS).objectStore(TBL_SESSIONS);\n  const session = await store.get(sessionId);\n\n  return session;\n};\n\nexport const getNextTerm = async (sessionId) => {\n  const db = await getDb();\n  const storeSession = db\n    .transaction(TBL_SESSIONS, 'readwrite')\n    .objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  const { nextWordIndex, count } = session;\n  if (nextWordIndex === -1) {\n    return {\n      term: null,\n      hasNext: false,\n    };\n  }\n  await storeSession.put({\n    ...session,\n    nextWordIndex: nextWordIndex + 1 < count ? nextWordIndex + 1 : -1,\n  });\n\n  const term = await db.getFromIndex(TBL_TERMS, 'index', nextWordIndex);\n\n  return {\n    term,\n    hasNext: nextWordIndex + 1 < count,\n  };\n};\n\nexport const updateStats = async (sessionId, entry) => {\n  const db = await getDb();\n  const tx = db.transaction(TBL_SESSIONS, 'readwrite');\n  const storeSession = tx.objectStore(TBL_SESSIONS);\n  const session = await storeSession.get(sessionId);\n  await storeSession.put({\n    ...session,\n    corrects: session.corrects + entry.correct,\n    wrongs: session.wrongs + !entry.correct,\n    stats: (session.stats || []).concat(entry),\n  });\n  await tx.done;\n\n  return {\n    ok: true,\n  };\n};\n\nexport const getSessionStats = async (sessionId) => {\n  const terms = [];\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_TERMS).store.openCursor();\n\n  while (cursor) {\n    terms.push(cursor.value);\n    cursor = await cursor.continue();\n  }\n\n  const session = await db.get(TBL_SESSIONS, sessionId);\n\n  const stats = (session.stats || []).reduce(\n    (acc, entry) => {\n      const term = terms.find(({ word: key }) => key === entry.termId);\n      const gender = term.tags.includes('MAS')\n        ? 'der'\n        : term.tags.includes('FEM')\n        ? 'die'\n        : term.tags.includes('NEU')\n        ? 'das'\n        : null;\n      if (!gender) {\n        return acc;\n      }\n\n      if (entry.correct) {\n        acc[gender].corrects += 1;\n      } else {\n        acc[gender].wrongs += 1;\n      }\n\n      return acc;\n    },\n    {\n      der: { corrects: 0, wrongs: 0 },\n      die: { corrects: 0, wrongs: 0 },\n      das: { corrects: 0, wrongs: 0 },\n    }\n  );\n\n  return stats;\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport Loader from './Loader';\nimport { getNextTerm, getSessionStats, updateStats } from '../services/session';\n\nexport default ({ sessionId }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [showingAnswer, setShowingAnswer] = useState(null);\n  const [timestamp, setTimestamp] = useState(null);\n\n  const term = state.getIn(['gameSession', 'term']);\n\n  const fetchNextWord = useCallback(async () => {\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_PENDING });\n    const { term, hasNext } = await getNextTerm(sessionId);\n\n    if (!term) {\n      dispatch({ type: ACTION_NEXT_WORD, status: STATUS_ERROR, error: new Error('Session expired') });\n      return;\n    }\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_OK, term, hasNext });\n    setTimestamp(Date.now() / 1000);\n  }, [dispatch, sessionId]);\n\n  const showReport = useCallback(async () => {\n    setStatus({ busy: true });\n\n    const sessionId = state.getIn(['gameSession', 'id']);\n\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_PENDING, sessionId });\n    const stats = await getSessionStats(sessionId);\n\n    dispatch({\n      type: ACTION_SHOW_REPORT,\n      status: STATUS_OK,\n      report: { session: stats },\n    });\n  }, [dispatch, state]);\n\n  const onSelectAnswer = useCallback(\n    async (answer) => {\n      const termId = state.getIn(['gameSession', 'term', 'id']);\n      const wordTags = state.getIn(['gameSession', 'term', 'tags']);\n      const correct = wordTags.includes(answer);\n\n      const { ok, error } = await updateStats(sessionId, {\n        termId,\n        correct,\n        seconds: Date.now() / 1000 - timestamp,\n      });\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return;\n      }\n\n      if (!correct) {\n        setShowingAnswer({\n          correct,\n          article: wordTags.includes('MAS')\n            ? 'der'\n            : wordTags.includes('FEM')\n            ? 'die'\n            : 'das',\n        });\n      } else {\n        if (state.getIn(['gameSession', 'hasNext'])) {\n          await fetchNextWord();\n        } else {\n          showReport();\n        }\n      }\n    },\n    [fetchNextWord, history, sessionId, showReport, state, timestamp]\n  );\n\n  const onSkipClick = useCallback(async () => {\n    await fetchNextWord();\n  }, [fetchNextWord]);\n\n  const onNextClick = useCallback(async () => {\n    setShowingAnswer(null);\n    if (state.getIn(['gameSession', 'hasNext'])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [fetchNextWord, showReport, state]);\n\n  useEffect(() => {\n    (async () => {\n      await fetchNextWord();\n    })();\n  }, [fetchNextWord]);\n\n  const onKeyPress = useCallback((e) => {\n    if (!term) {\n      return;\n    }\n\n    switch (String.fromCharCode(e.keyCode)) {\n      case 's':\n      case '3':\n        return onSelectAnswer('NEU');\n      case '2':\n      case 'e':\n        return onSelectAnswer('FEM');\n      case '1':\n      case 'r':\n        return onSelectAnswer('MAS');\n      default: break;\n    }\n  }, [onSelectAnswer, term]);\n\n  useEffect(() => {\n    window.addEventListener('keypress', onKeyPress);\n\n    return () => {\n      window.removeEventListener('keypress', onKeyPress);\n    };\n  }, [onKeyPress]);\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2 className=\"text-center text-black-50\">Play</h2>\n        {!term && <p className=\"text-center\">Loading...</p>}\n        {!!term && (\n          <>\n            <div className=\"term mt-5 mb-5\">\n              <div className=\"text-center display-2 text-break\">\n                {term.get('word')}\n              </div>\n              <button className=\"btn btn-sm btn-link\">Meaning >></button>\n            </div>\n\n            <div className=\"actions text-center\">\n              <div className=\"btn-group w-75\">\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-masculine mr-1\"\n                  onClick={() => onSelectAnswer('MAS')}\n                >\n                  Der\n                  <span className=\"btn-hinttext\">1</span>\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-feminine mr-1\"\n                  onClick={() => onSelectAnswer('FEM')}\n                >\n                  Die\n                  <span className=\"btn-hinttext\">2</span>\n                </button>\n                <button\n                  className=\"btn btn-light btn-lg text-white btn-circle bg-neuter\"\n                  onClick={() => onSelectAnswer('NEU')}\n                >\n                  Das\n                  <span className=\"btn-hinttext\">3</span>\n                </button>\n              </div>\n              <div className=\"btn-group w-50 mt-5\">\n                <button\n                  className=\"btn btn-primary btn-sm\"\n                  onClick={onSkipClick}\n                >\n                  Skip\n                </button>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button className=\"btn btn-light\" onClick={showReport}>\n                  I'm done for now\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showingAnswer && (\n        <Modal isOpen={true}>\n          <ModalBody>\n            <div\n              className=\"display-2 text-center\"\n              style={{ wordBreak: 'break-word' }}\n            >\n              <span className=\"font-weight-lighter text-muted\">\n                {term.get('word')}\n              </span>\n              , <br />\n              <span className=\"font-weight-bold\">{showingAnswer.article}</span>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={onNextClick} className=\"mx-auto\">\n              Next\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n      {!!status.busy && <Loader />}\n    </section>\n  );\n};\n","export const STATUS_OK = 'ok';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_PENDING = 'pending';\n\nexport const SESSION_STATUS_PENDING = 'pending';\nexport const SESSION_STATUS_PLAYING = 'playing';\nexport const SESSION_STATUS_DONE = 'done';\n\nexport const ACTION_LOGIN = 'user/login';\nexport const ACTION_LOGOUT = 'user/logout';\nexport const ACTION_START_SESSION = 'user/start-session';\nexport const ACTION_NEXT_WORD = 'user/next-term';\nexport const ACTION_SHOW_REPORT = 'user/show-report';\nexport const ACTION_LIST_COLLECTIONS = 'user/list-collections';\nexport const ACTION_ADD_TO_COLLECTION = 'user/add-to-collections';\nexport const ACTION_CREATE_COLLECTION = 'user/create-collection';\n\nexport const ACTION_LIST_REPO_CONTENTS = 'repo/list-contents';\nexport const ACTION_CHOOSE_COLLECTION = 'repo/choose-collection';\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nconst formatDate = (date) => `${date.getMonth() + 1}.${date.getDate()}`;\n\nexport default ({ weeklyPerformance }) => {\n  const labels = weeklyPerformance.map(({ week }) =>\n    formatDate(new Date(week * 7 * 86400 * 1000))\n  );\n  const confidence = weeklyPerformance.map(({ confidence_factor }) =>\n    (confidence_factor * 100).toFixed(2)\n  );\n  const correct = weeklyPerformance.map(({ correct_factor }) =>\n    (correct_factor * 100).toFixed(2)\n  );\n\n  return (\n    <Line\n      data={{\n        labels,\n        datasets: [\n          {\n            label: 'Correct',\n            data: correct,\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Confidence',\n            data: confidence,\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: '#C0122A',\n            borderColor: '#f3132c',\n          },\n        ],\n      }}\n      width={100}\n      height={40}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { max: 100, min: 0, stepSize: 20 } }],\n        },\n        maintainAspectRatio: true,\n        layout: {\n          padding: 0,\n        },\n      }}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { StateContext } from './context';\nimport LineChartWeeklyPerformance from './LineChartWeeklyPerformance';\n\n/**\n * Post-session report\n * @returns {*}\n */\nexport default () => {\n  const state = useContext(StateContext);\n\n  const session = state.getIn(['report', 'session']);\n  const weeklyPerformance = state.getIn(['report', 'weekly_performance']);\n\n  const sessionRatios = {\n    der:\n      session.getIn(['der', 'corrects']) /\n      (session.getIn(['der', 'corrects']) + session.getIn(['der', 'wrongs'])),\n    die:\n      session.getIn(['die', 'corrects']) /\n      (session.getIn(['die', 'corrects']) + session.getIn(['die', 'wrongs'])),\n    das:\n      session.getIn(['das', 'corrects']) /\n      (session.getIn(['das', 'corrects']) + session.getIn(['das', 'wrongs'])),\n  };\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2>Report</h2>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3>Session Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DER</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-masculine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.der * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DIE</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-feminine\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.die * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">DAS</div>\n              <div className=\"progress mr-0\">\n                <div\n                  className=\"progress-bar bg-neuter\"\n                  role=\"progressbar\"\n                  style={{\n                    width: `${sessionRatios.das * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {!!weeklyPerformance && (\n          <div className=\"card mt-4\">\n            <div className=\"card-header\">\n              <h3 className=\"mb-0\">Weekly Report</h3>\n            </div>\n            <div className=\"card-body\">\n              <LineChartWeeklyPerformance\n                weeklyPerformance={weeklyPerformance.toJS()}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_LOGIN,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PLAYING,\n  STATUS_OK,\n} from '../components/constants';\nimport Stage from '../components/Stage';\nimport Report from '../components/Report';\nimport GoogleLogin from 'react-google-login';\nimport { Button } from 'reactstrap';\nimport { load } from 'recaptcha-v3';\nimport { getSession, renewSession } from '../services/session';\n\nconst CAPTCHA_CLIENT_KEY = '6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [recaptcha, setRecaptcha] = useState(null);\n  const history = useHistory();\n  const pathParams = useParams();\n\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await renewSession();\n\n    history.replace(`/play/${sessionId}`);\n  }, [history]);\n\n  useEffect(() => {\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      if (pathParams.sessionId) {\n        const session = await getSession(pathParams.sessionId);\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n      } else {\n        if (localStorage.getItem('wg:token')) {\n          history.replace('/collections');\n        } else {\n          history.replace('/login');\n        }\n      }\n    })();\n  }, [dispatch, history, pathParams.sessionId]);\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem('wg:profileObj', profileObj);\n      localStorage.setItem('wg:token', token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n        profile: profileObj,\n      });\n      history.replace('/collections');\n    },\n    [dispatch, history]\n  );\n\n  const session = state.getIn(['gameSession']);\n\n  return (\n    <div className=\"container play-page\">\n      {!(session && session.get('id')) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            <div\n              className=\"btn btn-primary btn-lg w-100\"\n              style={{ marginTop: '75%' }}\n            >\n              START\n            </div>\n          </div>\n        </section>\n      )}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_PLAYING\n      ) && <Stage sessionId={session.get('id')} />}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_DONE\n      ) && <Report sessionId={session.get('id')} />}\n      {!!(\n        session &&\n        session.get('id') &&\n        session.get('status') === SESSION_STATUS_DONE\n      ) && (\n        <section className=\"row\">\n          <div className=\"col\">\n            {state.getIn(['profile', 'isLoggedIn']) && (\n              <Link className=\"btn btn-sm btn-link btn-block\" to=\"/collections\">\n                Back to collections\n              </Link>\n            )}\n            {!state.getIn(['profile', 'isLoggedIn']) && (\n              <>\n                <div className=\"row mt-2 justify-content-center\">\n                  <div className=\"col-6\">\n                    <Button\n                      disabled={!recaptcha}\n                      color=\"primary\"\n                      block\n                      onClick={onStartSession}\n                    >\n                      TRY AGAIN!\n                    </Button>\n                  </div>\n                </div>\n\n                <GoogleLogin\n                  clientId={\n                    '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n                  }\n                  onSuccess={onSuccess}\n                  responseType={'code'}\n                  className=\"mt-5\"\n                />\n                <p className=\"text-muted\">...to keep track of your progress</p>\n              </>\n            )}\n          </div>\n        </section>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { load } from 'recaptcha-v3';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { Alert, Button } from 'reactstrap';\nimport { DispatchContext } from '../components/context';\nimport { ACTION_LOGIN, STATUS_OK } from '../components/constants';\nimport { createSession } from '../services/session';\n\nconst CAPTCHA_CLIENT_KEY = '6LfUb-EUAAAAAEBdxIpMqGCi2e7ScZ4I4eqVhzAh';\n\nexport default () => {\n  const [recaptcha, setRecaptcha] = useState(null);\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const params = useParams();\n  const location = useLocation();\n\n  const onSuccess = useCallback(\n    async (response) => {\n      const { accessToken: token, profileObj } = response;\n\n      localStorage.setItem('wg:profile', JSON.stringify(profileObj));\n      localStorage.setItem('wg:token', token);\n      dispatch({\n        type: ACTION_LOGIN,\n        status: STATUS_OK,\n        token,\n      });\n      history.replace('/collections');\n    },\n    [dispatch, history]\n  );\n  const onStartSession = useCallback(async () => {\n    // const recaptchaToken = await recaptcha.execute(\"start_session\");\n    const sessionId = await createSession([]);\n    history.replace(`/play/${sessionId}`);\n  }, [history]);\n\n  useEffect(() => {\n    console.log(params);\n    (async () => {\n      const _recaptcha = await load(CAPTCHA_CLIENT_KEY);\n      setRecaptcha(_recaptcha);\n    })();\n  });\n\n  return (\n    <div className=\"container login-page\">\n      {!!(location.state && location.state.expired) && (\n        <Alert\n          className=\"mt-2 alert-float\"\n          isOpen={true}\n          color=\"warning\"\n          toggle={() => history.replace('/login')}\n        >\n          <h4 className=\"alert-heading\">Your session has expired.</h4>\n          <p className=\"mt-3 text-center text-sm-left\">\n            Without logging in, your session lasts for only for 10 minutes.\n          </p>\n        </Alert>\n      )}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h3\n            style={{\n              marginTop: '50%',\n            }}\n          >\n            Hallo Deutsch\n          </h3>\n          <GoogleLogin\n            clientId={\n              '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n            }\n            onSuccess={onSuccess}\n            responseType={'token'}\n            isSignedIn={true}\n          />\n          <p className=\"text-muted\">\n            ...to coup with the insane irregularity in the German language.\n          </p>\n        </div>\n      </section>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <Button\n            disabled={!recaptcha}\n            color=\"primary\"\n            block\n            onClick={onStartSession}\n          >\n            TRY NOW!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { default as _debounce } from 'lodash.debounce';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst prefix = 'wg'; // wordgame\n\n/**\n *\n * @param url\n * @param method\n * @param body\n * @returns {Promise<Response|{ ok: boolean }>}\n */\nconst request = async (url, method, body = null) => {\n  const token = localStorage.getItem(`${prefix}:token`);\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    // headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Normalize reponse to { ok, error }\n  return fetch(\n    url,\n    method === 'GET' || method === 'DELETE'\n      ? { headers, method }\n      : {\n          headers,\n          method,\n          body,\n        }\n  ).catch((error) => {\n    return {\n      ok: false,\n      error,\n    };\n  });\n};\n\nconst handleResponse = async (res) => {\n  if (!res) {\n    return { ok: false };\n  }\n\n  try {\n    const contentType = res.headers.get('content-type');\n    if (contentType && contentType.match(/json/)) {\n      if (res.status >= 400) {\n        return {\n          ok: false,\n          error: await res.json(),\n        };\n      }\n\n      return res.json();\n    } else {\n      return {\n        ok: false,\n        error: await res.text(),\n      };\n    }\n  } catch (error) {\n    return { ok: false, error };\n  }\n};\n\nconst api = {\n  request,\n  async get(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'GET');\n    return handleResponse(res);\n  },\n  async post(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'POST',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async put(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PUT',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async patch(uri, payload) {\n    const res = await request(\n      `${BASE_URL}${uri}`,\n      'PATCH',\n      JSON.stringify(payload)\n    );\n    return handleResponse(res);\n  },\n  async delete(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'DELETE');\n    return handleResponse(res);\n  },\n};\n\nexport const debounce = (s) => {\n  const proxy = {};\n  Object.keys(api).forEach((key) => {\n    Object.defineProperty(proxy, key, {\n      value: _debounce(api[key], s * 1000),\n    });\n  });\n\n  return proxy;\n};\n\nexport default api;\n","import api from '../components/network';\n\nasync function content(url, parse) {\n  const res = await api.request(url, 'GET');\n  if (!res.ok) {\n    throw new Error('Bad Request');\n  }\n\n  const data = await res.json();\n  if (data.encoding !== 'base64') {\n    throw new Error('Bad Request');\n  }\n\n  const escaped = decodeURIComponent(escape(atob(data.content)));\n  const parsed = parse(escaped);\n  return parsed;\n}\n\nconst DEFAULT_REPO_URL = 'https://api.github.com/repos/khanhhua/wordgame-data';\n\nexport const getRepoContents = async (repoUrl = DEFAULT_REPO_URL) => {\n  try {\n    const res = await api.request(`${repoUrl}/contents`, 'GET');\n    const contents = await res.json();\n    return Promise.all(\n      contents.map(async ({ _links: { self } }) => {\n        const url = self.replace('?ref=master', '');\n        const packageContent = await content(\n          `${url}/package.json`,\n          JSON.parse\n        );\n        return {\n          ...packageContent,\n          url,\n        };\n      })\n    );\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getCollections = async (repoUrl) => {\n  const url = `${repoUrl}/package.json`;\n  try {\n    const json = await content(url, JSON.parse);\n    return json.collections.map((item) => ({\n      ...item,\n      repoUrl,\n    }));\n  } catch (e) {\n    return [];\n  }\n};\n\nexport const getTermsByCollection = async (repoUrl, file, flag = null) => {\n  const url = `${repoUrl}/${file}`;\n  try {\n    const words = await content(url, (decoded) => {\n      return decoded\n        .split('\\n')\n        .filter(Boolean)\n        .map((line) => {\n          const parts = line.split(';');\n          return {\n            id: parts[0],\n            word: parts[0],\n            meaning: parts[1],\n            tags: parts[2],\n          };\n        })\n        .filter((term) => {\n          switch (flag) {\n            default:\n              return true;\n            case 'noun': {\n              const { tags } = term;\n              return (\n                tags.includes('MAS') ||\n                tags.includes('FEM') ||\n                tags.includes('NEU')\n              );\n            }\n          }\n        });\n    });\n    console.log({ words });\n    return words;\n  } catch (e) {\n    return [];\n  }\n};\n","import React from 'react';\n\nexport default ({ collections, onReviewClick, onEditClick }) => {\n  const editable = typeof onEditClick === 'function';\n\n  return (\n    <div className=\"list-group list-group-flush\">\n      {collections.map((item) => (\n        <div key={item.get('id')} className=\"list-group-item px-1\">\n          {item.get('name')}\n          <div className=\"actions float-right\">\n            <div className=\"btn-group btn-group-sm\">\n              {editable && (\n                <button\n                  className=\"btn btn-sm btn-light\"\n                  onClick={() => onEditClick(item)}\n                >\n                  Edit\n                </button>\n              )}\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => onReviewClick(item)}\n              >\n                Review\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport network from '../components/network';\nimport { getCollections, getTermsByCollection } from '../services/github';\nimport { createSession } from '../services/session';\nimport { DispatchContext, StateContext } from '../components/context';\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_START_SESSION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\nimport CollectionList from '../components/CollectionList';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [newCollection, setNewCollection] = useState({\n    visible: false,\n    name: '',\n  });\n  const newCollectionNameRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      const repoUrl = state.getIn(['repo', 'current', 'url']);\n      const { ok, collections, myCollections, error } = await getCollections(\n        repoUrl\n      ).then((collections) => ({\n        collections,\n        myCollections: [],\n        ok: true,\n        error: null,\n      }));\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        dispatch({\n          type: ACTION_LIST_COLLECTIONS,\n          status: STATUS_ERROR,\n          error,\n        });\n        return;\n      }\n\n      dispatch({\n        type: ACTION_LIST_COLLECTIONS,\n        status: STATUS_OK,\n        collections,\n        myCollections,\n      });\n    })();\n  }, [dispatch, history, state]);\n\n  const onReviewClick = useCallback(\n    async (collection) => {\n      dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n      const terms = await getTermsByCollection(\n        collection.get('repoUrl'),\n        collection.get('file'),\n        'noun'\n      );\n      const sessionId = await createSession(terms);\n\n      history.push(`/play/${sessionId}`);\n      dispatch({ type: ACTION_START_SESSION, status: STATUS_OK });\n    },\n    [dispatch, history]\n  );\n\n  const onNewCollectionCreate = useCallback(async () => {\n    const type = ACTION_CREATE_COLLECTION;\n    dispatch({ type, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post(\n      '/api/me/collections',\n      {\n        name: newCollectionNameRef.current.value,\n      }\n    );\n    if (!ok) {\n      if (error.status_code === 401) {\n        localStorage.clear();\n        history.replace('/login', { expired: true });\n        return;\n      }\n\n      return dispatch({ type, status: STATUS_ERROR, error });\n    }\n\n    dispatch({ type, status: STATUS_OK, collection });\n    setNewCollection({ visible: false });\n  }, [dispatch, history]);\n\n  const onEditClick = useCallback(\n    async (collection) => {\n      history.push(`/collections/${collection.get('id')}`);\n    },\n    [history]\n  );\n\n  const collections = state.get('collections');\n  const myCollections = state.get('myCollections');\n\n  return (\n    <div className=\"container my-collection-list-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          {!!(myCollections && myCollections.size) && (\n            <>\n              <div className=\"w-100\">\n                <button\n                  onClick={() => setNewCollection({ visible: true })}\n                  className=\"btn btn-sm btn-light mt-2 float-right\"\n                >\n                  Add\n                </button>\n                <h2>My Learning List</h2>\n              </div>\n              <CollectionList\n                onEditClick={onEditClick}\n                collections={myCollections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n          {!(collections && collections.size) && (\n            <p className=\"text-center\">Loading...</p>\n          )}\n          {!!(collections && collections.size) && (\n            <>\n              <h2 className=\"mt-5\">Collections</h2>\n              <CollectionList\n                collections={collections}\n                onReviewClick={onReviewClick}\n              />\n            </>\n          )}\n        </div>\n      </section>\n      {!!newCollection.visible && (\n        <Modal isOpen={newCollection.visible}>\n          <ModalHeader toggle={() => setNewCollection({ visible: false })}>\n            New Collection\n          </ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label>Name</Label>\n                <Input innerRef={newCollectionNameRef} />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onNewCollectionCreate} color=\"primary\">\n              Create\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderWidth: 1,\n  hoverBackgroundColor: 'rgba(63,69,192,0.4)',\n  hoverBorderColor: 'rgb(65,121,192)',\n};\n\nexport default ({ histogram }) => {\n  return (\n    <Bar\n      width={100}\n      height={50}\n      data={{\n        labels: histogram.map(({ seconds }) => seconds),\n        datasets: [\n          {\n            label: 'Correct Response Time (s)',\n            data: histogram.map(({ correct_count }) => correct_count),\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Incorrect Response Time (s)',\n            data: histogram.map(({ wrong_count }) => wrong_count),\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: 'rgba(192,83,102,0.4)',\n            borderColor: 'rgb(192,73,90)',\n          },\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { min: 0 } }],\n          xAxes: [\n            {\n              distribution: 'series',\n            },\n          ],\n        },\n      }}\n    />\n  );\n};\n","import { getDb, TBL_SESSIONS } from './indexeddb';\n\nexport const getLocalReports = async ({ weekly, worst, histogram }) => {\n  let stats = [];\n  const db = await getDb();\n  let cursor = await db.transaction(TBL_SESSIONS).store.openCursor();\n  while (cursor) {\n    if (cursor.value.stats) {\n      stats = stats.concat(cursor.value.stats);\n    }\n    cursor = await cursor.continue();\n  }\n\n  const worstPerformers = Object.entries(\n    stats.reduce((acc, { termId, correct, seconds }) => {\n      const key = termId;\n      if (!(key in acc)) {\n        acc[key] = {\n          correct_count: 0,\n          seconds_correct: 0,\n          total_count: 0,\n          total_seconds: 0,\n        };\n      }\n      const entry = acc[key];\n\n      if (correct) {\n        entry.correct_count += 1;\n        entry.seconds_correct += seconds;\n      }\n      entry.total_count += 1;\n      entry.total_seconds += seconds;\n\n      return acc;\n    }, {})\n  )\n    .map(\n      ([\n        key,\n        { correct_count, total_count, seconds_correct, total_seconds },\n      ]) => ({\n        word: key,\n        correct_factor:\n          Math.round((100 * correct_count) / (total_count * 1.0)) / 100,\n        confidence_factor:\n          Math.round((100 * seconds_correct) / (total_seconds * 1.0)) / 100,\n      })\n    )\n    .sort(({ correct_factor: a }, { correct_factor: b }) => a - b)\n    .slice(0, 20);\n\n  const histogramData = Object.entries(\n    stats.reduce((acc, { correct, seconds }) => {\n      const key = Math.floor(seconds);\n      if (!(key in acc)) {\n        acc[key] = { correct_count: 0, wrong_count: 0 };\n      }\n      let entry = acc[key];\n      if (correct) {\n        entry.correct_count += 1;\n      } else {\n        entry.wrong_count += 1;\n      }\n\n      return acc;\n    }, {})\n  )\n    .map(([key, entry]) => ({ seconds: key, ...entry }))\n    .sort(({ seconds: a }, { seconds: b }) => a - b);\n\n  return {\n    worstPerformers,\n    weeklyPerformance: [],\n    histogram: histogramData,\n  };\n};\n","import { default as deepGet } from 'lodash/get';\nimport { getDb, TBL_SETTINGS } from './indexeddb';\n\nexport const set = async (property, value) => {\n  const db = await getDb();\n  await db.put(TBL_SETTINGS, {\n    key: property,\n    value,\n  });\n};\n\nexport const get = async (property, path = null) => {\n  const db = await getDb();\n  const obj = await db.get(TBL_SETTINGS, property);\n\n  if (typeof obj === 'object' && path) {\n    return deepGet(obj, `value.${path}`);\n  }\n\n  return obj.value;\n};\n","import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport { Badge, Card, CardBody, CardHeader, Button } from 'reactstrap';\nimport LineChartWeeklyPerformance from '../components/LineChartWeeklyPerformance';\nimport BarChartHistogram from '../components/BarChartHistogram';\nimport Loader from '../components/Loader';\nimport { getLocalReports } from '../services/reporting';\nimport { get } from '../services/settings';\nimport {getCollections, getTermsByCollection} from '../services/github';\nimport {ACTION_START_SESSION, STATUS_OK, STATUS_PENDING} from \"../components/constants\";\nimport {createSession} from \"../services/session\";\nimport {DispatchContext} from \"../components/context\";\nimport {useHistory} from \"react-router-dom\";\n\nconst bgClasses = {\n  MAS: 'bg-masculine',\n  FEM: 'bg-feminine',\n  NEU: 'bg-neuter',\n};\n\nconst classFromTags = (tags) => {\n  const match = /MAS|FEM|NEU/.exec(tags);\n  if (match) {\n    return bgClasses[match[0]];\n  }\n  return '';\n};\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [report, setReport] = useState({\n    worstPerformers: [],\n    weeklyPerformance: [],\n    histogram: [],\n  });\n  useEffect(() => {\n    (async () => {\n      setStatus({ busy: true });\n      const {\n        worstPerformers,\n        weeklyPerformance,\n        histogram,\n      } = await getLocalReports({});\n\n      setStatus({ busy: false });\n      setReport({\n        worstPerformers,\n        weeklyPerformance,\n        histogram,\n      });\n    })();\n  }, []);\n\n  const onReviewClick = useCallback(async () => {\n    const currentCollection = await get('repo.current');\n    const collections = await getCollections(currentCollection.url);\n    let allTerms = [];\n\n    for (const collection of collections) {\n      const _terms = await getTermsByCollection(collection.repoUrl, collection.file, 'noun');\n      allTerms = allTerms.concat(_terms);\n    }\n\n    const { worstPerformers } = await getLocalReports({});\n    const filteringKeys = worstPerformers.filter(({correct_factor}) => correct_factor < 0.7).map(({ word }) => word);\n    const terms = allTerms.filter(({ word }) => filteringKeys.includes(word))\n\n    console.log({terms});\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n    const sessionId = await createSession(terms);\n    history.push(`/play/${sessionId}`);\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_OK });\n  }, [dispatch, history]);\n\n  return (\n    <div className=\"container report-page\">\n      {!!status.busy && <Loader />}\n      <section className=\"row\">\n        <div className=\"col\">\n          <h2>Report</h2>\n\n          <Card>\n            <CardHeader>\n              <Button\n                  color=\"primary\"\n                  className=\"float-right\"\n                  onClick={onReviewClick}\n              >Review</Button>\n              <h5 className=\"mb-0\">Needs improvements</h5>\n            </CardHeader>\n            <CardBody>\n              {report.worstPerformers.map((item) => (\n                <Badge\n                  pill\n                  className={`p-2 mr-2 mb-2 ${classFromTags(item.tags)}`}\n                  style={{ opacity: 1.05 - item.confidence_factor }}\n                >\n                  {item.word}\n                  <span className=\"pl-2\">{item.correct_factor * 100}%</span>\n                </Badge>\n              ))}\n            </CardBody>\n          </Card>\n\n          <Card className=\"mt-2\">\n            <CardHeader>\n              <h5 className=\"mb-0\">Performance</h5>\n            </CardHeader>\n            <CardBody>\n              {!!(report && report.histogram && report.histogram.length) && (\n                <BarChartHistogram histogram={report.histogram} />\n              )}\n              {!!(\n                report &&\n                report.weeklyPerformance &&\n                report.weeklyPerformance.length\n              ) && (\n                <LineChartWeeklyPerformance\n                  weeklyPerformance={report.weeklyPerformance}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { GoogleLogout } from 'react-google-login';\nimport React, { useCallback, useContext } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { DispatchContext, StateContext } from './context';\nimport { ACTION_LOGOUT } from './constants';\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const onLogout = useCallback(() => {\n    dispatch({ type: ACTION_LOGOUT });\n    window.localStorage.clear();\n  }, [dispatch]);\n\n  return (\n    <Navbar light className=\"bg-light\">\n      <NavbarBrand className=\"font-weight-lighter\">Hallo Deutsch</NavbarBrand>\n      {!!state.getIn(['profile', 'isLoggedIn']) && [\n        <Nav className=\"mx-auto\">\n          <NavLink to=\"/collections\" exact className=\"nav-item px-2\">\n            Collections\n          </NavLink>\n          <NavLink to=\"/report\" exact className=\"nav-item px-2\">\n            Report\n          </NavLink>\n        </Nav>,\n        <Nav>\n          <NavItem>\n            <NavLink to=\"/settings/repo\" exact className=\"d-block mt-2 px-2\">\n              Choose Repo Content\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <GoogleLogout\n              clientId={\n                '976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'\n              }\n              buttonText=\"Logout\"\n              onLogoutSuccess={onLogout}\n            />\n          </NavItem>\n        </Nav>,\n      ]}\n    </Navbar>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport AsyncSelect from 'react-select/async';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { default as _debounce } from 'lodash.debounce';\nimport network, { debounce } from './network';\nimport {\n  ACTION_ADD_TO_COLLECTION,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\nimport { DispatchContext } from './context';\n\nconst debouncedNetwork = debounce(1);\n\nconst debouncedSearch = _debounce(\n  (inputValue, callback) => {\n    network.get(`/api/search?q=${inputValue}`).then(({ ok, terms, error }) => {\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          window.history.replaceState({ expired: true }, null, '/login');\n          return;\n        }\n\n        return [];\n      }\n      callback(terms.map(({ id, word }) => ({ value: id, label: word })));\n    });\n  },\n  1000,\n  {\n    leading: false,\n    trailing: true,\n  }\n);\n\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n  const { collectionId = null } = useParams();\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [collection, setCollection] = useState({});\n  const [query, setQuery] = useState('');\n  const [shownCount, setShownCount] = useState(10);\n\n  const onCloseClick = useCallback(() => {\n    history.replace('/collections');\n  }, [history]);\n  const onEditCollectionNameChanged = useCallback(\n    async ({ target: { value } }) => {\n      setCollection({\n        ...collection,\n        name: value,\n      });\n\n      const p = debouncedNetwork.patch(`/api/me/collections/${collectionId}`, {\n        name: value,\n      });\n      if (p) {\n        const { ok, error } = await p;\n        if (!ok) {\n          if (error.status_code === 401) {\n            localStorage.clear();\n            history.replace('/login', { expired: true });\n            return;\n          }\n        }\n      }\n    },\n    [collection, collectionId, history]\n  );\n\n  const onNewTermSelected = useCallback(\n    async (choice, { action }) => {\n      if (action !== 'select-option') {\n        return;\n      }\n      const type = ACTION_ADD_TO_COLLECTION;\n      dispatch({ type, status: STATUS_PENDING });\n\n      const { ok, error } = await network.post(\n        `/api/me/collections/${collectionId}/terms`,\n        {\n          term_id: choice.value,\n        }\n      );\n\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n        return dispatch({ type, status: STATUS_ERROR, error });\n      }\n\n      setCollection({\n        ...collection,\n        terms: [\n          { id: choice.value, word: choice.label },\n          ...(collection.terms || []),\n        ],\n      });\n    },\n    [collection, collectionId, dispatch, history]\n  );\n\n  const onTermRemoved = useCallback(\n    async (termId) => {\n      const { ok, error } = await network.delete(\n        `/api/me/collections/${collectionId}/terms/${termId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setCollection(\n        {\n          ...collection,\n          terms: collection.terms.filter(({ id: key }) => key !== termId),\n        },\n        [collection]\n      );\n    },\n    [collection, collectionId, history]\n  );\n\n  useEffect(() => {\n    setStatus({ busy: true });\n    (async () => {\n      const { ok, error, collection: _c } = await network.get(\n        `/api/me/collections/${collectionId}`\n      );\n      if (!ok) {\n        if (error.status_code === 401) {\n          localStorage.clear();\n          history.replace('/login', { expired: true });\n          return;\n        }\n\n        return;\n      }\n\n      setStatus({ busy: false });\n      setCollection(_c);\n    })();\n  }, [collectionId, history]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader toggle={onCloseClick}>Edit Collection</ModalHeader>\n      <ModalBody>\n        {status.busy && <div className=\"loader loader-dark\">Loading...</div>}\n        {!status.busy && (\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                value={collection.name}\n                onChange={onEditCollectionNameChanged}\n              />\n            </FormGroup>\n            <FormGroup>\n              <AsyncSelect\n                placeholder=\"Enter your new word...\"\n                value={query}\n                onInputChange={(value) => setQuery(value)}\n                onChange={onNewTermSelected}\n                loadOptions={debouncedSearch}\n              />\n              <ListGroup flush>\n                {(collection.terms || []).slice(0, shownCount).map((item) => (\n                  <ListGroupItem key={item.id}>\n                    {item.word}\n                    <Button\n                      size=\"sm\"\n                      color=\"link\"\n                      className=\"float-right\"\n                      onClick={() => onTermRemoved(item.id)}\n                    >\n                      &times;\n                    </Button>\n                  </ListGroupItem>\n                ))}\n                {collection.terms && shownCount < collection.terms.length && (\n                  <ListGroupItem>\n                    <Button\n                      color=\"link\"\n                      block\n                      onClick={() => setShownCount(shownCount * 2)}\n                    >\n                      Show more >>\n                    </Button>\n                  </ListGroupItem>\n                )}\n              </ListGroup>\n            </FormGroup>\n          </Form>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Button onClick={onCloseClick} color=\"light\">\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { DispatchContext, StateContext } from '../components/context';\nimport { getRepoContents } from '../services/github';\nimport * as settings from '../services/settings';\nimport {\n  ACTION_LIST_REPO_CONTENTS,\n  ACTION_CHOOSE_COLLECTION,\n  STATUS_OK,\n  STATUS_PENDING,\n} from '../components/constants';\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      dispatch({\n        type: ACTION_LIST_REPO_CONTENTS,\n        status: STATUS_PENDING,\n      });\n\n      const contents = await getRepoContents();\n      dispatch({\n        type: ACTION_LIST_REPO_CONTENTS,\n        status: STATUS_OK,\n        contents,\n      });\n    })();\n  }, [dispatch]);\n\n  const onChooseCollection = useCallback(\n    (collection) => {\n      settings\n          .set('repo.current', {\n            name: collection.get('name'),\n            url: collection.get('url'),\n          })\n          .then(() => {\n            dispatch({\n              type: ACTION_CHOOSE_COLLECTION,\n              collection,\n            });\n            history.replace('/collections');\n          })\n    },\n    [dispatch, history]\n  );\n\n  const contents = state.getIn(['repo', 'contents']);\n\n  return (\n    <div className=\"container repo-contents-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          <div className=\"list-group list-group-flush\">\n            {contents.map((item) => (\n              <div className=\"list-group-item\">\n                {item.get('name')}\n                <button\n                  className=\"btn btn-sm btn-primary float-right\"\n                  onClick={() => onChooseCollection(item)}\n                >\n                  Choose\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, {useContext, useEffect} from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './App.scss';\n\nimport PlayPage from './pages/PlayPage';\nimport LoginPage from './pages/LoginPage';\nimport CollectionListPage from './pages/CollectionListPage';\nimport ReportPage from './pages/ReportPage';\nimport AppNav from './components/AppNav';\nimport { DispatchContext, StateContext } from './components/context';\nimport EditCollectionModal from './components/EditCollectionModal';\nimport RepoContentsPage from './pages/RepoContentsPage';\nimport {get} from \"./services/settings\";\nimport {ACTION_CHOOSE_COLLECTION} from \"./components/constants\";\n\nfunction App() {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n      (async () => {\n          const collection = await get('repo.current');\n          dispatch({\n              type: ACTION_CHOOSE_COLLECTION,\n              collection,\n          });\n      })();\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/play/:sessionId\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/play\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/report\">\n            <AppNav />\n            <ReportPage />\n          </Route>\n          <Route\n            path=\"/collections\"\n            render={() => {\n              if (!state.getIn(['profile', 'isLoggedIn'])) {\n                return <Redirect to=\"/login\" />;\n              }\n\n              return (\n                <>\n                  <AppNav />\n                  <CollectionListPage />\n                  <Route path=\"/collections/:collectionId\">\n                    <EditCollectionModal />\n                  </Route>\n                </>\n              );\n            }}\n          />\n          <Route exact path=\"/settings/repo\">\n            <AppNav />\n            <RepoContentsPage />\n          </Route>\n          <Route>\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from 'immutable';\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_CHOOSE_COLLECTION,\n  ACTION_LIST_COLLECTIONS,\n  ACTION_LIST_REPO_CONTENTS,\n  ACTION_LOGIN,\n  ACTION_LOGOUT,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_START_SESSION,\n  SESSION_STATUS_DONE,\n  SESSION_STATUS_PENDING,\n  SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_PENDING,\n} from './constants';\n\nexport const initialState = fromJS({\n  profile: {\n    isLoggedIn: false,\n  },\n  gameSession: {\n    id: null,\n    status: SESSION_STATUS_PENDING,\n  },\n  repo: {\n    contents: [],\n    current: {\n      url: 'https://api.github.com/repos/khanhhua/wordgame-data/contents/menschen',\n      name: 'Menschen',\n    },\n  },\n  collections: [],\n  report: {},\n});\n\nexport default (state, { type, status, ...action }) => {\n  if (status === STATUS_ERROR) {\n    if (action.error && action.error === 'Invalid token') {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    return state;\n  }\n  if (status === STATUS_PENDING) {\n    return state;\n  }\n\n  console.log({ type, action, state: state.toJS() });\n  switch (type) {\n    case ACTION_LOGIN: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: true,\n          defaultCollection: action.defaultCollection,\n          ...action.profile,\n        })\n      );\n    }\n    case ACTION_LOGOUT: {\n      return state.set(\n        'profile',\n        fromJS({\n          isLoggedIn: false,\n        })\n      );\n    }\n    case ACTION_LIST_REPO_CONTENTS: {\n      return state.setIn(['repo', 'contents'], fromJS(action.contents));\n    }\n    case ACTION_LIST_COLLECTIONS: {\n      return state\n        .set('collections', fromJS(action.collections))\n        .set('myCollections', fromJS(action.myCollections));\n    }\n    case ACTION_CHOOSE_COLLECTION: {\n      return state\n          .setIn(['repo', 'current'], fromJS(action.collection));\n    }\n    case ACTION_CREATE_COLLECTION: {\n      return state.updateIn(['myCollections'], (collections) =>\n        collections.unshift(fromJS(action.collection))\n      );\n    }\n    case ACTION_START_SESSION: {\n      return state.setIn(\n        ['gameSession'],\n        fromJS({\n          ...action.session,\n          hasNext: true,\n          status: SESSION_STATUS_PLAYING,\n        })\n      );\n    }\n    case ACTION_NEXT_WORD: {\n      return state\n        .setIn(['gameSession', 'term'], fromJS(action.term))\n        .setIn(['gameSession', 'cursor'], action.cursor)\n        .setIn(['gameSession', 'hasNext'], action.hasNext);\n    }\n    case ACTION_SHOW_REPORT: {\n      return state\n        .setIn(['gameSession', 'status'], SESSION_STATUS_DONE)\n        .set('report', fromJS(action.report));\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { DispatchContext, StateContext } from './components/context';\nimport reducer, { initialState } from './components/reducer';\nimport { init as initDb } from './services/indexeddb';\n\nconst Index = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        <App />\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\ninitDb().then(() => {\n  ReactDOM.render(<Index />, document.getElementById('root'));\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}