{"version":3,"sources":["components/context.js","components/network.js","components/Loader.js","components/Stage.js","components/constants.js","components/LineChartWeeklyPerformance.js","components/Report.js","pages/PlayPage.js","pages/LoginPage.js","components/CollectionList.js","pages/CollectionListPage.js","components/BarChartHistogram.js","pages/ReportPage.js","components/AppNav.js","App.js","serviceWorker.js","components/reducer.js","index.js"],"names":["DispatchContext","React","createContext","StateContext","BASE_URL","process","request","url","method","a","body","token","localStorage","getItem","headers","fetch","catch","error","ok","handleResponse","res","contentType","get","match","json","text","uri","payload","JSON","stringify","Modal","isOpen","contentClassName","ModalBody","className","AddToCollectionModal","term","addToCollection","dispatch","useContext","state","useState","setIsOpen","useEffect","type","network","collections","status","ModalHeader","FormGroup","row","Label","Dropdown","toggle","DropdownToggle","caret","DropdownMenu","map","item","DropdownItem","key","onClick","sessionId","busy","setStatus","showingAnswer","setShowingAnswer","showingAddToCollectionModal","setShowingAddToCollectionModal","timestamp","setTimestamp","fetchNextWord","getIn","useCallback","cursor","newCursor","hasNext","has_next","Date","now","onSelectAnswer","answer","wordId","wordTags","correct","includes","session_id","term_id","seconds","article","showReport","Promise","all","then","sessionReport","weeklyReport","report","session","onSkipClick","skipped","collectionId","collection","onNextClick","style","wordBreak","ModalFooter","Button","color","Loader","defaultLineDataSeriesOptions","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","weeklyPerformance","labels","date","week","getMonth","getDate","confidence","confidence_factor","toFixed","correct_factor","data","datasets","label","width","height","options","scales","yAxes","ticks","max","min","stepSize","maintainAspectRatio","layout","padding","sessionRatios","role","LineChartWeeklyPerformance","toJS","props","history","useHistory","pathParams","useParams","createOK","createdSession","createError","onLoginSuccess","response","tokenId","profile","setItem","replace","marginTop","Stage","Report","to","clientId","redirectUri","onSuccess","access_code","code","defaultCollection","default_collection","responseType","onReviewClick","visible","name","newCollection","setNewCollection","newCollectionNameRef","useRef","_ok1","_ok2","myCollections","collection_id","category_id","push","id","onNewCollectionCreate","current","value","size","CollectionList","Form","Input","innerRef","borderWidth","hoverBackgroundColor","hoverBorderColor","histogram","correct_count","wrong_count","xAxes","distribution","worstPerformers","setReport","worst_performers","weekly_performance","Card","CardHeader","CardBody","Badge","pill","opacity","word","length","BarChartHistogram","onLogoutClick","window","clear","location","href","Navbar","light","NavbarBrand","Nav","exact","NavItem","App","path","LoginPage","AppNav","PlayPage","ReportPage","CollectionListPage","Boolean","hostname","initialState","fromJS","isLoggedIn","gameSession","action","set","console","log","updateIn","unshift","setIn","ReactDOM","render","useReducer","reducer","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d94a7d5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nconst prefix = 'wg'; // wordgame\n\n/**\n *\n * @param url\n * @param method\n * @param body\n * @returns {Promise<Response|{ ok: boolean }>}\n */\nconst request = async (url, method, body=null) => {\n  const token = localStorage.getItem(`${prefix}:token`);\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  // Normalize reponse to { ok, error }\n  return fetch(url, method === 'get' ? { headers, method } : {\n    headers,\n    method,\n    body,\n  }).catch((error) => {\n    return {\n      ok: false,\n      error,\n    };\n  });\n};\n\nconst handleResponse = async res => {\n  if (!res) {\n    return { ok: false };\n  }\n\n  try {\n    const contentType = res.headers.get('content-type');\n    if (contentType && contentType.match(/json/)) {\n      return res.json();\n    } else {\n      return {\n        ok: false,\n        error: await res.text(),\n      };\n    }\n  } catch (error) {\n    return { ok: false, error };\n  }\n};\n\nexport default {\n  async get(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'GET');\n    return handleResponse(res);\n  },\n  async post(uri, payload) {\n    const res = await request(`${BASE_URL}${uri}`, 'POST', JSON.stringify(payload));\n    return handleResponse(res);\n  },\n  async put(uri, payload) {\n    const res = await request(`${BASE_URL}${uri}`, 'PUT', JSON.stringify(payload));\n    return handleResponse(res);\n  },\n  async patch(uri, payload) {\n    const res = await request(`${BASE_URL}${uri}`, 'PATCH', JSON.stringify(payload));\n    return handleResponse(res);\n  },\n  async delete(uri) {\n    const res = await request(`${BASE_URL}${uri}`, 'DELETE');\n    return handleResponse(res);\n  }\n}\n","import React from 'react';\nimport { Modal, ModalBody } from \"reactstrap\";\n\nexport default () => (\n  <Modal isOpen={true} contentClassName=\"bg-transparent border-0\">\n    <ModalBody>\n      <div className=\"loader\">Loading...</div>\n    </ModalBody>\n  </Modal>\n);\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormGroup,\n  Label,\n  Button,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport network from \"../components/network\";\nimport {\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_ADD_TO_COLLECTION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n  ACTION_LIST_COLLECTIONS,\n} from '../components/constants';\nimport Loader from \"./Loader\";\n\nconst AddToCollectionModal = ({ term, addToCollection }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const type = ACTION_LIST_COLLECTIONS;\n      const { ok, collections, error } = await network.get('/api/me/collections');\n\n      if (!ok) {\n        dispatch({ type, status: STATUS_ERROR, error });\n        return;\n      }\n      dispatch({ type, status: STATUS_OK, collections });\n    })();\n  }, [dispatch]);\n\n  return (\n    <Modal isOpen={true}>\n      <ModalHeader>Add \"{term.get('word')}\" to collection...</ModalHeader>\n      <ModalBody>\n        <FormGroup row>\n          <Label className=\"col-form-label col-2\">Collection</Label>\n          <div className=\"col-10\">\n            <Dropdown\n              isOpen={isOpen}\n              toggle={() => setIsOpen(!isOpen)}\n            >\n              <DropdownToggle caret className=\"bg-transparent text-black-50 w-100\">Choose a collection...</DropdownToggle>\n              <DropdownMenu className=\"w-100\">\n              {state.get('collections').map(item => (\n                <DropdownItem\n                  key={item.get('id')}\n                  onClick={() => addToCollection(item.get('id'))}\n                >\n                  {item.get('name')}\n                </DropdownItem>\n              ))}\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n        </FormGroup>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default ({ sessionId }) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [showingAnswer, setShowingAnswer] = useState(null);\n  const [showingAddToCollectionModal, setShowingAddToCollectionModal] = useState(false);\n\n  const [timestamp, setTimestamp] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      await fetchNextWord();\n    })();\n  }, [sessionId]);\n  useEffect(() => {\n    setShowingAddToCollectionModal(false);\n  }, [state.getIn(['gameSession','term'])]);\n\n  const fetchNextWord = useCallback(async () => {\n    const cursor = state.getIn(['gameSession','cursor']);\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_PENDING });\n    const { ok, term, cursor: newCursor, has_next: hasNext, error } = await network.get(`/api/words?cursor=${cursor || ''}`);\n    if (!ok) {\n      dispatch({ type: ACTION_NEXT_WORD, status: STATUS_ERROR, error });\n      return;\n    }\n    dispatch({ type: ACTION_NEXT_WORD, status: STATUS_OK, term, hasNext, cursor: newCursor });\n    setTimestamp(Date.now() / 1000);\n  }, [dispatch, state]);\n\n  const onSelectAnswer = useCallback(async (answer) => {\n    const wordId = state.getIn(['gameSession','term', 'id']);\n    const wordTags = state.getIn(['gameSession','term', 'tags']);\n    const correct = wordTags.includes(answer);\n    const { ok } = await network.post(`/api/stats`, {\n      session_id: sessionId,\n      term_id: wordId,\n      correct,\n      seconds: (Date.now() / 1000) - timestamp,\n    });\n    if (!ok) {\n      return;\n    }\n\n    setShowingAnswer({\n      correct,\n      article: wordTags.includes('MAS') ? 'der' : wordTags.includes('FEM') ? 'die' : 'das',\n    });\n  }, [dispatch, timestamp, state.getIn(['gameSession','term'])]);\n\n  const showReport = useCallback(async () => {\n    setStatus({ busy: true });\n\n    const sessionId = state.getIn(['gameSession', 'id']);\n    await network.delete(`/api/session`);\n\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_PENDING, sessionId });\n    const { ok, error, sessionReport, weeklyReport } = await Promise.all([\n      network.get(`/api/stats/${sessionId}`),\n      network.get('/api/stats?reports=weekly'),\n    ]).then(([ sessionReport, weeklyReport ]) => ({\n      ok: sessionReport.ok || weeklyReport.ok,\n      sessionReport: sessionReport.report,\n      weeklyReport: weeklyReport.report,\n    })).catch(error => ({\n      ok: false,\n      error,\n    }));\n\n    if (!ok) {\n      dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_ERROR, error });\n      return;\n    }\n\n    setStatus({ busy: false });\n    dispatch({ type: ACTION_SHOW_REPORT, status: STATUS_OK, report: {\n      session: sessionReport,\n      ...weeklyReport,\n      } });\n  }, [dispatch, state.getIn(['gameSession','term'])]);\n\n  const onSkipClick = useCallback(async () => {\n    const wordId = state.getIn(['gameSession','term', 'id']);\n    const { ok } = await network.post(`/api/stats`, {\n      term_id: wordId,\n      skipped: true,\n    });\n    if (!ok) {\n      return;\n    }\n\n    await fetchNextWord();\n  }, [dispatch, state.getIn(['gameSession','term'])]);\n\n  const addToCollection = useCallback(async (collectionId) => {\n    const term = state.getIn(['gameSession','term']);\n    dispatch({ type: ACTION_ADD_TO_COLLECTION, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post(`/api/me/collections/${collectionId}/terms`, {\n      term_id: term.get('id'),\n    });\n    if (!ok) {\n      dispatch({ type: ACTION_ADD_TO_COLLECTION, status: STATUS_ERROR, error });\n      return;\n    }\n\n    dispatch({ type: ACTION_ADD_TO_COLLECTION, status: STATUS_OK, collection });\n    if (state.getIn(['gameSession','hasNext'])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [dispatch, state.getIn(['gameSession', 'term']), state.getIn(['gameSession', 'hasNext'])]);\n\n  const onNextClick = useCallback(async () => {\n    setShowingAnswer(null);\n    if (state.getIn(['gameSession','hasNext'])) {\n      await fetchNextWord();\n    } else {\n      showReport();\n    }\n  }, [dispatch, state.getIn(['gameSession', 'term']), state.getIn(['gameSession', 'hasNext'])]);\n\n  const term = state.getIn(['gameSession','term']);\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2 className=\"text-center text-black-50\">Play</h2>\n        {!term &&\n        <p className=\"text-center\">Loading...</p>\n        }\n        {!!term &&\n        <>\n          <div className=\"term mt-5 mb-5\">\n            <div className=\"text-center display-2 text-break\">\n              {term.get('word')}\n            </div>\n            <button className=\"btn btn-sm btn-link\">Meaning >></button>\n          </div>\n\n          <div className=\"actions text-center\">\n            <div className=\"btn-group w-75\">\n              <button className=\"btn btn-light btn-lg text-white btn-circle bg-masculine\"\n                      onClick={() => onSelectAnswer('MAS')}>\n                Der\n              </button>\n              <button className=\"btn btn-light btn-lg text-white btn-circle bg-feminine\"\n                      onClick={() => onSelectAnswer('FEM')}>\n                Die\n              </button>\n              <button className=\"btn btn-light btn-lg text-white btn-circle bg-neuter\"\n                      onClick={() => onSelectAnswer('NEU')}>\n                Das\n              </button>\n            </div>\n            <div className=\"btn-group w-100 mt-5\">\n              <button className=\"btn btn-light btn-sm\"\n                      onClick={() => setShowingAddToCollectionModal(true)}\n              >\n                Learn\n              </button>\n              <button className=\"btn btn-primary btn-sm\"\n                      onClick={onSkipClick}\n              >\n                Skip\n              </button>\n            </div>\n            <div className=\"text-center mt-5\">\n              <button\n                className=\"btn btn-light\"\n                onClick={showReport}\n              >I'm done for now</button>\n            </div>\n          </div>\n        </>\n        }\n      </div>\n      {!!showingAnswer &&\n      <Modal isOpen={true}>\n        <ModalBody>\n          <div className=\"display-2 text-center\" style={{ wordBreak: 'break-word' }}>\n            <span className=\"font-weight-lighter text-muted\">{term.get('word')}</span>, <br/>\n            <span className=\"font-weight-bold\">{showingAnswer.article}</span>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"success\"\n            onClick={onNextClick}\n            className=\"mx-auto\"\n          >Next</Button>\n        </ModalFooter>\n      </Modal>\n      }\n      {!!showingAddToCollectionModal &&\n      <AddToCollectionModal\n        term={term}\n        addToCollection={addToCollection}\n      />\n      }\n      {!!status.busy &&\n      <Loader />\n      }\n    </section>\n  );\n};\n","export const STATUS_OK = 'ok';\nexport const STATUS_ERROR = 'error';\nexport const STATUS_PENDING = 'pending';\n\nexport const SESSION_STATUS_PENDING = 'pending';\nexport const SESSION_STATUS_PLAYING = 'playing';\nexport const SESSION_STATUS_DONE = 'done';\n\nexport const ACTION_LOGIN = 'user/login';\nexport const ACTION_START_SESSION = 'user/start-session';\nexport const ACTION_NEXT_WORD = 'user/next-term';\nexport const ACTION_SHOW_REPORT = 'user/show-report';\nexport const ACTION_LIST_COLLECTIONS = 'user/list-collections';\nexport const ACTION_ADD_TO_COLLECTION = 'user/add-to-collections';\nexport const ACTION_CREATE_COLLECTION = 'user/create-collection';\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  fill: false,\n  lineTension: 0.1,\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0.0,\n  borderJoinStyle: 'miter',\n  pointBorderColor: 'rgba(75,192,192,1)',\n  pointBackgroundColor: '#fff',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointRadius: 1,\n  pointHitRadius: 10,\n};\n\nconst formatDate = (date) => `${date.getMonth() + 1}.${date.getDate()}`;\n\nexport default ({ weeklyPerformance }) => {\n  const labels = weeklyPerformance.map(({ week }) => formatDate(new Date(week * 7 * 86400 * 1000)));\n  const confidence = weeklyPerformance.map(({ confidence_factor }) => (confidence_factor * 100).toFixed(2));\n  const correct = weeklyPerformance.map(({ correct_factor }) => (correct_factor * 100).toFixed(2));\n\n  return (\n    <Line\n      data={{\n        labels,\n        datasets: [\n          {\n            label: 'Correct',\n            data: correct,\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Confidence',\n            data: confidence,\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: '#C0122A',\n            borderColor: '#f3132c',\n          }\n        ]\n      }}\n      width={100}\n      height={40}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { max: 100, min: 0, stepSize: 20 } }],\n        },\n        maintainAspectRatio: true,\n        layout: {\n          padding: 0,\n        }\n      }}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { DispatchContext, StateContext } from \"./context\";\nimport LineChartWeeklyPerformance from \"./LineChartWeeklyPerformance\";\n\n/**\n * Post-session report\n * @returns {*}\n */\nexport default () => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  const session = state.getIn(['report', 'session']);\n  const weeklyPerformance = state.getIn(['report', 'weekly_performance']);\n\n  const sessionRatios = {\n    der: session.getIn(['der', 'corrects']) / (session.getIn(['der', 'corrects']) + session.getIn(['der', 'wrongs'])),\n    die: session.getIn(['die', 'corrects']) / (session.getIn(['die', 'corrects']) + session.getIn(['die', 'wrongs'])),\n    das: session.getIn(['das', 'corrects']) / (session.getIn(['das', 'corrects']) + session.getIn(['das', 'wrongs'])),\n  };\n\n  return (\n    <section className=\"row\">\n      <div className=\"col\">\n        <h2>Report</h2>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3>Session Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">\n                DER\n              </div>\n              <div className=\"progress mr-0\">\n                <div className=\"progress-bar bg-masculine\" role=\"progressbar\"\n                     style={{\n                       width: `${sessionRatios.der * 100}%`,\n                     }} />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">\n                DIE\n              </div>\n              <div className=\"progress mr-0\">\n                <div className=\"progress-bar bg-feminine\" role=\"progressbar\"\n                     style={{\n                       width: `${sessionRatios.die * 100}%`,\n                     }} />\n              </div>\n            </div>\n            <div className=\"progress-group\">\n              <div className=\"progress-label\">\n                DAS\n              </div>\n              <div className=\"progress mr-0\">\n                <div className=\"progress-bar bg-neuter\" role=\"progressbar\"\n                     style={{\n                       width: `${sessionRatios.das * 100}%`,\n                     }} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card mt-4\">\n          <div className=\"card-header\">\n            <h3 className=\"mb-0\">Weekly Report</h3>\n          </div>\n          <div className=\"card-body\">\n            <LineChartWeeklyPerformance weeklyPerformance={weeklyPerformance.toJS()} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport network from \"../components/network\";\nimport {\n  ACTION_LOGIN,\n  ACTION_START_SESSION, SESSION_STATUS_DONE, SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING\n} from \"../components/constants\";\nimport Stage from \"../components/Stage\";\nimport Report from \"../components/Report\";\nimport GoogleLogin from \"react-google-login\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const history = useHistory();\n  const pathParams = useParams();\n\n  useEffect(() => {\n    (async () => {\n      if (pathParams.sessionId) {\n        const { ok, session, error } = await network.get('/api/session');\n        if (!ok) {\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_ERROR, error });\n          return;\n        }\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n      } else {\n        dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n        const { ok, session, error } = await network.get('/api/session');\n        if (!ok) {\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_ERROR, error });\n          return;\n        }\n\n        if (!session) {\n          const { ok: createOK, session: createdSession, error: createError } = await network.post('/api/session');\n          if (!createOK) {\n            dispatch({ type: ACTION_START_SESSION, status: STATUS_ERROR, error: createError });\n            return;\n          }\n\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session: createdSession });\n        } else {\n          dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n        }\n      }\n    })();\n  }, []);\n\n  const onLoginSuccess = useCallback(async (response) => {\n    const { ok, token, profile } = await network.post('/api/auth', {\n      tokenId: response.tokenId,\n    });\n\n    localStorage.setItem('wg:token', token);\n    dispatch({ type: ACTION_LOGIN, status:STATUS_OK, token, profile });\n    history.replace('/collections'); // TODO Should be redirected to a more personl page\n  }, [dispatch]);\n\n  const session = state.getIn(['gameSession']);\n\n  return (\n    <div className=\"container play-page\">\n      {!(session && session.get('id')) &&\n      <section className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn btn-primary btn-lg w-100\"\n            style={{ marginTop: '75%' }}\n          >\n            START\n          </div>\n        </div>\n      </section>\n      }\n      {!!(session && session.get('id') && session.get('status') === SESSION_STATUS_PLAYING) &&\n      <Stage sessionId={session.get('id')} />\n      }\n      {!!(session && session.get('id') && session.get('status') === SESSION_STATUS_DONE) &&\n      <Report sessionId={session.get('id')} />\n      }\n      {!!(session && session.get('id') && session.get('status') === SESSION_STATUS_DONE) &&\n      <section className=\"row\">\n        <div className=\"col\">\n          <Link className=\"btn btn-sm btn-link btn-block\" to=\"/collections\">Back to collections</Link>\n          {!state.getIn(['profile', 'isLoggedIn']) &&\n          <>\n            <GoogleLogin\n                clientId={'976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'}\n                redirectUri={'http://localhost:3000/auth/google'}\n                onSuccess={onLoginSuccess}\n                // responseType={'code'}\n                className=\"mt-5\"\n            />\n            <p className=\"text-muted\">\n              ...to keep track of your progress\n            </p>\n          </>\n          }\n        </div>\n      </section>\n      }\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport { Link, useHistory } from 'react-router-dom';\nimport { DispatchContext } from \"../components/context\";\nimport { ACTION_LOGIN, STATUS_OK } from \"../components/constants\";\nimport network from \"../components/network\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const history = useHistory();\n\n  const onSuccess = useCallback(async (response) => {\n    const { ok, token, profile, default_collection: defaultCollection } = await network.post('/api/auth', {\n      access_code: response.code,\n    });\n\n    localStorage.setItem('wg:token', token);\n    dispatch({ type: ACTION_LOGIN, status:STATUS_OK, token, profile, defaultCollection });\n    history.replace('/collections');\n  }, [dispatch]);\n\n  return (\n    <div className=\"container login-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          <h3 style={{\n            marginTop: '50%',\n          }}>Hallo Deutsch</h3>\n          <GoogleLogin\n            clientId={'976856176051-ietkcknpua13udt2tucm8sbecik7h5rt.apps.googleusercontent.com'}\n            redirectUri={'http://localhost:3000/auth/google'}\n            onSuccess={onSuccess}\n            responseType={'code'}\n          />\n          <p className=\"text-muted\">\n            ...to coup with the insane irregularity in the German language.\n          </p>\n        </div>\n      </section>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6\">\n          <Link\n            className=\"btn btn-primary btn-lg btn-block\"\n            to=\"/play\"\n          >TRY NOW!</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default ({ collections, onReviewClick }) => (\n  <div className=\"list-group list-group-flush\">\n    {collections.map(item => (\n    <div key={item.get('id')} className=\"list-group-item px-1\">\n      {item.get('name')}\n      <div className=\"actions float-right\">\n        <div className=\"btn-group btn-group-sm\">\n          <button\n            className=\"btn btn-sm btn-primary\"\n            onClick={() => onReviewClick(item)}\n          >\n            Review\n          </button>\n        </div>\n      </div>\n    </div>\n    ))}\n  </div>\n);\n","import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Modal, ModalHeader, ModalBody, ModalFooter,\n  Form, FormGroup, Label, Input,\n} from 'reactstrap';\nimport network from \"../components/network\";\nimport { DispatchContext, StateContext } from \"../components/context\";\nimport {\n  ACTION_LIST_COLLECTIONS,\n  ACTION_START_SESSION,\n  ACTION_CREATE_COLLECTION,\n  STATUS_ERROR,\n  STATUS_OK,\n  STATUS_PENDING,\n} from \"../components/constants\";\nimport CollectionList from \"../components/CollectionList\";\n\nexport default (props) => {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const [newCollection, setNewCollection] = useState({ visible: false, name: '' });\n  const newCollectionNameRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      const { ok, collections, myCollections, error } = await Promise.all([\n          network.get('/api/collections'),\n          network.get('/api/me/collections'),\n      ]).then(([{ ok: _ok1, collections }, { ok: _ok2, collections: myCollections }]) => {\n        // NOTE: We are being tolerant here.\n        return {\n          ok: _ok1 || _ok2,\n          collections,\n          myCollections,\n        }}\n      ).catch(error => ({\n        ok: false,\n        error,\n      }));\n\n      if (!ok) {\n        dispatch({ type: ACTION_LIST_COLLECTIONS, status: STATUS_ERROR, error });\n        return;\n      }\n\n      dispatch({ type: ACTION_LIST_COLLECTIONS, status: STATUS_OK,\n        collections,\n        myCollections,\n      });\n    })();\n  }, []);\n\n  const onReviewClick = async (collection) => {\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_PENDING });\n    const { ok, session, error } = await network.post('/api/session', collection.get('is_owned') ?\n            { collection_id: collection.get('id') } :\n            { category_id: collection.get('id') }\n    );\n    if (!ok) {\n      dispatch({ type: ACTION_START_SESSION, status: STATUS_ERROR, error });\n      return;\n    }\n    dispatch({ type: ACTION_START_SESSION, status: STATUS_OK, session });\n    history.push(`/play/${session.id}`);\n  };\n\n  const onNewCollectionCreate = useCallback(async () => {\n    const type = ACTION_CREATE_COLLECTION;\n    dispatch({ type, status: STATUS_PENDING });\n    const { ok, collection, error } = await network.post('/api/me/collections', {\n      name: newCollectionNameRef.current.value,\n    });\n    if (!ok) {\n      return dispatch({ type, status: STATUS_ERROR, error });\n    }\n\n    dispatch({ type, status: STATUS_OK, collection });\n    setNewCollection({ visible: false });\n  }, [dispatch, newCollectionNameRef]);\n\n  const collections = state.get('collections');\n  const myCollections = state.get('myCollections');\n\n  return (\n    <div className=\"container my-collection-list-page\">\n      <section className=\"row\">\n        <div className=\"col\">\n          {!!(myCollections && myCollections.size) &&\n          <>\n            <div className=\"w-100\">\n              <button\n                onClick={() => setNewCollection({ visible: true })}\n                className=\"btn btn-sm btn-light mt-2 float-right\"\n              >Add</button>\n              <h2>My Learning List</h2>\n            </div>\n            <CollectionList collections={myCollections} onReviewClick={onReviewClick} />\n          </>\n          }\n          {!(collections && collections.size) &&\n          <p className=\"text-center\">Loading...</p>\n          }\n          {!!(collections && collections.size) &&\n          <>\n            <h2 className=\"mt-5\">Collections</h2>\n            <CollectionList collections={collections} onReviewClick={onReviewClick} />\n          </>\n          }\n        </div>\n      </section>\n      {!!newCollection.visible &&\n      <Modal isOpen={newCollection.visible}>\n        <ModalHeader toggle={() => setNewCollection({ visible: false })}>New Collection</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input innerRef={newCollectionNameRef} />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            onClick={onNewCollectionCreate}\n            color=\"primary\"\n          >Create</Button>\n        </ModalFooter>\n      </Modal>\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\n\nconst defaultLineDataSeriesOptions = {\n  backgroundColor: 'rgba(63,69,192,0.4)',\n  borderColor: 'rgb(65,121,192)',\n  borderWidth: 1,\n  hoverBackgroundColor: 'rgba(63,69,192,0.4)',\n  hoverBorderColor: 'rgb(65,121,192)',\n};\n\nexport default ({ histogram }) => {\n\n  return (\n    <Bar\n      width={100}\n      height={50}\n      data={{\n        labels: histogram.map(({ seconds }) => seconds),\n        datasets: [\n          {\n            label: 'Correct Response Time (s)',\n            data: histogram.map(({ correct_count }) => correct_count),\n            ...defaultLineDataSeriesOptions,\n          },\n          {\n            label: 'Incorrect Response Time (s)',\n            data: histogram.map(({ wrong_count }) => wrong_count),\n            ...defaultLineDataSeriesOptions,\n            backgroundColor: 'rgba(192,83,102,0.4)',\n            borderColor: 'rgb(192,73,90)',\n          }\n        ],\n      }}\n      options={{\n        scales: {\n          yAxes: [{ ticks: { min: 0 } }],\n          xAxes: [{\n            distribution: 'series',\n          }]\n        }}\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardBody, Badge } from 'reactstrap';\nimport network from \"../components/network\";\nimport LineChartWeeklyPerformance from '../components/LineChartWeeklyPerformance';\nimport BarChartHistogram from '../components/BarChartHistogram';\nimport Loader from '../components/Loader';\n\nexport default (props) => {\n  const [status, setStatus] = useState({ busy: false, error: null });\n  const [report, setReport] = useState({\n    worstPerformers: [],\n    weeklyPerformance: [],\n    histogram: [],\n  });\n  useEffect(() => {\n    (async () => {\n      setStatus({ busy: true });\n      const { ok, report, error } = await network.get('/api/stats?reports=weekly&reports=worst&reports=histogram');\n      if (!ok) {\n        setStatus({ error });\n        return;\n      }\n\n      setStatus({ busy: false });\n      setReport({\n        worstPerformers: report.worst_performers,\n        weeklyPerformance: report.weekly_performance,\n        histogram: report.histogram,\n      });\n    })();\n  }, []);\n\n  return (\n    <div className=\"container report-page\">\n      {!!status.busy &&\n      <Loader />\n      }\n      <section className=\"row\">\n        <div className=\"col\">\n          <h2>Report</h2>\n\n          <Card>\n            <CardHeader>\n              <h5 className=\"mb-0\">Needs improvements</h5>\n            </CardHeader>\n            <CardBody>\n              {report.worstPerformers.map(item => (\n              <Badge\n                pill color=\"warning\" className=\"p-2 mr-2 mb-2\"\n                style={{ opacity: (1.05 - item.confidence_factor) }}\n              >\n                {item.word}\n                <span className=\"pl-2\">{item.correct_factor * 100}%</span>\n              </Badge>\n              ))}\n            </CardBody>\n          </Card>\n\n          <Card className=\"mt-2\">\n            <CardHeader>\n              <h5 className=\"mb-0\">Performance</h5>\n            </CardHeader>\n            <CardBody>\n              {!!(report && report.histogram && report.histogram.length) &&\n              <BarChartHistogram histogram={report.histogram} />\n              }\n              {!!(report && report.weeklyPerformance && report.weeklyPerformance.length) &&\n              <LineChartWeeklyPerformance weeklyPerformance={report.weeklyPerformance}/>\n              }\n            </CardBody>\n          </Card>\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport { Navbar, Nav, NavbarBrand, NavItem } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nexport default () => {\n  const onLogoutClick = useCallback(() => {\n    window.localStorage.clear();\n    window.location.href = '/#/login';\n  }, []);\n\n  return (\n    <Navbar light className=\"bg-light\">\n      <NavbarBrand className=\"font-weight-lighter\">Hallo Deutsch</NavbarBrand>\n      <Nav className=\"mx-auto\">\n        <NavLink\n          to=\"/collections\"\n          exact\n          className=\"nav-item px-2\"\n        >Collections</NavLink>\n        <NavLink\n          to=\"/report\"\n          exact\n          className=\"nav-item px-2\"\n        >Report</NavLink>\n      </Nav>\n      <Nav>\n        <NavItem onClick={onLogoutClick}>Logout</NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport './App.scss';\n\nimport PlayPage from \"./pages/PlayPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport CollectionListPage from \"./pages/CollectionListPage\";\nimport ReportPage from \"./pages/ReportPage\";\nimport AppNav from \"./components/AppNav\";\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport network from \"./components/network\";\nimport { ACTION_LOGIN, STATUS_OK } from \"./components/constants\";\n\nfunction App() {\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n\n  useEffect(() => {\n    (async () => {\n      const isLoggedIn = state.getIn(['profile', 'isLoggedIn']);\n      if (isLoggedIn) {\n        return;\n      } else {\n        const accessToken = localStorage.getItem('wg:token');\n        if (accessToken) {\n          const { ok, profile, default_collection: defaultCollection } = await network.get('/api/auth');\n          if (!ok) {\n            localStorage.clear();\n            return window.location.replace('/#/login');\n          }\n\n          dispatch({ type: ACTION_LOGIN, status: STATUS_OK, profile, defaultCollection });\n        }\n      }\n    })();\n  }, [dispatch, state.getIn(['profile', 'isLoggedIn'])]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/play/:sessionId\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/play\">\n            <AppNav />\n            <PlayPage />\n          </Route>\n          <Route exact path=\"/report\">\n            <AppNav />\n            <ReportPage />\n          </Route>\n          <Route exact path=\"/collections\">\n            <AppNav />\n            <CollectionListPage />\n          </Route>\n          <Route>\n            <Redirect to=\"/login\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { fromJS } from \"immutable\";\nimport {\n  ACTION_CREATE_COLLECTION,\n  ACTION_LIST_COLLECTIONS, ACTION_LOGIN,\n  ACTION_NEXT_WORD,\n  ACTION_SHOW_REPORT,\n  ACTION_START_SESSION, SESSION_STATUS_DONE,\n  SESSION_STATUS_PENDING, SESSION_STATUS_PLAYING,\n  STATUS_ERROR,\n  STATUS_PENDING\n} from \"./constants\";\n\nexport const initialState = fromJS({\n  profile: {\n    isLoggedIn: false,\n  },\n  gameSession: {\n    id: null,\n    status: SESSION_STATUS_PENDING,\n  },\n  collections: [],\n  report: {},\n});\n\nexport default (state, { type, status, ...action }) => {\n  if (status === STATUS_ERROR) {\n    if (action.error && action.error === 'Invalid token') {\n      return state.set('profile', fromJS({\n        isLoggedIn: false,\n      }));\n    }\n    return state;\n  }\n  if (status === STATUS_PENDING) {\n    return state;\n  }\n\n  console.log({ type, action, state: state.toJS() });\n  switch (type) {\n    case ACTION_LOGIN: {\n      return state\n          .set('profile', fromJS({\n            isLoggedIn: true,\n            defaultCollection: action.defaultCollection,\n            ...action.profile,\n          }));\n    }\n    case ACTION_LIST_COLLECTIONS: {\n      return state\n          .set('collections', fromJS(action.collections))\n          .set('myCollections', fromJS(action.myCollections));\n    }\n    case ACTION_CREATE_COLLECTION: {\n      return state\n          .updateIn(['myCollections'], (collections) => collections.unshift(fromJS(action.collection)));\n    }\n    case ACTION_START_SESSION: {\n      return state\n          .setIn(['gameSession'], fromJS({\n            ...action.session,\n            hasNext: true,\n            status: SESSION_STATUS_PLAYING,\n          }));\n    }\n    case ACTION_NEXT_WORD: {\n      return state\n          .setIn(['gameSession', 'term'], fromJS(action.term))\n          .setIn(['gameSession', 'cursor'], action.cursor)\n          .setIn(['gameSession', 'hasNext'], action.hasNext);\n    }\n    case ACTION_SHOW_REPORT: {\n      return state\n          .setIn(['gameSession', 'status'], SESSION_STATUS_DONE)\n          .set('report', fromJS(action.report))\n    }\n    default: return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { DispatchContext, StateContext } from \"./components/context\";\nimport reducer, { initialState } from \"./components/reducer\";\n\nconst Index = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n      <DispatchContext.Provider value={dispatch}>\n        <StateContext.Provider value={state}>\n          <App />\n        </StateContext.Provider>\n      </DispatchContext.Provider>\n  );\n};\n\nReactDOM.render(\n  <Index />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}